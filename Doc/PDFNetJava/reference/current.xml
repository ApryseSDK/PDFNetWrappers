<api>
<package name="com.pdftron.common"
>
<class name="ByteRange"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ByteRange"
 type="com.pdftron.common.ByteRange"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_offset" type="int">
</parameter>
<parameter name="in_size" type="int">
</parameter>
</constructor>
<method name="getEndOffset"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStartOffset"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CommonCompat"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="CommonCompat.Matrix2D"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Concat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Equals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="m" type="long">
</parameter>
</method>
<method name="HashCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="Inverse"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Matrix2DCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Mult"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_x" type="double">
</parameter>
<parameter name="in_y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Multiply"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="m" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RotationMatrix"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="angle" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Scale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Translate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getA"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getB"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getC"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getD"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getH"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getV"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setA"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="a" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setB"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="b" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setC"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="c" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setD"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="d" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setH"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="h" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setV"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CommonCompat.PDFNetIterator"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Clone"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasNext"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="Next"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="NextD"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CommonCompat.RecentlyUsedCache"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AccessDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document_path" type="java.lang.String">
</parameter>
</method>
<method name="GetBitmapPathIfExists"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document_path" type="java.lang.String">
</parameter>
</method>
<method name="InitializeRecentlyUsedCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="num_documents" type="long">
</parameter>
<parameter name="max_absolute_space" type="long">
</parameter>
<parameter name="max_percentage_space" type="double">
</parameter>
</method>
<method name="RemoveDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document_path" type="java.lang.String">
</parameter>
</method>
<method name="RenameDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="old_path" type="java.lang.String">
</parameter>
<parameter name="new_path" type="java.lang.String">
</parameter>
</method>
<method name="ResetCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Matrix2D"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Matrix2D"
 type="com.pdftron.common.Matrix2D"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Matrix2D"
 type="com.pdftron.common.Matrix2D"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="concat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getA"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getB"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getC"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getD"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getH"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getV"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="identityMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="inverse"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="multPoint"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_x" type="double">
</parameter>
<parameter name="in_y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="multiply"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="m" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="postTranslate"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
</method>
<method name="preTranslate"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
</method>
<method name="rotationMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="angle" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="scale"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setA"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setB"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="b" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setC"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setD"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setH"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setV"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="translate"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="zeroMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFNetException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFNetException"
 type="com.pdftron.common.PDFNetException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cond_expr" type="java.lang.String">
</parameter>
<parameter name="line_number" type="long">
</parameter>
<parameter name="file_name" type="java.lang.String">
</parameter>
<parameter name="function" type="java.lang.String">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="PDFNetException"
 type="com.pdftron.common.PDFNetException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cond_expr" type="java.lang.String">
</parameter>
<parameter name="line_number" type="long">
</parameter>
<parameter name="file_name" type="java.lang.String">
</parameter>
<parameter name="function" type="java.lang.String">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="error_code" type="long">
</parameter>
</constructor>
<method name="getCondExpr"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getErrorCode"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFunction"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLineNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="e_error_credentials"
 type="long"
 transient="false"
 volatile="false"
 value="2L"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_error_general"
 type="long"
 transient="false"
 volatile="false"
 value="0L"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_error_network"
 type="long"
 transient="false"
 volatile="false"
 value="1L"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_error_num"
 type="long"
 transient="false"
 volatile="false"
 value="3L"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFNetIterator"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Iterator">
</implements>
<constructor name="PDFNetIterator"
 type="com.pdftron.common.PDFNetIterator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="clone"
 return="java.lang.Object"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasNext"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="remove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RecentlyUsedCache"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RecentlyUsedCache"
 type="com.pdftron.common.RecentlyUsedCache"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="accessDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document_path" type="java.lang.String">
</parameter>
</method>
<method name="accessDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="uuid" type="java.lang.String">
</parameter>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
</method>
<method name="getBitmapPathIfExists"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document_path" type="java.lang.String">
</parameter>
</method>
<method name="hasBeenInitialized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initializeRecentlyUsedCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="num_documents" type="long">
</parameter>
<parameter name="max_absolute_space" type="long">
</parameter>
<parameter name="max_percentage_space" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document_path" type="java.lang.String">
</parameter>
</method>
<method name="renameDocument"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="old_path" type="java.lang.String">
</parameter>
<parameter name="new_path" type="java.lang.String">
</parameter>
</method>
<method name="resetCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
</package>
<package name="com.pdftron.crypto"
>
<class name="DigestAlgorithm"
 extends="java.lang.Enum"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="calculateDigest"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest_algorithm_type" type="com.pdftron.crypto.DigestAlgorithm">
</parameter>
<parameter name="in_message_buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="valueOf"
 return="com.pdftron.crypto.DigestAlgorithm"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="valueToEnum"
 return="com.pdftron.crypto.DigestAlgorithm"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="val" type="int">
</parameter>
</method>
<method name="values"
 return="com.pdftron.crypto.DigestAlgorithm[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="value"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ObjectIdentifier"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ObjectIdentifier"
 type="com.pdftron.crypto.ObjectIdentifier"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<constructor name="ObjectIdentifier"
 type="com.pdftron.crypto.ObjectIdentifier"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_oid_enum" type="com.pdftron.crypto.ObjectIdentifier.Predefined">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ObjectIdentifier"
 type="com.pdftron.crypto.ObjectIdentifier"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest_algorithm_type" type="com.pdftron.crypto.DigestAlgorithm">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ObjectIdentifier"
 type="com.pdftron.crypto.ObjectIdentifier"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_arr" type="int[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRawValue"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_RIPEMD160"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RSA_encryption_PKCS1"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SHA1"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SHA256"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SHA384"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SHA512"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_common_name"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_country_name"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_locality_name"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_organization_name"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_organizational_unit_name"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_state_or_province_name"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_street_address"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_surname"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ObjectIdentifier.Predefined"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.crypto.ObjectIdentifier.Predefined"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.crypto.ObjectIdentifier.Predefined[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="X501AttributeTypeAndValue"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="X501AttributeTypeAndValue"
 type="com.pdftron.crypto.X501AttributeTypeAndValue"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAttributeTypeOID"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStringValue"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="X501DistinguishedName"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="X501DistinguishedName"
 type="com.pdftron.crypto.X501DistinguishedName"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAllAttributesAndValues"
 return="com.pdftron.crypto.X501AttributeTypeAndValue[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStringValuesForAttribute"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_oid" type="com.pdftron.crypto.ObjectIdentifier">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasAttribute"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_oid" type="com.pdftron.crypto.ObjectIdentifier">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="X509Certificate"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="X509Certificate"
 type="com.pdftron.crypto.X509Certificate"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<constructor name="X509Certificate"
 type="com.pdftron.crypto.X509Certificate"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_certificate_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="X509Certificate"
 type="com.pdftron.crypto.X509Certificate"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_cert_buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getData"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getExtensions"
 return="com.pdftron.crypto.X509Extension[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFingerprint"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest_algorithm" type="com.pdftron.crypto.DigestAlgorithm">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFingerprint"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIssuerField"
 return="com.pdftron.crypto.X501DistinguishedName"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNotAfterEpochTime"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNotBeforeEpochTime"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRawX509VersionNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSerialNumber"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSubjectField"
 return="com.pdftron.crypto.X501DistinguishedName"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="X509Extension"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="X509Extension"
 type="com.pdftron.crypto.X509Extension"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getData"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getObjectIdentifier"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isCritical"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
</package>
<package name="com.pdftron.fdf"
>
<class name="FDFCompat"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="FDFCompat.FDFDoc"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateFromXFDF"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FieldCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="field_type" type="int">
</parameter>
<parameter name="field_value" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FieldCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="field_type" type="int">
</parameter>
<parameter name="field_value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFDF"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetField"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFieldIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFieldIteratorBegin"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetID"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPDFFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRoot"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTrailer"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemStreamCreateDoc"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mem_stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemStreamCreateMemFilt"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemStreamWriteData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="m" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MergeAnnots"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="command_file" type="java.lang.String">
</parameter>
<parameter name="permitted_user" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ReadData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="size" type="int">
</parameter>
<parameter name="buf_ptr" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SaveAsXFDF"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SaveAsXFDF"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SaveStream"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPDFFileName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FDFCompat.FDFField"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FDFFieldCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_dict" type="long">
</parameter>
<parameter name="fdf_dict" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FindAttribute"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attrib" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPartialName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSDFObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetValue"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FDFDoc"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sdfdoc" type="com.pdftron.sdf.SDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FDFDoc"
 type="com.pdftron.fdf.FDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFromXFDF"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="field_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="field_type" type="int">
</parameter>
<parameter name="field_value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="field_type" type="int">
</parameter>
<parameter name="field_value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFDF"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getField"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFieldIterator"
 return="com.pdftron.fdf.FDFFieldIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFieldIterator"
 return="com.pdftron.fdf.FDFFieldIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getID"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPDFFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRoot"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFDoc"
 return="com.pdftron.sdf.SDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTrailer"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeAnnots"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command_file" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeAnnots"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="command_file" type="java.lang.String">
</parameter>
<parameter name="permitted_user" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAsXFDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAsXFDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="opts" type="com.pdftron.fdf.XFDFExportOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAsXFDF"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAsXFDF"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opts" type="com.pdftron.fdf.XFDFExportOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPDFFileName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FDFField"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FDFField"
 type="com.pdftron.fdf.FDFField"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_dict" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="fdf_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findAttribute"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attrib" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPartialName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FDFFieldIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="com.pdftron.fdf.FDFField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="XFDFExportOptions"
 extends="com.pdftron.pdf.OptionsBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="XFDFExportOptions"
 type="com.pdftron.fdf.XFDFExportOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="XFDFExportOptions"
 type="com.pdftron.fdf.XFDFExportOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getWriteAnnotationAppearance"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWriteImagedata"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setWriteAnnotationAppearance"
 return="com.pdftron.fdf.XFDFExportOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setWriteImagedata"
 return="com.pdftron.fdf.XFDFExportOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
</package>
<package name="com.pdftron.filters"
>
<class name="ASCII85Encode"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ASCII85Encode"
 type="com.pdftron.filters.ASCII85Encode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ASCII85Encode"
 type="com.pdftron.filters.ASCII85Encode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="line_width" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ASCII85Encode"
 type="com.pdftron.filters.ASCII85Encode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="line_width" type="long">
</parameter>
<parameter name="buf_sz" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
</class>
<class name="CustomFilter"
 extends="com.pdftron.filters.Filter"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CustomFilter"
 type="com.pdftron.filters.CustomFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="close"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserObject"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateInputIterator"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onDestroy"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onFlush"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onRead"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onSeek"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onTell"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onTruncate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="new_size" type="long">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onWrite"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<field name="APPEND_MODE"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="READ_MODE"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SEEK_CUR"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SEEK_END"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SEEK_SET"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="TAG"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;save CustomFilter&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="WRITE_MODE"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="FileDescriptorFilter"
 extends="com.pdftron.filters.CustomFilter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FileDescriptorFilter"
 type="com.pdftron.filters.FileDescriptorFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="obj" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.filters.FileDescriptorFilter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="prev" type="com.pdftron.filters.FileDescriptorFilter">
</parameter>
</method>
<method name="canWriteOnInputFilter"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="createOutputIterator"
 return="com.pdftron.filters.FileDescriptorFilter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getThreadId"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateInputIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onFlush"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onRead"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onSeek"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onTell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onWrite"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="switchToWriteMode"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="FileDescriptorReadOnlyFilter"
 extends="com.pdftron.filters.CustomFilter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FileDescriptorReadOnlyFilter"
 type="com.pdftron.filters.FileDescriptorReadOnlyFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="obj" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateInputIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onFlush"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onRead"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onSeek"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onTell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
<method name="onWrite"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="user_object" type="java.lang.Object">
</parameter>
</method>
</class>
<class name="Filter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="__Create"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attached" type="com.pdftron.filters.Filter">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__SetRefHandle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="attachFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attach_filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="canSeek"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createInputIterator"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flushAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAttachedFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDecodeName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFilePath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSourceFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isInputFilter"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="releaseAttachedFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="seek"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStreamLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="size"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeToFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="append" type="boolean">
</parameter>
</method>
</class>
<class name="FilterReader"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FilterReader"
 type="com.pdftron.filters.FilterReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FilterReader"
 type="com.pdftron.filters.FilterReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="attachFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="count"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flushAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="get"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAttachedFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="peek"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="read"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="seek"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FilterWriter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FilterWriter"
 type="com.pdftron.filters.FilterWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FilterWriter"
 type="com.pdftron.filters.FilterWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="attachFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="count"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flushAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAttachedFilter"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="seek"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeBuffer"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="com.pdftron.filters.FilterReader">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeInt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeLine"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="line" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeUChar"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ch" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FiltersCompat"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="FiltersCompat.ASCII85Encode"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="ASCII85EncodeCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="long">
</parameter>
<parameter name="line_width" type="long">
</parameter>
<parameter name="buf_sz" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FiltersCompat.CustomFilter"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AfterRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="read_c" type="long">
</parameter>
<parameter name="data_handle" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CustomFilterCreate"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="call" type="java.lang.Object">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DestroyCallbackData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FiltersCompat.Filter"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Filter"
 type="com.pdftron.filters.FiltersCompat.Filter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="AttachFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attach_filter" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CanSeek"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateInputIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FlushAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAttachedFilter"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDecodeName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFilePath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSourceFilter"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsInputFilter"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ReleaseAttachedFilter"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Seek"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStreamLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="bytes" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Tell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteToFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="append" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FiltersCompat.FilterReader"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AttachFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="filter" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Count"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FilterReaderCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FilterReaderCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FlushAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Get"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Peek"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Read"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Seek"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Tell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FiltersCompat.FilterWriter"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AttachFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="filter" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Count"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FilterWriterCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FilterWriterCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filter" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FlushAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Seek"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Tell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteBuffer"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="reader" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteInt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteLine"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="s" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteUChar"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ch" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FiltersCompat.FlateEncode"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="long">
</parameter>
<parameter name="comp_level" type="int">
</parameter>
<parameter name="buf_sz" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FiltersCompat.MappedFile"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="FileSize"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MappedFileCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FiltersCompat.MemoryFilter"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemoryFilterCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf_sz" type="long">
</parameter>
<parameter name="is_input" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAsInputFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FlateEncode"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FlateEncode"
 type="com.pdftron.filters.FlateEncode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FlateEncode"
 type="com.pdftron.filters.FlateEncode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="compression_level" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="FlateEncode"
 type="com.pdftron.filters.FlateEncode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="input_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="compression_level" type="int">
</parameter>
<parameter name="buf_sz" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
</class>
<class name="MappedFile"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MappedFile"
 type="com.pdftron.filters.MappedFile"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="fileSize"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_append_mode"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_read_mode"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_write_mode"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="MemoryFilter"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MemoryFilter"
 type="com.pdftron.filters.MemoryFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf_sz" type="long">
</parameter>
<parameter name="is_input" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAsInputFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SecondaryFileFilter"
 extends="com.pdftron.filters.CustomFilter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SecondaryFileFilter"
 type="com.pdftron.filters.SecondaryFileFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<parameter name="obj" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="createOutputIterator"
 return="com.pdftron.filters.SecondaryFileFilter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onCreateInputIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onFlush"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onRead"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onSeek"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="long">
</parameter>
<parameter name="origin" type="int">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onTell"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="onWrite"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bytes" type="byte[]">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
</class>
</package>
<package name="com.pdftron.helpers"
>
<class name="BitmapHelper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BitmapHelper"
 type="com.pdftron.helpers.BitmapHelper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="createArrayFromBitmap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bmp" type="java.awt.Image">
</parameter>
<parameter name="buf" type="int[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
</method>
<method name="drawInRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bitmap" type="java.awt.image.BufferedImage">
</parameter>
<parameter name="g" type="java.awt.Graphics">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
</method>
<method name="getBitmap"
 return="java.awt.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="int[]">
</parameter>
</method>
<method name="getColor"
 return="java.awt.Color"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="arr" type="int[]">
</parameter>
</method>
<method name="getHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bmp" type="java.awt.Image">
</parameter>
</method>
<method name="getWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bmp" type="java.awt.Image">
</parameter>
</method>
</class>
<class name="BitmapHelper.CustomBitmap"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CustomBitmap"
 type="com.pdftron.helpers.BitmapHelper.CustomBitmap"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
</constructor>
<constructor name="CustomBitmap"
 type="com.pdftron.helpers.BitmapHelper.CustomBitmap"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="inputBitmap" type="java.awt.image.BufferedImage">
</parameter>
</constructor>
<method name="create"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="bitmap"
 type="java.awt.image.BufferedImage"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="bitmapArray"
 type="int[]"
 transient="false"
 volatile="false"
 value="null"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="com.pdftron.pdf"
>
<class name="Action"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Action"
 type="com.pdftron.pdf.Action"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_obj" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="Execute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNext"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="__Create"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="createGoto"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest" type="com.pdftron.pdf.Destination">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGoto"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<parameter name="dest" type="com.pdftron.pdf.Destination">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGotoRemote"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file" type="com.pdftron.pdf.FileSpec">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGotoRemote"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file" type="com.pdftron.pdf.FileSpec">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<parameter name="new_window" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createHideField"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="field_list" type="java.lang.String[]">
</parameter>
</method>
<method name="createImportData"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="createJavaScript"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="script" type="java.lang.String">
</parameter>
</method>
<method name="createLaunch"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="createResetForm"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
</method>
<method name="createSubmitForm"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="com.pdftron.pdf.FileSpec">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createURI"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="uri" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="executeKeyStrokeAction"
 return="com.pdftron.pdf.KeyStrokeActionResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.pdf.KeyStrokeEventData">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDest"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFormActionFlag"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="needsWriteLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFormActionFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_GoTo"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_GoTo3DView"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_GoToE"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_GoToR"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Hide"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ImportData"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_JavaScript"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Launch"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Movie"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Named"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Rendition"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ResetForm"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SetOCGState"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Sound"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SubmitForm"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Thread"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Trans"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_URI"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_canonical_format"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_embed_form"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_excl_F_key"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_excl_non_user_annots"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_exclude"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_export_format"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_get_method"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_include_annotations"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_include_append_saves"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_include_no_value_fields"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_submit_coordinates"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_submit_pdf"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_xfdf"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ActionParameter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ActionParameter"
 type="com.pdftron.pdf.ActionParameter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ActionParameter"
 type="com.pdftron.pdf.ActionParameter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ActionParameter"
 type="com.pdftron.pdf.ActionParameter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ActionParameter"
 type="com.pdftron.pdf.ActionParameter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ActionParameter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AdvancedImagingConvertOptions"
 extends="com.pdftron.pdf.OptionsBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AdvancedImagingConvertOptions"
 type="com.pdftron.pdf.AdvancedImagingConvertOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="AdvancedImagingConvertOptions"
 type="com.pdftron.pdf.AdvancedImagingConvertOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getDefaultDPI"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultDPI"
 return="com.pdftron.pdf.AdvancedImagingConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AdvancedImagingModule"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="isModuleAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnalyticsHandlerCallback"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AnalyticsHandlerCallback"
 type="com.pdftron.pdf.AnalyticsHandlerCallback"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="HandleReport"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="report_type" type="int">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="payload" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Annot"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Annot"
 type="com.pdftron.pdf.Annot"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Annot"
 type="com.pdftron.pdf.Annot"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="GetStructParent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="__Create"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="create"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="deleteCustomData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flatten"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getActiveAppearanceState"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAppearance"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAppearance"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_state" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAppearance"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_state" type="int">
</parameter>
<parameter name="app_state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderStyle"
 return="com.pdftron.pdf.Annot.BorderStyle"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorAsCMYK"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorAsGray"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorAsRGB"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContents"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCustomData"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDate"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFlag"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOptionalContent"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPage"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRect"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="trigger" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUniqueID"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVisibleContentBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isMarkup"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opts" type="com.pdftron.pdf.RefreshOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_state" type="int">
</parameter>
<parameter name="app_state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="resize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setActiveAppearanceState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="astate" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_stream" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_stream" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="annot_state" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_stream" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="annot_state" type="int">
</parameter>
<parameter name="app_state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bs" type="com.pdftron.pdf.Annot.BorderStyle">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cpt" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cpt" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="comp_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setContents"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCustomData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="com.pdftron.pdf.Date">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDateToNow"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOptionalContent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="oc" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rot" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStructParent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keyval" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUniqueID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_3D"
 type="int"
 transient="false"
 volatile="false"
 value="24"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Caret"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Circle"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FileAttachment"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FreeText"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Highlight"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Ink"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Line"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Link"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Movie"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Polygon"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Polyline"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Popup"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PrinterMark"
 type="int"
 transient="false"
 volatile="false"
 value="21"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Projection"
 type="int"
 transient="false"
 volatile="false"
 value="26"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Redact"
 type="int"
 transient="false"
 volatile="false"
 value="25"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RichMedia"
 type="int"
 transient="false"
 volatile="false"
 value="27"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Screen"
 type="int"
 transient="false"
 volatile="false"
 value="20"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Sound"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Square"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Squiggly"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Stamp"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_StrikeOut"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Text"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TrapNet"
 type="int"
 transient="false"
 volatile="false"
 value="22"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Underline"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="28"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Watermark"
 type="int"
 transient="false"
 volatile="false"
 value="23"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Widget"
 type="int"
 transient="false"
 volatile="false"
 value="19"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_activate"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_blur"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_down"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_enter"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_exit"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_focus"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_page_close"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_page_invisible"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_page_open"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_page_visible"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_annot_up"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_down"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_hidden"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_invisible"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_locked"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_locked_contents"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_rotate"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_view"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_zoom"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_normal"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_print"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_read_only"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rollover"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_toggle_no_view"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Annot.BorderStyle"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BorderStyle"
 type="com.pdftron.pdf.Annot.BorderStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="int">
</parameter>
<parameter name="b_width" type="int">
</parameter>
<parameter name="b_hr" type="int">
</parameter>
<parameter name="b_vr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="BorderStyle"
 type="com.pdftron.pdf.Annot.BorderStyle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="int">
</parameter>
<parameter name="b_width" type="int">
</parameter>
<parameter name="b_hr" type="int">
</parameter>
<parameter name="b_vr" type="int">
</parameter>
<parameter name="b_dash" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDash"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHR"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVR"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDash"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dash" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHR"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVR"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_beveled"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_dashed"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_inset"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_solid"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_underline"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="AssertHandlerCallback"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AssertHandlerCallback"
 type="com.pdftron.pdf.AssertHandlerCallback"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="HandleAssert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="condition" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="line_number" type="int">
</parameter>
</method>
</class>
<class name="BlackBoxContext"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="BlackBoxContext"
 type="com.pdftron.pdf.BlackBoxContext"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="dispose"
 return="void"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="doOperation"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instructions" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_failure"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_incomplete"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_success"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Bookmark"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Bookmark"
 type="com.pdftron.pdf.Bookmark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Bookmark"
 type="com.pdftron.pdf.Bookmark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_bookmark_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="addChild"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addChild"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_bookmark" type="com.pdftron.pdf.Bookmark">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addNext"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addNext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_bookmark" type="com.pdftron.pdf.Bookmark">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addPrev"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addPrev"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_bookmark" type="com.pdftron.pdf.Bookmark">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="delete"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="find"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColor"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFirstChild"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFlags"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIndent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLastChild"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNext"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpenCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParent"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPrev"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitleObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasChildren"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isOpen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_r" type="double">
</parameter>
<parameter name="in_g" type="double">
</parameter>
<parameter name="in_b" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlags"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_flags" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_open" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlink"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CADConvertOptions"
 extends="com.pdftron.pdf.OptionsBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CADConvertOptions"
 type="com.pdftron.pdf.CADConvertOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="CADConvertOptions"
 type="com.pdftron.pdf.CADConvertOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="addSheets"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAllowThinLines"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAutoRotate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackgroundColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorMode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIncludeModel"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMaxXrefDepth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRasterDPI"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUseScaleFromDocument"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getZoomToExtents"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAllowThinLines"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAutoRotate"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBackgroundColor"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorMode"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIncludeModel"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMaxXrefDepth"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageHeight"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageWidth"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRasterDPI"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUseScaleFromDocument"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setZoomToExtents"
 return="com.pdftron.pdf.CADConvertOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CADModule"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="isModuleAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CharData"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getCharCode"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCharData"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGlyphX"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGlyphY"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CharIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="com.pdftron.pdf.CharData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ColorPt"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ColorPt"
 type="com.pdftron.pdf.ColorPt"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ColorPt"
 type="com.pdftron.pdf.ColorPt"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="z" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ColorPt"
 type="com.pdftron.pdf.ColorPt"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="z" type="double">
</parameter>
<parameter name="w" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="get"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="colorant_index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="z" type="double">
</parameter>
<parameter name="w" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="colorant_index" type="int">
</parameter>
<parameter name="colorant_value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorantNum"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ColorSpace"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ColorSpace"
 type="com.pdftron.pdf.ColorSpace"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color_space" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="convert2CMYK"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_color" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convert2Gray"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_color" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convert2RGB"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_color" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDeviceCMYK"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDeviceGray"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDeviceRGB"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createICCFromBuffer"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createICCFromFile"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createICCFromFilter"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createPattern"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAlternateColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBaseColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color_idx" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBaseColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs_type" type="int">
</parameter>
<parameter name="cs" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLookupTable"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTintFunction"
 return="com.pdftron.pdf.Function"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="out_colorants" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initComponentRanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="out_decode_low" type="double[]">
</parameter>
<parameter name="out_decode_range" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isAll"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isNone"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_cal_gray"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_cal_rgb"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_device_cmyk"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_device_gray"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_device_n"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_device_rgb"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_icc"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_indexed"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_lab"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_pattern"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_separation"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<interface name="ConnectionErrorProc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onConnectionError"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="error_code" type="int">
</parameter>
<parameter name="switch_to_demo" type="boolean">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="ContentReplacer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ContentReplacer"
 type="com.pdftron.pdf.ContentReplacer"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="addImage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="target_region" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="replacement_image" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="template_text" type="java.lang.String">
</parameter>
<parameter name="replacement_text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="target_region" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="replacement_text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="process"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMatchStrings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="start_str" type="java.lang.String">
</parameter>
<parameter name="end_str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ConversionOptions"
 extends="com.pdftron.pdf.OptionsBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ConversionOptions"
 type="com.pdftron.pdf.ConversionOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="ConversionOptions"
 type="com.pdftron.pdf.ConversionOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getFileExtension"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFileExtension"
 return="com.pdftron.pdf.ConversionOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Convert"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Convert"
 type="com.pdftron.pdf.Convert"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="appendUniversalConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="initial_conversion" type="com.pdftron.pdf.DocumentConversion">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="appendUniversalConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="initial_conversion" type="com.pdftron.pdf.DocumentConversion">
</parameter>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createBlackBoxContext"
 return="com.pdftron.pdf.BlackBoxContext"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createBlackBoxContextConvert"
 return="com.pdftron.pdf.BlackBoxContext"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="src_filename" type="java.lang.String">
</parameter>
<parameter name="dest_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createReflow"
 return="com.pdftron.pdf.Reflow"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="json_zones" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromCAD"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="cad_options" type="com.pdftron.pdf.CADConvertOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromDICOM"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="advancedimaging_options" type="com.pdftron.pdf.AdvancedImagingConvertOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromEmf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="text_options" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_data" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fromXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="officeToPdf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="officeToPdf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="requiresPrinter"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="streamingPdfConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="streamingPdfConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="streamingPdfConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="streamingPdfConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEmf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEmf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="html_options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="epub_options" type="com.pdftron.pdf.Convert.EPUBOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="html_options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<parameter name="epub_options" type="com.pdftron.pdf.Convert.EPUBOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="html_options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="epub_options" type="com.pdftron.pdf.Convert.EPUBOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="html_options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<parameter name="epub_options" type="com.pdftron.pdf.Convert.EPUBOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toExcel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toExcel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.ExcelOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toExcel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toExcel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.ExcelOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.HTMLOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toPdf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toPowerPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toPowerPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.PowerPointOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toPowerPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toPowerPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.PowerPointOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="in_options" type="com.pdftron.pdf.Convert.SVGOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="in_options" type="com.pdftron.pdf.Convert.SVGOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.TiffOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.TiffOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toWord"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toWord"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.WordOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toWord"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toWord"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_path" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.WordOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XODOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XODOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XODOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXod"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XODOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XPSOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_inputFilename" type="java.lang.String">
</parameter>
<parameter name="in_outputFilename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="toXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_inputFilename" type="java.lang.String">
</parameter>
<parameter name="in_outputFilename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.Convert.XPSOutputOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="universalConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="universalConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.ConversionOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="wordToPdf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="wordToPdf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="wordToPdfConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="wordToPdfConversion"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="in_stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="options" type="com.pdftron.pdf.WordToPDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_default"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fast"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_high_quality"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_keep_all"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_keep_most"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_simple"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_strict"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_very_strict"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.EPUBOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="EPUBOutputOptions"
 type="com.pdftron.pdf.Convert.EPUBOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setExpanded"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="expanded" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setReuseCover"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reuse" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Convert.ExcelOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ExcelOutputOptions"
 type="com.pdftron.pdf.Convert.ExcelOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="language" type="com.pdftron.pdf.Convert.OutputOptionsOCR.LanguageChoice">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNonTableContent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="non_tables" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPDFPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_from" type="int">
</parameter>
<parameter name="page_to" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSingleSheet"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="single_sheet" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Convert.HTMLOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HTMLOutputOptions"
 type="com.pdftron.pdf.Convert.HTMLOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setConnectHyphens"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="connect" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setContentReflowSetting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reflow" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDisableVerticalSplit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="disable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEmbedImages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setExternalLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFileConversionTimeoutSeconds"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="seconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInternalLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJPGQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="language" type="com.pdftron.pdf.Convert.OutputOptionsOCR.LanguageChoice">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMaximumImagePixels"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_pixels" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNoPageWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPDFPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_from" type="int">
</parameter>
<parameter name="page_to" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPreferJPG"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="prefer_jpg" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSearchableImageSetting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="setting" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSimpleLists"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSimplifyText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_fixed_position"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ocr_image"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ocr_image_text"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ocr_off"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ocr_text"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_reflow_full"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_reflow_paragraphs"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.OutputOptionsOCR"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OutputOptionsOCR"
 type="com.pdftron.pdf.Convert.OutputOptionsOCR"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="Convert.OutputOptionsOCR.LanguageChoice"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.Convert.OutputOptionsOCR.LanguageChoice"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.Convert.OutputOptionsOCR.LanguageChoice[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Convert.PowerPointOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PowerPointOutputOptions"
 type="com.pdftron.pdf.Convert.PowerPointOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="language" type="com.pdftron.pdf.Convert.OutputOptionsOCR.LanguageChoice">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPDFPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_from" type="int">
</parameter>
<parameter name="page_to" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Convert.SVGOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SVGOutputOptions"
 type="com.pdftron.pdf.Convert.SVGOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setAnnots"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCompress"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="svgz" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreateXmlWrapper"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xml" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDtd"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dtd" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEmbedFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="embed_fonts" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEmbedImages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="embed_images" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlattenContent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flatten" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlattenThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIndividualCharPlacement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="individual_char_placement" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNoFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="no_fonts" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNoUnicode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="no_unicode" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOutputThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="include_thumbs" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRemoveCharPlacement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="remove_char_placement" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSvgFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="svg_fonts" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThumbnailSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_op_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_on"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_pdfx_on"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.TiffOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TiffOutputOptions"
 type="com.pdftron.pdf.Convert.TiffOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setAnnots"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCMYK"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDither"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="gamma" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setGray"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHRes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hres" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMono"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_desc" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPalettized"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintmode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rotate" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmooth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTransparentPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVRes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vres" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_art"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bleed"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_crop"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_media"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_on"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_pdfx_on"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_trim"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.WordOutputOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="WordOutputOptions"
 type="com.pdftron.pdf.Convert.WordOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setBookmarkConversionMethod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="method" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setConnectHyphens"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="connect" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDisableVerticalSplit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="disable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDoNotAdjustFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="do_not_adjust" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFileConversionTimeoutSeconds"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="seconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJPGQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="language" type="com.pdftron.pdf.Convert.OutputOptionsOCR.LanguageChoice">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMatchPDFLineBreaks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="match" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPDFPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_from" type="int">
</parameter>
<parameter name="page_to" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrioritizeVisualAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="appearance" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSearchableImageSetting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="setting" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setShrinkCharacterSpacingToPreventWrap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="shrink" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setWordOutputFormat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="format" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_bm_extract"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bm_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bm_page"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ocr_image"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ocr_image_text"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ocr_off"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ocr_text"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_wof_doc"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_wof_docx"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_wof_rtf"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_wof_txt"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.XODOutputOptions"
 extends="com.pdftron.pdf.Convert.XPSOutputCommonOptions"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="XODOutputOptions"
 type="com.pdftron.pdf.Convert.XODOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="UseSilverlightFlashCompatible"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="compatible" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAnnotationOutput"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_output" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setElementLimit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="element_limit" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEncryptPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pass" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setExternalParts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="generate" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlattenContent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flatten" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlattenThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJPGQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMaximumImagePixels"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_pixels" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpacityMaskWorkaround"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opacity" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOutputThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="include_thumbs" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPreferJPG"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="prefer_jpg" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSilverlightTextWorkaround"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="workaround" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThumbnailSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThumbnailSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="regular_size" type="int">
</parameter>
<parameter name="large_size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_external_xfdf"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flatten"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_internal_xfdf"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.XPSOutputCommonOptions"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="XPSOutputCommonOptions"
 type="com.pdftron.pdf.Convert.XPSOutputCommonOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="generateURLLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="generate" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="print_mode" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRenderPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="render" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThickenLines"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="thicken" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_op_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_on"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_pdfx_on"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Convert.XPSOutputOptions"
 extends="com.pdftron.pdf.Convert.XPSOutputCommonOptions"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="XPSOutputOptions"
 type="com.pdftron.pdf.Convert.XPSOutputOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setOpenXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="openxps" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ConvertPrinter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ConvertPrinter"
 type="com.pdftron.pdf.ConvertPrinter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPrinterName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="install"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_printerName" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="install"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isInstalled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_printerName" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isInstalled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrinterName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_printerName" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrinterName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="uninstall"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_convert_printer_auto"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_convert_printer_interop_only"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_convert_printer_prefer_builtin_converter"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_convert_printer_printer_only"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="CubicCurveBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CubicCurveBuilder"
 type="com.pdftron.pdf.CubicCurveBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="addSourcePoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCubicXCoord"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCubicYCoord"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="numCubicPoints"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="numSourcePoints"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<interface name="CurrentPageProc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="reportCurrentPage"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="current_page" type="int">
</parameter>
<parameter name="num_pages" type="int">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="Date"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Date"
 type="com.pdftron.pdf.Date"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Date"
 type="com.pdftron.pdf.Date"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Date"
 type="com.pdftron.pdf.Date"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="year" type="short">
</parameter>
<parameter name="month" type="byte">
</parameter>
<parameter name="day" type="byte">
</parameter>
<parameter name="hour" type="byte">
</parameter>
<parameter name="minute" type="byte">
</parameter>
<parameter name="second" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="attach"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDay"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHour"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMinute"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMonth"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSecond"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUT"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUTHour"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUTMinutes"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getYear"
 return="short"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="seUTMinutes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ut_minutes" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCurrentTime"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDay"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="day" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHour"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hour" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMinute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minute" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMonth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="month" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSecond"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="second" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUT"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ut" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUTHour"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ut_hour" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setYear"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="year" type="short">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Destination"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Destination"
 type="com.pdftron.pdf.Destination"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="createFit"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitB"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitBH"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="top" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitBV"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="left" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitH"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="top" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitR"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="left" type="double">
</parameter>
<parameter name="bottom" type="double">
</parameter>
<parameter name="right" type="double">
</parameter>
<parameter name="top" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFitV"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="left" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createXYZ"
 return="com.pdftron.pdf.Destination"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="left" type="double">
</parameter>
<parameter name="top" type="double">
</parameter>
<parameter name="zoom" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getExplicitDestObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFitType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPage"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Fit"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitB"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitBH"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitBV"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitH"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitR"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitV"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_XYZ"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="DiffOptions"
 extends="com.pdftron.pdf.OptionsBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DiffOptions"
 type="com.pdftron.pdf.DiffOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="DiffOptions"
 type="com.pdftron.pdf.DiffOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getAddGroupAnnots"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBlendMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorA"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorB"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAddGroupAnnots"
 return="com.pdftron.pdf.DiffOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBlendMode"
 return="com.pdftron.pdf.DiffOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorA"
 return="com.pdftron.pdf.DiffOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorB"
 return="com.pdftron.pdf.DiffOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="DigitalSignatureField"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DigitalSignatureField"
 type="com.pdftron.pdf.DigitalSignatureField"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.DigitalSignatureField"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="calculateDigest"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="calculateDigest"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest_algorithm_type" type="com.pdftron.crypto.DigestAlgorithm">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="certifyOnNextSave"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pkcs12_keyfile_path" type="java.lang.String">
</parameter>
<parameter name="in_password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="certifyOnNextSave"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pkcs12_buffer" type="byte[]">
</parameter>
<parameter name="in_password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="certifyOnNextSaveWithCustomHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_signature_handler_id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="clearSignature"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSigDictForCustomCertification"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filter_name" type="java.lang.String">
</parameter>
<parameter name="in_subfilter_type" type="com.pdftron.pdf.DigitalSignatureField.SubFilterType">
</parameter>
<parameter name="in_contents_size_to_reserve" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSigDictForCustomSigning"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filter_name" type="java.lang.String">
</parameter>
<parameter name="in_subfilter_type" type="com.pdftron.pdf.DigitalSignatureField.SubFilterType">
</parameter>
<parameter name="in_contents_size_to_reserve" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableLTVOfflineVerification"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_verification_result" type="com.pdftron.pdf.VerificationResult">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateCMSSignature"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_signer_cert" type="com.pdftron.crypto.X509Certificate">
</parameter>
<parameter name="in_chain_certs_buf" type="com.pdftron.crypto.X509Certificate[]">
</parameter>
<parameter name="in_digest_algorithm_oid" type="com.pdftron.crypto.ObjectIdentifier">
</parameter>
<parameter name="in_signature_algorithm_oid" type="com.pdftron.crypto.ObjectIdentifier">
</parameter>
<parameter name="in_signature_value_buf" type="byte[]">
</parameter>
<parameter name="in_signedattributes_buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateCMSSignedAttributes"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest_buf" type="byte[]">
</parameter>
<parameter name="in_custom_signedattributes_buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateCMSSignedAttributes"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest_buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateContentsWithEmbeddedTimestamp"
 return="com.pdftron.pdf.TimestampingResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_timestamping_config" type="com.pdftron.pdf.TimestampingConfiguration">
</parameter>
<parameter name="in_timestamp_response_verification_options" type="com.pdftron.pdf.VerificationOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateESSSigningCertPAdESAttribute"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_signer_cert" type="com.pdftron.crypto.X509Certificate">
</parameter>
<parameter name="in_digest_algorithm_type" type="com.pdftron.crypto.DigestAlgorithm">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getByteRanges"
 return="com.pdftron.common.ByteRange[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCert"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCertCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCertPathsFromCMS"
 return="com.pdftron.crypto.X509Certificate[][]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContactInfo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDocumentPermissions"
 return="com.pdftron.pdf.DigitalSignatureField.DocumentPermissions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLocation"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLockedFields"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getReason"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSignatureName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSignerCertFromCMS"
 return="com.pdftron.crypto.X509Certificate"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSigningTime"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSubFilter"
 return="com.pdftron.pdf.DigitalSignatureField.SubFilterType"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasCryptographicSignature"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasVisibleAppearance"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isCertification"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLockedByDigitalSignature"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setContactInfo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_contact_info" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDocumentPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_perms" type="com.pdftron.pdf.DigitalSignatureField.DocumentPermissions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFieldPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_action" type="com.pdftron.pdf.DigitalSignatureField.FieldPermissions">
</parameter>
<parameter name="in_field_names" type="java.lang.String[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFieldPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_action" type="com.pdftron.pdf.DigitalSignatureField.FieldPermissions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLocation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_location" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPreferredDigestAlgorithm"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest_algorithm_type" type="com.pdftron.crypto.DigestAlgorithm">
</parameter>
<parameter name="in_make_mandatory" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPreferredDigestAlgorithm"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest_algorithm_type" type="com.pdftron.crypto.DigestAlgorithm">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setReason"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_reason" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSigDictTimeOfSigning"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_date" type="com.pdftron.pdf.Date">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="signDigest"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest" type="byte[]">
</parameter>
<parameter name="in_pkcs12_keyfile_path" type="java.lang.String">
</parameter>
<parameter name="in_keyfile_password" type="java.lang.String">
</parameter>
<parameter name="in_pades_mode" type="boolean">
</parameter>
<parameter name="in_digest_algorithm_type" type="com.pdftron.crypto.DigestAlgorithm">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="signDigest"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_digest" type="byte[]">
</parameter>
<parameter name="in_pkcs12_buffer" type="byte[]">
</parameter>
<parameter name="in_keyfile_password" type="java.lang.String">
</parameter>
<parameter name="in_pades_mode" type="boolean">
</parameter>
<parameter name="in_digest_algorithm_type" type="com.pdftron.crypto.DigestAlgorithm">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="signOnNextSave"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pkcs12_keyfile_path" type="java.lang.String">
</parameter>
<parameter name="in_password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="signOnNextSave"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pkcs12_buffer" type="byte[]">
</parameter>
<parameter name="in_password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="signOnNextSaveWithCustomHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_signature_handler_id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="timestampOnNextSave"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_timestamping_config" type="com.pdftron.pdf.TimestampingConfiguration">
</parameter>
<parameter name="in_timestamp_response_verification_options" type="com.pdftron.pdf.VerificationOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="useSubFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_subfilter_type" type="com.pdftron.pdf.DigitalSignatureField.SubFilterType">
</parameter>
<parameter name="in_make_mandatory" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="useSubFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_subfilter_type" type="com.pdftron.pdf.DigitalSignatureField.SubFilterType">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="verify"
 return="com.pdftron.pdf.VerificationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_verification_options" type="com.pdftron.pdf.VerificationOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="DigitalSignatureField.DocumentPermissions"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.DigitalSignatureField.DocumentPermissions"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.DigitalSignatureField.DocumentPermissions[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DigitalSignatureField.FieldPermissions"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.DigitalSignatureField.FieldPermissions"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.DigitalSignatureField.FieldPermissions[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DigitalSignatureField.SubFilterType"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.DigitalSignatureField.SubFilterType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.DigitalSignatureField.SubFilterType[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DigitalSignatureFieldIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="com.pdftron.pdf.DigitalSignatureField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DisallowedChange"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DisallowedChange"
 type="com.pdftron.pdf.DisallowedChange"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getObjNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="com.pdftron.pdf.DisallowedChange.Type"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTypeAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="DisallowedChange.Type"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.DisallowedChange.Type"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.DisallowedChange.Type[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DocumentConversion"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DocumentConversion"
 type="com.pdftron.pdf.DocumentConversion"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.DocumentConversion"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="cancelConversion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convertNextPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getConversionStatus"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getErrorString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumConvertedPages"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumWarnings"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getProgress"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getProgressLabel"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWarningString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasProgressTracking"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isCancelled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tryConvert"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_failure"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_incomplete"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_success"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Element"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBitsPerComponent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCTM"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCharIterator"
 return="com.pdftron.pdf.CharIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDecodeArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGState"
 return="com.pdftron.pdf.GState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageData"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageDataSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageRenderingIntent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMCPropertyDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMCTag"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMask"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNewTextLineOffset"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParentStructElement"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPathData"
 return="com.pdftron.pdf.PathData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPosAdjustment"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getShading"
 return="com.pdftron.pdf.Shading"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStructMCID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextData"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextLength"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getXObject"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasTextMatrix"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isClipWindingFill"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isClippingPath"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isFilled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isImageInterpolate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isImageMask"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isOCVisible"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isStroked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isWindingFill"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setClipWindingFill"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="winding_rule" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNewTextLineOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dx" type="double">
</parameter>
<parameter name="dy" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathClip"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clip" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.pdf.PathData">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathFill"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fill" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathStroke"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stroke" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPosAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="adjust" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextMatrix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextMatrix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setWindingFill"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="winding_rule" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="updateTextMetrics"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_form"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_group_begin"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_group_end"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_image"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_inline_image"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_marked_content_begin"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_marked_content_end"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_marked_content_point"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_path"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_shading"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_begin"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_end"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_new_line"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ElementBuilder"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ElementBuilder"
 type="com.pdftron.pdf.ElementBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="arcTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="start" type="double">
</parameter>
<parameter name="extent" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="arcTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xr" type="double">
</parameter>
<parameter name="yr" type="double">
</parameter>
<parameter name="rx" type="double">
</parameter>
<parameter name="isLargeArc" type="boolean">
</parameter>
<parameter name="sweep" type="boolean">
</parameter>
<parameter name="endX" type="double">
</parameter>
<parameter name="endY" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="closePath"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createEllipse"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cx" type="double">
</parameter>
<parameter name="cy" type="double">
</parameter>
<parameter name="rx" type="double">
</parameter>
<parameter name="ry" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createForm"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="form" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createForm"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createForm"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGroupBegin"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createGroupEnd"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImage"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="img" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImage"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="img" type="com.pdftron.pdf.Image">
</parameter>
<parameter name="mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImage"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="img" type="com.pdftron.pdf.Image">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="hscale" type="double">
</parameter>
<parameter name="vscale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createMarkedContentBegin"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tag" type="java.lang.String">
</parameter>
<parameter name="property_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createMarkedContentBeginInlineProperties"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tag" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createMarkedContentEnd"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createMarkedContentPoint"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tag" type="java.lang.String">
</parameter>
<parameter name="property_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createMarkedContentPointInlineProperties"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tag" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createPath"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="points" type="double[]">
</parameter>
<parameter name="seg_types" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createRect"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createShading"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sh" type="com.pdftron.pdf.Shading">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createShapedTextRun"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_data" type="com.pdftron.pdf.ShapedText">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextBegin"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font" type="com.pdftron.pdf.Font">
</parameter>
<parameter name="font_sz" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextBegin"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextEnd"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextNewLine"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dx" type="double">
</parameter>
<parameter name="dy" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextNewLine"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextRun"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_data" type="java.lang.String">
</parameter>
<parameter name="font" type="com.pdftron.pdf.Font">
</parameter>
<parameter name="font_sz" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTextRun"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_data" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createUnicodeTextRun"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_data" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="curveTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cx1" type="double">
</parameter>
<parameter name="cy1" type="double">
</parameter>
<parameter name="cx2" type="double">
</parameter>
<parameter name="cy2" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ellipse"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cx" type="double">
</parameter>
<parameter name="cy" type="double">
</parameter>
<parameter name="rx" type="double">
</parameter>
<parameter name="ry" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="lineTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="moveTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pathBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pathEnd"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="reset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="reset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="gs" type="com.pdftron.pdf.GState">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ElementReader"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ElementReader"
 type="com.pdftron.pdf.ElementReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="content_stream" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="content_stream" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="resource_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="content_stream" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="resource_dict" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="clearChangeList"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="current"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="end"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="formBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getChangesIterator"
 return="com.pdftron.pdf.GSChangesIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorSpace"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="getExtGState"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="getFont"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPattern"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="getShading"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="getXObject"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="isChanged"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="gstate_attrib" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="next"
 return="com.pdftron.pdf.Element"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="patternBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fill_pattern" type="boolean">
</parameter>
<parameter name="reset_ctm_tfm" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="patternBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fill_pattern" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="type3FontBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_data" type="com.pdftron.pdf.CharData">
</parameter>
<parameter name="resource_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="type3FontBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_data" type="com.pdftron.pdf.CharData">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ElementWriter"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ElementWriter"
 type="com.pdftron.pdf.ElementWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="write_mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="write_mode" type="int">
</parameter>
<parameter name="page_coord_sys" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="write_mode" type="int">
</parameter>
<parameter name="page_coord_sys" type="boolean">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="write_mode" type="int">
</parameter>
<parameter name="page_coord_sys" type="boolean">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<parameter name="resources" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="streamobj_to_update" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="streamobj_to_update" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="streamobj_to_update" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<parameter name="resources" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="end"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultGState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="com.pdftron.pdf.ElementReader">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeBuffer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeElement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="element" type="com.pdftron.pdf.Element">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeGStateChanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="element" type="com.pdftron.pdf.Element">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writePlacedElement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="element" type="com.pdftron.pdf.Element">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="writeString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_overlay"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_replacement"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_underlay"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="EmbeddedTimestampVerificationResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="EmbeddedTimestampVerificationResult"
 type="com.pdftron.pdf.EmbeddedTimestampVerificationResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCMSDigestStatus"
 return="com.pdftron.pdf.VerificationResult.DigestStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCMSDigestStatusAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCMSSignatureDigestAlgorithm"
 return="com.pdftron.crypto.DigestAlgorithm"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMessageImprintDigestAlgorithm"
 return="com.pdftron.crypto.DigestAlgorithm"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMessageImprintDigestStatus"
 return="com.pdftron.pdf.VerificationResult.DigestStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMessageImprintDigestStatusAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTrustStatus"
 return="com.pdftron.pdf.VerificationResult.TrustStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTrustStatusAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTrustVerificationResult"
 return="com.pdftron.pdf.TrustVerificationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUnsupportedFeatures"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVerificationStatus"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasTrustVerificationResult"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<interface name="ErrorReportProc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="reportError"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="ExternalAnnotManager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ExternalAnnotManager"
 type="com.pdftron.pdf.ExternalAnnotManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLastJSON"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLastXFDF"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNextRedoInfo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNextUndoInfo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="jumpToAnnotWithID"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeXFDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf_content" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="redo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="takeSnapshot"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="payload" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="undo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Field"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Field"
 type="com.pdftron.pdf.Field"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="eraseAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findInheritedAttribute"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attrib" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flatten"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultAppearance"
 return="com.pdftron.pdf.GState"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultValueAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFlag"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getJustification"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMaxLen"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpt"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opt_idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOptCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPartialName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="trigger" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUpdateRect"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getValueAsBool"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getValueAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isAnnot"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLockedByDigitalSignature"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rename"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJustification"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="j" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMaxLen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_len" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setValue"
 return="com.pdftron.pdf.ViewChangeCollection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setValue"
 return="com.pdftron.pdf.ViewChangeCollection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setValue"
 return="com.pdftron.pdf.ViewChangeCollection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_checked" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="useSignatureHandler"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="signature_handler_id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_action_trigger_calculate"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_format"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_keystroke"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_validate"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_button"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_centered"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_check"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_choice"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_comb"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_combo"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_commit_on_sel_change"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_edit"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_file_select"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_left_justified"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_multiline"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_multiselect"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_export"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_scroll"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_spellcheck"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_password"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_pushbutton_flag"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_radio"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_radio_flag"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_radios_in_unison"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_read_only"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_required"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rich_text"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_right_justified"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_signature"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_sort"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_toggle_to_off"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="FieldIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="FileSpec"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FileSpec"
 type="com.pdftron.pdf.FileSpec"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="f" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="create"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createURL"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="save_as" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFileData"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFilePath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDesc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="desc" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<interface name="FindTextProc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="handleFindText"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="success" type="boolean">
</parameter>
<parameter name="select" type="com.pdftron.pdf.PDFViewCtrl.Selection">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="Flattener"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Flattener"
 type="com.pdftron.pdf.Flattener"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="Process"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJPGQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMaximumImagePixels"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_pixels" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPreferJPG"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jpg" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_default"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fast"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_keep_all"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_keep_most"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_simple"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_strict"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_very_strict"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Font"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Font"
 type="com.pdftron.pdf.Font"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Font"
 type="com.pdftron.pdf.Font"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="GetDescriptor"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__Create"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="create"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="from" type="com.pdftron.pdf.Font">
</parameter>
<parameter name="char_set" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="char_set" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<parameter name="ttc_font_index" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCIDTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<parameter name="ttc_font_index" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createTrueTypeFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createType1Font"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createType1Font"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAscent"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCharCodeIterator"
 return="com.pdftron.pdf.FontCharCodeIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDescent"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEmbeddedFont"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEmbeddedFontBufSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEmbeddedFontName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEncoding"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFamilyName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGlyphPath"
 return="com.pdftron.pdf.PathData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
<parameter name="conics2cubics" type="boolean">
</parameter>
</method>
<method name="getGlyphPath"
 return="com.pdftron.pdf.PathData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
<parameter name="conics2cubics" type="boolean">
</parameter>
<parameter name="transform" type="com.pdftron.common.Matrix2D">
</parameter>
</method>
<method name="getMaxWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMissingWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getShapedText"
 return="com.pdftron.pdf.ShapedText"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_to_shape" type="java.lang.String">
</parameter>
</method>
<method name="getStandardType1FontType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType3FontMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType3GlyphStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
</method>
<method name="getUnitsPerEm"
 return="short"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isAllCap"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isCFF"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isEmbedded"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isFixedWidth"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isForceBold"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isHorizontalMode"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isItalic"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isSerif"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isSimple"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isSymbolic"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mapToUnicode"
 return="char[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_code" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_CIDType0"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CIDType2"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_IdentityH"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Indices"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_MMType1"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TrueType"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Type0"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Type1"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Type3"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_courier"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_courier_bold"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_courier_bold_oblique"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_courier_oblique"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_helvetica"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_helvetica_bold"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_helvetica_bold_oblique"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_helvetica_oblique"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_symbol"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_times_bold"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_times_bold_italic"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_times_italic"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_times_roman"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_zapf_dingbats"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="FontCharCodeIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="java.lang.Long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Function"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Function"
 type="com.pdftron.pdf.Function"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="funct_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="eval"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInputCardinality"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOutputCardinality"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_exponential"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postscript"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_sampled"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stitching"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="GSChangesIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="java.lang.Integer"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="GState"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetStrokePattern"
 return="com.pdftron.pdf.PatternColor"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="concat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="concat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAISFlag"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAutoStrokeAdjust"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBlackGenFunct"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBlendMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCharSpacing"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDashes"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillOpacity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillOverprint"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFillPattern"
 return="com.pdftron.pdf.PatternColor"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFlatness"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHalftone"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHorizontalScale"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLeading"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineCap"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineJoin"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMiterLimit"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOverprintMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPhase"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRenderingIntent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSmoothnessTolerance"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSoftMask"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSoftMaskTransform"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStrokeColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStrokeColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStrokeOpacity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStrokeOverprint"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextRenderMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextRise"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTransferFunct"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTransform"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUCRFunct"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWordSpacing"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isTextKnockout"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAISFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="AIS" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAutoStrokeAdjust"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="SA" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBlackGenFunct"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="BG" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBlendMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="BM" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCharSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_spacing" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDashPattern"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dash_array" type="double[]">
</parameter>
<parameter name="phase" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.pdf.PatternColor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.pdf.PatternColor">
</parameter>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillColorSpace"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs" type="com.pdftron.pdf.ColorSpace">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ca" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFillOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="op" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlatness"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flatness" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFont"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font" type="com.pdftron.pdf.Font">
</parameter>
<parameter name="font_sz" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHalftone"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="HT" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHorizontalScale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hscale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLeading"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="leading" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineCap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cap" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineJoin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="join" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMiterLimit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="miter_limit" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="OPM" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRenderingIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="intent" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmoothnessTolerance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="SM" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSoftMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="SM" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.pdf.PatternColor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.pdf.PatternColor">
</parameter>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeColorSpace"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs" type="com.pdftron.pdf.ColorSpace">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="CA" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStrokeOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="OP" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextKnockout"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="knockout" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextRenderMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rmode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextRise"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rise" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTransferFunct"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="TR" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTransform"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTransform"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUCRFunct"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="UCR" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setWordSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="word_spacing" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_BG_funct"
 type="int"
 transient="false"
 volatile="false"
 value="33"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UCR_funct"
 type="int"
 transient="false"
 volatile="false"
 value="34"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_absolute_colorimetric"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_alpha_is_shape"
 type="int"
 transient="false"
 volatile="false"
 value="25"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_auto_stoke_adjust"
 type="int"
 transient="false"
 volatile="false"
 value="28"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bevel_join"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_color"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_color_burn"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_color_dodge"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_compatible"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_darken"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_difference"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_exclusion"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_hard_light"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_hue"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_lighten"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_luminosity"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_multiply"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_normal"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_overlay"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_saturation"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_screen"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bl_soft_light"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_blend_mode"
 type="int"
 transient="false"
 volatile="false"
 value="22"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_butt_cap"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_char_spacing"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_clip_text"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_dash_pattern"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_clip_text"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_color"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_cs"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_overprint"
 type="int"
 transient="false"
 volatile="false"
 value="30"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_stroke_clip_text"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_stroke_text"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_text"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flatness"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_font"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_font_size"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_halftone"
 type="int"
 transient="false"
 volatile="false"
 value="35"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_horizontal_scale"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_invisible_text"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_leading"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_line_cap"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_line_join"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_line_width"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_miter_join"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_miter_limit"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="36"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_opacity_fill"
 type="int"
 transient="false"
 volatile="false"
 value="23"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_opacity_stroke"
 type="int"
 transient="false"
 volatile="false"
 value="24"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_overprint_mode"
 type="int"
 transient="false"
 volatile="false"
 value="31"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_perceptual"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_relative_colorimetric"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rendering_intent"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_round_cap"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_round_join"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_saturation"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_smoothnes"
 type="int"
 transient="false"
 volatile="false"
 value="27"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_soft_mask"
 type="int"
 transient="false"
 volatile="false"
 value="26"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_square_cap"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_clip_text"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_color"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_cs"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_overprint"
 type="int"
 transient="false"
 volatile="false"
 value="29"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stroke_text"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_knockout"
 type="int"
 transient="false"
 volatile="false"
 value="20"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_pos_offset"
 type="int"
 transient="false"
 volatile="false"
 value="21"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_render_mode"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_rise"
 type="int"
 transient="false"
 volatile="false"
 value="19"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_transfer_funct"
 type="int"
 transient="false"
 volatile="false"
 value="32"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_transform"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_word_spacing"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="GeometryCollection"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="GeometryCollection"
 type="com.pdftron.pdf.GeometryCollection"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="snapToNearest"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="snapToNearestPixel"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="dpi" type="double">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="GeometryCollection.SnappingMode"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SnappingMode"
 type="com.pdftron.pdf.GeometryCollection.SnappingMode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="e_default_snap_mode"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_line_intersection"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_line_midpoint"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_path_endpoint"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_point_on_line"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="HTML2PDF"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HTML2PDF"
 type="com.pdftron.pdf.HTML2PDF"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="convert"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convert"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<parameter name="settings" type="com.pdftron.pdf.HTML2PDF.WebPageSettings">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="convert"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="dumpOutline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xml_file" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHTTPErrorCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLog"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertFromHtmlString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="html" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertFromHtmlString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="html" type="java.lang.String">
</parameter>
<parameter name="settings" type="com.pdftron.pdf.HTML2PDF.WebPageSettings">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertFromURL"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertFromURL"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.lang.String">
</parameter>
<parameter name="settings" type="com.pdftron.pdf.HTML2PDF.WebPageSettings">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertTOC"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertTOC"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="com.pdftron.pdf.HTML2PDF.TOCSettings">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isModuleAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCookieJar"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFooter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="footer" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHeader"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLandscape"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMargins"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="top" type="java.lang.String">
</parameter>
<parameter name="bottom" type="java.lang.String">
</parameter>
<parameter name="left" type="java.lang.String">
</parameter>
<parameter name="right" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setModulePath"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOutline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<parameter name="depth" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPDFCompression"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPaperSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPaperSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="java.lang.String">
</parameter>
<parameter name="height" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuiet"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quiet" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="HTML2PDF.Proxy"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Proxy"
 type="com.pdftron.pdf.HTML2PDF.Proxy"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setHost"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="host" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPort"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="port" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_default"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_http"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_socks5"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="HTML2PDF.TOCSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TOCSettings"
 type="com.pdftron.pdf.HTML2PDF.TOCSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="caption" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDottedLines"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLevelIndentation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="indentation" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextSizeShrink"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="shrink" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setXsl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style_sheet" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="HTML2PDF.WebPageSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="WebPageSettings"
 type="com.pdftron.pdf.HTML2PDF.WebPageSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAllowJavaScript"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAllowPlugins"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBlockLocalFileAccess"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="block" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDebugJavaScriptOutput"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="forward" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultEncoding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encoding" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setExternalLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIncludeInOutline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="include" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInternalLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setJavaScriptDelay"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="msec" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLoadErrorHandling"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLoadImages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="load" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMinimumFontSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintBackground"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="background" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintMediaType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="print" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setProduceForms"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="forms" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setProxy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="proxy" type="com.pdftron.pdf.HTML2PDF.Proxy">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmartShrinking"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStopSlowScripts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stop" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUserStyleSheet"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setZoom"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="zoom" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_abort"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ignore"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_skip"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Highlights"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Highlights"
 type="com.pdftron.pdf.Highlights"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Highlights"
 type="com.pdftron.pdf.Highlights"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="other_impl" type="long">
</parameter>
</constructor>
<method name="add"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hlts" type="com.pdftron.pdf.Highlights">
</parameter>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
</method>
<method name="clear"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentPageNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentQuads"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentTextRange"
 return="com.pdftron.pdf.TextRange"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasNext"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="load"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file_name" type="java.lang.String">
</parameter>
</method>
<method name="next"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file_name" type="java.lang.String">
</parameter>
</method>
<method name="saveToString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Image"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Image"
 type="com.pdftron.pdf.Image"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<parameter name="input_format" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="com.pdftron.pdf.ColorSpace">
</parameter>
<parameter name="input_format" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="bmp" type="java.awt.Image">
</parameter>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImageMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImageMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImageMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createImageMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSoftMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSoftMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSoftMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSoftMask"
 return="com.pdftron.pdf.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="image_data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="encoder_hint" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="com.pdftron.filters.FilterWriter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="exportAsPng"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="exportAsPng"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="com.pdftron.filters.FilterWriter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="exportAsTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="exportAsTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="com.pdftron.filters.FilterWriter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBitmap"
 return="java.awt.Image"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBitsPerComponent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDecodeArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageData"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageDataSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageRenderingIntent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getImageWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMask"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSoftMask"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isImageInterpolate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isImageMask"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_mask" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mask" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSoftMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="soft_mask" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_ascii_hex"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flate"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_g3"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_g4"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jp2"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jpeg"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Image.Compat"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Compat"
 type="com.pdftron.pdf.Image.Compat"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="GetRawImageData"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
</class>
<class name="Image2RGB"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.pdftron.pdf.__Delete">
</implements>
<constructor name="Image2RGB"
 type="com.pdftron.pdf.Image2RGB"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_element" type="com.pdftron.pdf.Element">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGB"
 type="com.pdftron.pdf.Image2RGB"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGB"
 type="com.pdftron.pdf.Image2RGB"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
</class>
<class name="Image2RGBA"
 extends="com.pdftron.filters.Filter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.pdftron.pdf.__Delete">
</implements>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_element" type="com.pdftron.pdf.Element">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_element" type="com.pdftron.pdf.Element">
</parameter>
<parameter name="premultiply" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="premultiply" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Image2RGBA"
 type="com.pdftron.pdf.Image2RGBA"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image" type="com.pdftron.pdf.Image">
</parameter>
<parameter name="premultiply" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
</class>
<interface name="JavaScriptEventProc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="handleEvent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="event_type" type="java.lang.String">
</parameter>
<parameter name="json" type="java.lang.String">
</parameter>
<parameter name="user_data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="KeyStrokeActionResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="KeyStrokeEventData"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="KeyStrokeEventData"
 type="com.pdftron.pdf.KeyStrokeEventData"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="current_value" type="java.lang.String">
</parameter>
<parameter name="change" type="java.lang.String">
</parameter>
<parameter name="selection_start" type="int">
</parameter>
<parameter name="selection_end" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="LogMessageHandlerCallback"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LogMessageHandlerCallback"
 type="com.pdftron.pdf.LogMessageHandlerCallback"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="HandlerLogMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="severity" type="int">
</parameter>
<parameter name="stream" type="java.lang.String">
</parameter>
<parameter name="msg" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="line_number" type="int">
</parameter>
</method>
</class>
<class name="MergeXFDFOptions"
 extends="com.pdftron.pdf.OptionsBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MergeXFDFOptions"
 type="com.pdftron.pdf.MergeXFDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="MergeXFDFOptions"
 type="com.pdftron.pdf.MergeXFDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getForce"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setForce"
 return="com.pdftron.pdf.MergeXFDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OCRModule"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="applyOCRJsonToPDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dst" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="json" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="applyOCRXmlToPDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dst" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="xml" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCRJsonFromImage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dst" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="src" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.OCROptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCRJsonFromPDF"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="src" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="options" type="com.pdftron.pdf.OCROptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCRXmlFromImage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dst" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="src" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.OCROptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCRXmlFromPDF"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="src" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="options" type="com.pdftron.pdf.OCROptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="imageToPDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dst" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="src" type="java.lang.String">
</parameter>
<parameter name="options" type="com.pdftron.pdf.OCROptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isModuleAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="processPDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dst" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="options" type="com.pdftron.pdf.OCROptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OCROptions"
 extends="com.pdftron.pdf.OptionsBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OCROptions"
 type="com.pdftron.pdf.OCROptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="OCROptions"
 type="com.pdftron.pdf.OCROptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="addDPI"
 return="com.pdftron.pdf.OCROptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addIgnoreZonesForPage"
 return="com.pdftron.pdf.OCROptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="regions" type="com.pdftron.pdf.RectCollection">
</parameter>
<parameter name="page_index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addLang"
 return="com.pdftron.pdf.OCROptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lang_code" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addTextZonesForPage"
 return="com.pdftron.pdf.OCROptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="regions" type="com.pdftron.pdf.RectCollection">
</parameter>
<parameter name="page_index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAutoRotate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAutoRotate"
 return="com.pdftron.pdf.OCROptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIgnoreExistingText"
 return="com.pdftron.pdf.OCROptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUsePDFPageCoords"
 return="com.pdftron.pdf.OCROptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OfficeLocaleOverrides"
 extends="com.pdftron.pdf.ConversionOptions"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OfficeLocaleOverrides"
 type="com.pdftron.pdf.OfficeLocaleOverrides"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="OfficeLocaleOverrides"
 type="com.pdftron.pdf.OfficeLocaleOverrides"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getAccountingFormat1"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAccountingFormat2"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAccountingFormat3"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAccountingFormat4"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAccountingFormat5"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAccountingFormat6"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAccountingFormat7"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAccountingFormat8"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCurrencyFormat1"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCurrencyFormat2"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCurrencyFormat3"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCurrencyFormat4"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDateFormat1"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDateFormat2"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDateFormat3"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDateFormat4"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDatetTimeFormat"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFixedNumberFormat1"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFixedNumberFormat2"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFixedNumberFormat3"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFixedNumberFormat4"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFractionNumberFormat1"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFractionNumberFormat2"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPercentageFormat1"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPercentageFormat2"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScientificNumberFormat1"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScientificNumberFormat2"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextFormat"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTimeFormat1"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTimeFormat2"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTimeFormat3"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTimeFormat4"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTimeSpanFormat1"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTimeSpanFormat2"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTimeSpanFormat3"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAccountingFormat1"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAccountingFormat2"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAccountingFormat3"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAccountingFormat4"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAccountingFormat5"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAccountingFormat6"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAccountingFormat7"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAccountingFormat8"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCurrencyFormat1"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCurrencyFormat2"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCurrencyFormat3"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCurrencyFormat4"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDateFormat1"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDateFormat2"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDateFormat3"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDateFormat4"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDatetTimeFormat"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFixedNumberFormat1"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFixedNumberFormat2"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFixedNumberFormat3"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFixedNumberFormat4"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFractionNumberFormat1"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFractionNumberFormat2"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPercentageFormat1"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPercentageFormat2"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScientificNumberFormat1"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScientificNumberFormat2"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextFormat"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimeFormat1"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimeFormat2"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimeFormat3"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimeFormat4"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimeSpanFormat1"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimeSpanFormat2"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimeSpanFormat3"
 return="com.pdftron.pdf.OfficeLocaleOverrides"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OfficeToPDFOptions"
 extends="com.pdftron.pdf.ConversionOptions"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OfficeToPDFOptions"
 type="com.pdftron.pdf.OfficeToPDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="OfficeToPDFOptions"
 type="com.pdftron.pdf.OfficeToPDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getApplyPageBreaksToSheet"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDisplayChangeTracking"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getExcelDefaultCellBorderWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getExcelMaxAllowedCellCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLayoutResourcesPluginPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLocale"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getResourceDocPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSmartSubstitutionPluginPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTemplateParamsJson"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setApplyPageBreaksToSheet"
 return="com.pdftron.pdf.OfficeToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDisplayChangeTracking"
 return="com.pdftron.pdf.OfficeToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setExcelDefaultCellBorderWidth"
 return="com.pdftron.pdf.OfficeToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setExcelMaxAllowedCellCount"
 return="com.pdftron.pdf.OfficeToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLayoutResourcesPluginPath"
 return="com.pdftron.pdf.OfficeToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLocale"
 return="com.pdftron.pdf.OfficeToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setResourceDocPath"
 return="com.pdftron.pdf.OfficeToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmartSubstitutionPluginPath"
 return="com.pdftron.pdf.OfficeToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTemplateParamsJson"
 return="com.pdftron.pdf.OfficeToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Optimizer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="optimize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
</method>
<method name="optimize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="optimizer_settings" type="com.pdftron.pdf.Optimizer.OptimizerSettings">
</parameter>
</method>
</class>
<class name="Optimizer.ImageSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ImageSettings"
 type="com.pdftron.pdf.Optimizer.ImageSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="forceChanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="force" type="boolean">
</parameter>
</method>
<method name="forceRecompression"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="force" type="boolean">
</parameter>
</method>
<method name="setCompressionMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setDownsampleMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setImageDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maximum" type="double">
</parameter>
<parameter name="resampling" type="double">
</parameter>
</method>
<method name="setQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="long">
</parameter>
</method>
<field name="e_default"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flate"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jpeg"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jpeg2000"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_retain"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Optimizer.MonoImageSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MonoImageSettings"
 type="com.pdftron.pdf.Optimizer.MonoImageSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="forceChanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="force" type="boolean">
</parameter>
</method>
<method name="forceRecompression"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="force" type="boolean">
</parameter>
</method>
<method name="setCompressionMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setDownsampleMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setImageDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maximum" type="double">
</parameter>
<parameter name="resampling" type="double">
</parameter>
</method>
<method name="setJBIG2Threshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jbig2_threshold" type="double">
</parameter>
</method>
<field name="e_ccitt"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_default"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flate"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_jbig2"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Optimizer.OptimizerSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OptimizerSettings"
 type="com.pdftron.pdf.Optimizer.OptimizerSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="removeCustomEntries"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="remove_custom" type="boolean">
</parameter>
</method>
<method name="setColorImageSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="com.pdftron.pdf.Optimizer.ImageSettings">
</parameter>
</method>
<method name="setGrayscaleImageSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="com.pdftron.pdf.Optimizer.ImageSettings">
</parameter>
</method>
<method name="setMonoImageSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="com.pdftron.pdf.Optimizer.MonoImageSettings">
</parameter>
</method>
<method name="setTextSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="com.pdftron.pdf.Optimizer.TextSettings">
</parameter>
</method>
</class>
<class name="Optimizer.TextSettings"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextSettings"
 type="com.pdftron.pdf.Optimizer.TextSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="embedFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="embed" type="boolean">
</parameter>
</method>
<method name="subsetFonts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="subset" type="boolean">
</parameter>
</method>
</class>
<class name="OptionsBase"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OptionsBase"
 type="com.pdftron.pdf.OptionsBase"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="OptionsBase"
 type="com.pdftron.pdf.OptionsBase"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
</class>
<class name="PDF2HtmlReflowParagraphsModule"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="isModuleAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDF2WordModule"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="isModuleAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="PDFCompat.Action"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="CreateGoto"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateGoto"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<parameter name="dest" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateGotoRemote"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateGotoRemote"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<parameter name="new_window" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateHideField"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pdfdoc" type="long">
</parameter>
<parameter name="field_list" type="java.lang.String[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateImportData"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pdfdoc" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateJavaScript"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pdfdoc" type="long">
</parameter>
<parameter name="script" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateLaunch"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pdfdoc" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateResetForm"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pdfdoc" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateSubmitForm"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateURI"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pdfdoc" type="long">
</parameter>
<parameter name="uri" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Execute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDest"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFormActionFlag"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNext"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFormActionFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flag" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Annot"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="BSGetDash"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BSGetHR"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BSGetStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BSGetVR"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BSGetWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BSSetDash"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dash" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BSSetHR"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="hr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BSSetStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BSSetVR"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="vr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BSSetWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="width" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BorderStyleCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="int">
</parameter>
<parameter name="b_width" type="int">
</parameter>
<parameter name="b_hr" type="int">
</parameter>
<parameter name="b_vr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BorderStyleCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="int">
</parameter>
<parameter name="b_width" type="int">
</parameter>
<parameter name="b_hr" type="int">
</parameter>
<parameter name="b_vr" type="int">
</parameter>
<parameter name="b_dash" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BorderStyleDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Flatten"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetActiveAppearanceState"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAppearance"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="annot_state" type="int">
</parameter>
<parameter name="app_state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBorderStyle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColorAsCMYK"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColorAsGray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColorAsRGB"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetContents"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFlag"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOptionalContent"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPage"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRect"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStructParent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUniqueID"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVisibleContentBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsMarkup"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RefreshAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RemoveAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="annot_state" type="int">
</parameter>
<parameter name="app_state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Resize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rect" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetActiveAppearanceState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="astate" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="app_stream" type="long">
</parameter>
<parameter name="annot_state" type="int">
</parameter>
<parameter name="app_state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBorderStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="bs" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rgb" type="long">
</parameter>
<parameter name="comp_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetContents"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="date" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flag" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOptionalContent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="oc" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPage"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStructParent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="keyval" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUniqueID"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="icon_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Bookmark"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AddChild"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddChild"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_bookmark" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddNext"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddNext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_bookmark" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddPrev"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddPrev"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_bookmark" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="long">
</parameter>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Delete"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Find"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAction"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColor"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFirstChild"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFlags"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIndent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLastChild"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNext"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOpenCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetParent"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPrev"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTitleObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasChildren"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsOpen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RemoveAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_action" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_r" type="double">
</parameter>
<parameter name="in_g" type="double">
</parameter>
<parameter name="in_b" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFlags"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_flags" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOpen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_open" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Unlink"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.CharData"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetCharCode"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCharData"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetGlyphX"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetGlyphY"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.ColorPt"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="ColorPtCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="z" type="double">
</parameter>
<parameter name="w" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Equals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r1" type="long">
</parameter>
<parameter name="r2" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Get"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="colorant_index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HashCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="z" type="double">
</parameter>
<parameter name="w" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="colorant_index" type="int">
</parameter>
<parameter name="colorant_value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetColorantNum"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.ColorSpace"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="ColorSpaceCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color_space" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Convert2CMYK"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_color" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Convert2Gray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_color" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Convert2RGB"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_color" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateDeviceCMYKL"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateDeviceGrayL"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateDeviceRGBL"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateICCFromBuffer"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateICCFromFile"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateICCFromFilter"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="filter" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreatePatternL"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAlternateColorSpace"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBaseColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="color_idx" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBaseColorSpace"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs_type" type="int">
</parameter>
<parameter name="cs" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLookupTable"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTintFunction"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTypeStatic"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cs" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InitColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="out_colorants" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InitComponentRanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="out_decode_low" type="double[]">
</parameter>
<parameter name="out_decode_range" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsAll"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsNone"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.ContentReplacer"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AddImage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="target_region" type="long">
</parameter>
<parameter name="replacement_image" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="template_text" type="java.lang.String">
</parameter>
<parameter name="replacement_text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="target_region" type="long">
</parameter>
<parameter name="replacement_text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ContentReplacerCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ContentReplacerDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Process"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMatchStrings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="start_str" type="java.lang.String">
</parameter>
<parameter name="end_str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Convert"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="DocToEmf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocToEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="html_options" type="long">
</parameter>
<parameter name="epub_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocToHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocToSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocToSvgWithOptions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="svg_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocToTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocToXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="xod_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocToXodStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="xod_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocToXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="xps_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FileToEpub"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="html_options" type="long">
</parameter>
<parameter name="epub_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FileToHtml"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FileToPdf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FileToTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FileToXod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="out_filename" type="java.lang.String">
</parameter>
<parameter name="xod_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FileToXodStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="xod_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FileToXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_inputFilename" type="java.lang.String">
</parameter>
<parameter name="in_outputFilename" type="java.lang.String">
</parameter>
<parameter name="xps_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FromCAD"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="cad_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FromDICOM"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="advancedimaging_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FromEmf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FromText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="text_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FromXps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FromXpsBuf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageToEmf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageToSvg"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageToSvgWithOptions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_page" type="long">
</parameter>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<parameter name="svg_options" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RequiresPrinter"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.ConvertPrinter"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPrinterName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Install"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_printerName" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsInstalled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_printerName" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPrinterName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_printerName" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Uninstall"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Date"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Attach"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="d" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DateCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DateCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DateCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="year" type="short">
</parameter>
<parameter name="month" type="byte">
</parameter>
<parameter name="day" type="byte">
</parameter>
<parameter name="hour" type="byte">
</parameter>
<parameter name="minute" type="byte">
</parameter>
<parameter name="second" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Equals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r1" type="long">
</parameter>
<parameter name="r2" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDay"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHour"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMinute"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMonth"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSecond"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUT"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUTHour"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUTMinutes"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetYear"
 return="short"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HashCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCurrentTime"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDay"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="day" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHour"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="hour" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMinute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="minute" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMonth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="month" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSecond"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="second" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUT"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ut" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUTHour"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ut_hour" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUTMinutes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ut_minutes" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetYear"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="year" type="short">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="d" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Destination"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateFit"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateFitB"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateFitBH"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="long">
</parameter>
<parameter name="top" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateFitBV"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="long">
</parameter>
<parameter name="left" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateFitH"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="long">
</parameter>
<parameter name="top" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateFitR"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="long">
</parameter>
<parameter name="left" type="double">
</parameter>
<parameter name="bottom" type="double">
</parameter>
<parameter name="right" type="double">
</parameter>
<parameter name="top" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateFitV"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="long">
</parameter>
<parameter name="left" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateXYZ"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="long">
</parameter>
<parameter name="left" type="double">
</parameter>
<parameter name="top" type="double">
</parameter>
<parameter name="zoom" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetExplicitDestObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFitType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPage"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Element"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetBBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBitsPerComponent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCTM"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCharIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDecodeArray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetGState"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageColorSpace"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageData"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageDataSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageRenderingIntent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMCPropertyDict"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMCTag"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMask"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNewTextLineOffset"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetParentStructElement"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPathPoints"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPathTypes"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPosAdjustment"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetShading"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStructMCID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextData"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextLength"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextMatrix"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetXObject"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasTextMatrix"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsClipWindingFill"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsClippingPath"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsFilled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsImageInterpolate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsImageMask"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsOCVisible"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsStroked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsWindingFill"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetClipWindingFill"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="winding_rule" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetNewTextLineOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dx" type="double">
</parameter>
<parameter name="dy" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPathClip"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="clip" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPathFill"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="fill" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPathPoints"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_points" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPathStroke"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="stroke" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPathTypes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in_seg_types" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPosAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="adjust" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="text_data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextMatrix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mtx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextMatrix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetWindingFill"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="winding_rule" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="UpdateTextMetrics"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.ElementBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="ArcTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="start" type="double">
</parameter>
<parameter name="extent" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ArcTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="xr" type="double">
</parameter>
<parameter name="yr" type="double">
</parameter>
<parameter name="rx" type="double">
</parameter>
<parameter name="isLargeArc" type="boolean">
</parameter>
<parameter name="sweep" type="boolean">
</parameter>
<parameter name="endX" type="double">
</parameter>
<parameter name="endY" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ClosePath"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateEllipse"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="cx" type="double">
</parameter>
<parameter name="cy" type="double">
</parameter>
<parameter name="rx" type="double">
</parameter>
<parameter name="ry" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateForm"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateForm"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<parameter name="doc" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateFormObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="form" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateGroupBegin"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateGroupEnd"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateImage"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="img" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateImage"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="img" type="long">
</parameter>
<parameter name="mtx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateImage"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="img" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="hscale" type="double">
</parameter>
<parameter name="vscale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreatePath"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="points" type="double[]">
</parameter>
<parameter name="seg_types" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateRect"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateShading"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="sh" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateTextBegin"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="font" type="long">
</parameter>
<parameter name="font_sz" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateTextBegin"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateTextEnd"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateTextNewLine"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dx" type="double">
</parameter>
<parameter name="dy" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateTextNewLine"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateTextRun"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="text_data" type="java.lang.String">
</parameter>
<parameter name="font" type="long">
</parameter>
<parameter name="font_sz" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateTextRun"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="text_data" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateUnicodeTextRun"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="text_data" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CurveTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="cx1" type="double">
</parameter>
<parameter name="cy1" type="double">
</parameter>
<parameter name="cx2" type="double">
</parameter>
<parameter name="cy2" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ElementBuilderCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Ellipse"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="cx" type="double">
</parameter>
<parameter name="cy" type="double">
</parameter>
<parameter name="rx" type="double">
</parameter>
<parameter name="ry" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MoveTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PathBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PathEnd"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Rect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Reset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="gs" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.ElementReader"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Begin1"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Begin2"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<parameter name="ctx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BeginStm1"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="content_stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BeginStm2"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="content_stream" type="long">
</parameter>
<parameter name="resource_dict" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BeginStm3"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="content_stream" type="long">
</parameter>
<parameter name="resource_dict" type="long">
</parameter>
<parameter name="ctx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ClearChangeList"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Current"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ElementReaderCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="End"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FormBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetChangesIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColorSpace"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetExtGState"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFont"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPattern"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetShading"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetXObject"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsChanged"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attrib" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Next"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PatternBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="fill_pattern" type="boolean">
</parameter>
<parameter name="reset_ctm_tfm" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Type3FontBegin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="char_data" type="long">
</parameter>
<parameter name="resource_dict" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.ElementWriter"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<parameter name="write_mode" type="int">
</parameter>
<parameter name="page_coord_sys" type="boolean">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<parameter name="resources" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="doc" type="long">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="BeginObj"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="obj" type="long">
</parameter>
<parameter name="compress" type="boolean">
</parameter>
<parameter name="resources" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ElementWriterCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="End"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Flush"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteBuffer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteElement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="element" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WritePlacedElement"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="element" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WriteString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Field"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="EraseAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FieldCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_dict" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FindInheritedAttribute"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attrib" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Flatten"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDefaultAppearance"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDefaultValue"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDefaultValueAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFlag"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetJustification"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMaxLen"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOpt"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="opt_idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOptCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPartialName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSDFObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUpdateRect"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetValue"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetValueAsBool"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetValueAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsAnnot"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RefreshAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Rename"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flag" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetJustification"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="j" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMaxLen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="max_len" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="is_checked" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="UseSignatureHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.FileSpec"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateURL"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Export"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="save_as" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFileData"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFilePath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDesc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="desc" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Flattener"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FlattenerCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Process"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="doc" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetJPGQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMaximumImagePixels"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="max_pixels" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPreferJPG"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="jpg" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Font"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="from" type="long">
</parameter>
<parameter name="char_set" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="char_set" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateCIDTrueTypeFont"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<parameter name="ttc_font_index" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateCIDTrueTypeFontFromStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<parameter name="encoding" type="int">
</parameter>
<parameter name="ttc_font_index" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateTrueTypeFont"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateTrueTypeFontFromStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="font_stream" type="java.io.InputStream">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<parameter name="subset" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateType1Font"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="font_path" type="java.lang.String">
</parameter>
<parameter name="embed" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAscent"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCharCodeIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDescendant"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDescent"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDescriptor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetEmbeddedFont"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetEmbeddedFontBufSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetEmbeddedFontName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetEncoding"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFamilyName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetGlyphPath"
 return="com.pdftron.pdf.PathData"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="char_code" type="long">
</parameter>
<parameter name="conics2cubics" type="boolean">
</parameter>
<parameter name="mtx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMaxWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMissingWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStandardType1FontType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType3FontMatrix"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType3GlyphStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="char_code" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTypeStatic"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font_dict" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUnitsPerEm"
 return="short"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVerticalAdvance"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="char_code" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="char_code" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsAllCap"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsCFF"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsEmbedded"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsFixedWidth"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsForceBold"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsHorizontalMode"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsItalic"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsSerif"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsSimple"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsSymbolic"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MapToCID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="char_code" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MapToUnicode"
 return="char[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="char_code" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Function"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Eval"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="in" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FunctionCreateFromObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sdf_obj_impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetInputCardinality"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOutputCardinality"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSDFObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.GState"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Concat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mtx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Concat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GStateCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAISFlag"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAutoStrokeAdjust"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBlackGenFunct"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBlendMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCharSpacing"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDashes"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFillColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFillColorSpace"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFillOpacity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFillOverprint"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFillPattern"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFlatness"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFont"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHalftone"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHorizontalScale"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLeading"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLineCap"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLineJoin"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLineWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMiterLimit"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOverprintMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPhase"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRenderingIntent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRenderingIntentType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSmoothnessTolerance"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSoftMask"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSoftMaskTransform"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStrokeColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStrokeColorSpace"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStrokeOpacity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStrokeOverprint"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStrokePattern"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextRenderMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextRise"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTransferFunct"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTransform"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUCRFunct"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetWordSpacing"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsTextKnockout"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAISFlag"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="AIS" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAutoStrokeAdjust"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="SA" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBlackGenFunct"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="BG" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBlendMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="BM" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCharSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="char_spacing" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDashPattern"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dash_array" type="double[]">
</parameter>
<parameter name="phase" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFillColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pattern" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFillColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pattern" type="long">
</parameter>
<parameter name="c" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFillColorPt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="c" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFillColorSpace"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="cs" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFillOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ca" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFillOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="op" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFlatness"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flatness" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFont"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="font" type="long">
</parameter>
<parameter name="font_sz" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHalftone"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="HT" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHorizontalScale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="hscale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLeading"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="leading" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLineCap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="cap" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLineJoin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="join" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLineWidth"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="width" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMiterLimit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="miter_limit" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOverprintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="OPM" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRenderingIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="intent" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSmoothnessTolerance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="SM" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSoftMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="SM" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStrokeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pattern" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStrokeColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pattern" type="long">
</parameter>
<parameter name="c" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStrokeColorPt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="c" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStrokeColorSpace"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="cs" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStrokeOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="CA" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStrokeOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="OP" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextKnockout"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="knockout" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextRenderMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rmode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextRise"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rise" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTransferFunct"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="TR" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTransform"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mtx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTransform"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<parameter name="c" type="double">
</parameter>
<parameter name="d" type="double">
</parameter>
<parameter name="h" type="double">
</parameter>
<parameter name="v" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUCRFunct"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="UCR" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetWordSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="word_spacing" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.HTML2PDF"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Convert"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="doc" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Convert"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Convert"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<parameter name="settings" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DumpOutline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="xml_file" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHTTPErrorCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLog"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HTML2PDFCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertFromHtmlString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="html" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertFromHtmlString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="html" type="java.lang.String">
</parameter>
<parameter name="settings" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertFromURL"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertFromURL"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<parameter name="settings" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertTOC"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertTOC"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="settings" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ProxyCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ProxyDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ProxySetHost"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="host" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ProxySetPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ProxySetPort"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="port" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ProxySetType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ProxySetUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAllowJavaScript"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAllowPlugins"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBlockLocalFileAccess"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="block" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="caption" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCookieJar"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDebugJavaScriptOutput"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="forward" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDefaultEncoding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="encoding" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDottedLines"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetExternalLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="convert" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetImageDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetImageQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIncludeInOutline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="include" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetInternalLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="convert" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetJavaScriptDelay"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="msec" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLandscape"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLevelIndentation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="indentation" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLinks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLoadErrorHandling"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLoadImages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="load" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMargins"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="top" type="java.lang.String">
</parameter>
<parameter name="bottom" type="java.lang.String">
</parameter>
<parameter name="left" type="java.lang.String">
</parameter>
<parameter name="right" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMinimumFontSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetModulePath"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOutline"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable" type="boolean">
</parameter>
<parameter name="depth" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPDFCompression"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPaperSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPaperSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="width" type="java.lang.String">
</parameter>
<parameter name="height" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPrintBackground"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="background" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPrintMediaType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="print" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetProduceForms"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="forms" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetProxy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="proxy" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetQuiet"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="quiet" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSmartShrinking"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStopSlowScripts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="stop" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextSizeShrink"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="shrink" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUserStyleSheet"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetXsl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="style_sheet" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetZoom"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="zoom" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="TOCCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="TOCDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WebPageSettingsCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WebPageSettingsDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Highlights"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AcquireHighlightsImpl"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="com.pdftron.pdf.Highlights">
</parameter>
</method>
<method name="Add"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="hlts" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="doc" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Clear"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Delete"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCurrentPageNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCurrentQuads"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCurrentTextRange"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasNext"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HighlightsCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Load"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="file_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Next"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="file_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Image"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="encoder_hints" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="long">
</parameter>
<parameter name="encoder_hints" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="image_data" type="long">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="long">
</parameter>
<parameter name="encoder_hints" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="long">
</parameter>
<parameter name="input_format" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="image_data" type="long">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="color_space" type="long">
</parameter>
<parameter name="input_format" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="data" type="int[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="encoder_hints" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="stream" type="long">
</parameter>
<parameter name="encoder_hints" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateImageMask"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="encoder_hints" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateImageMask"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="image_data" type="long">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="encoder_hints" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateSoftMask"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="image_data" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="encoder_hints" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateSoftMask"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="image_data" type="long">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="bpc" type="int">
</parameter>
<parameter name="encoder_hints" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Export"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Export"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="writer" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ExportAsPng"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ExportAsPng"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="writer" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ExportAsTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ExportAsTiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="writer" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBitmap"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBitsPerComponent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetComponentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDecodeArray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageColorSpace"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageData"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageDataSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageRenderingIntent"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetImageWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMask"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSoftMask"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsImageInterpolate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsImageMask"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="image_mask" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMaskObj"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mask" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSoftMask"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="soft_mask" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Image2RGB"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Image2RGBE"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_element" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Image2RGBI"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Image2RGBO"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Image2RGBA"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Image2RGBAE"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_element" type="long">
</parameter>
<parameter name="premultiply" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Image2RGBAI"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image" type="long">
</parameter>
<parameter name="premultiply" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Image2RGBAO"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_xobject" type="long">
</parameter>
<parameter name="premultiply" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Optimizer"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Optimize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="color_compression_mode" type="int">
</parameter>
<parameter name="color_downsample_mode" type="int">
</parameter>
<parameter name="color_quality" type="long">
</parameter>
<parameter name="color_max_dpi" type="double">
</parameter>
<parameter name="color_resample_dpi" type="double">
</parameter>
<parameter name="color_force_recompression" type="boolean">
</parameter>
<parameter name="color_force_changes" type="boolean">
</parameter>
<parameter name="gray_compression_mode" type="int">
</parameter>
<parameter name="gray_downsample_mode" type="int">
</parameter>
<parameter name="gray_quality" type="long">
</parameter>
<parameter name="gray_max_dpi" type="double">
</parameter>
<parameter name="gray_resample_dpi" type="double">
</parameter>
<parameter name="gray_force_recompression" type="boolean">
</parameter>
<parameter name="gray_force_changes" type="boolean">
</parameter>
<parameter name="mono_compression_mode" type="int">
</parameter>
<parameter name="mono_downsample_mode" type="int">
</parameter>
<parameter name="mono_max_dpi" type="double">
</parameter>
<parameter name="mono_resample_dpi" type="double">
</parameter>
<parameter name="mono_force_recompression" type="boolean">
</parameter>
<parameter name="mono_force_changes" type="boolean">
</parameter>
<parameter name="font_subset" type="boolean">
</parameter>
<parameter name="font_embed" type="boolean">
</parameter>
<parameter name="remove_custom" type="boolean">
</parameter>
<parameter name="jbig2_threshold" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.PDFDoc"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AddFileAttachment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="file_key" type="java.lang.String">
</parameter>
<parameter name="embedded_file" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddHighlights"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="hilite" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddRootBookmark"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="root_bookmark" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddSignatureHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="signatureHandler" type="com.pdftron.sdf.SignatureHandler">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddStdSignatureHandlerFromBuffer"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pkcs12Keybuffer" type="byte[]">
</parameter>
<parameter name="pkcs12Keypass" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddStdSignatureHandlerFromFile"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pkcs12Keyfile" type="java.lang.String">
</parameter>
<parameter name="pkcs12Keypass" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectArray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectBool"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectDict"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectName"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectNull"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectNumber"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data" type="long">
</parameter>
<parameter name="filter_chain" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="filter_chain" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FDFExtract"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="extractFlag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FDFMerge"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="fdf_doc" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FieldCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="long">
</parameter>
<parameter name="def_field_value" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FieldCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="java.lang.String">
</parameter>
<parameter name="def_field_value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FlattenAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="forms_only" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FlattenAnnotationsAdvanced"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flags" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GenerateThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="size" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAcroForm"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDocInfo"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetField"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFieldIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFieldIteratorBegin"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFirstBookmark"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOCGConfig"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOCGs"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOpenAction"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPage"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPageIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPageIteratorBegin"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPageLabel"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPages"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPagesCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRoot"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSecurityHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSignatureHandler"
 return="com.pdftron.sdf.SignatureHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStructTree"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTrailer"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetViewPrefs"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasOC"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasSignatures"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ImportPages"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pages" type="long[]">
</parameter>
<parameter name="import_bookmarks" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InitSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InitStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertPageSet"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="long">
</parameter>
<parameter name="sourcePageSet" type="long">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="progress" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsEncrypted"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsLinearized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsTagged"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Lock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemStreamCreateDoc"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mem_stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemStreamCreateMemFilt"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemStreamWriteData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="m" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MovePageSet"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="imp" type="long">
</parameter>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="long">
</parameter>
<parameter name="sourcePageSet" type="long">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="progress" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFDocCreateFilter"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="media_box" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageInsert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="where" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PagePushBack"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PagePushFront"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageRemove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_itr" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ReadData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="size" type="int">
</parameter>
<parameter name="buf_ptr" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RefreshFieldAppearances"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RemovePageLabel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RemoveSecurity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RemoveSignatureHandler"
 return="com.pdftron.sdf.SignatureHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SaveCustomFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="custom_filter" type="long">
</parameter>
<parameter name="flags" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SaveStream"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOpenAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="action" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPageLabel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<parameter name="label" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSecurityHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="handler" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="TryLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="TryLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Unlock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="UnlockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.PDFDocInfo"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetAuthor"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAuthorObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCreationDate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCreator"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCreatorObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetKeywords"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetKeywordsObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetModDate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetProducer"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetProducerObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSubject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSubjectObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTitleObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAuthor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="author" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCreationDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="creation_date" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCreator"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="creator" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetKeywords"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="keywords" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetModDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mod_date" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetProducer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="producer" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSubject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="subject" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.PDFDocViewPrefs"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetDirection"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLayoutMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNonFullScreenPageMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPageMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPref"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pref" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPrintArea"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPrintClip"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetViewArea"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetViewClip"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDirection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="left_to_right" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetInitialPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dest" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLayoutMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="layout" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetNonFullScreenPageMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPageMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPref"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pref" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPrintArea"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPrintClip"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetViewArea"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetViewClip"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.PDFDraw"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="procdata" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DestroyProcData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="procdata" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="java.lang.String">
</parameter>
<parameter name="encoder_params" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBitmap"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFDrawCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAntiAliasing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable_aa" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dpi" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDataBuf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data_ptr" type="long">
</parameter>
<parameter name="image_data" type="int[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDataBufByte"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data_ptr" type="long">
</parameter>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDefaultPageColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="r" type="byte">
</parameter>
<parameter name="g" type="byte">
</parameter>
<parameter name="b" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDrawAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="render_annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetErrorReportProc"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="error_proc" type="com.pdftron.pdf.ErrorReportProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFlipYAxis"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flip_y" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="exp" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHighlightFields"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="highlight_fields" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetImageSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="preserve_aspect_ratio" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<parameter name="hq_image_resampling" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ctx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="overprint" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPageBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="region" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPageTransparent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="is_transparent" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPathHinting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable_ph" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPrintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="is_printing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRasterizerType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRotate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="r" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetThinLineAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pixel_grid_fit" type="boolean">
</parameter>
<parameter name="stroke_adjust" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.PDFNet"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="PDFCompat.PDFRasterizer"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="impl_cancel" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColorPostProcessMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFRasterizerCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFRasterizerCreateCancelFlag"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Rasterize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<parameter name="out_buf" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="stride" type="int">
</parameter>
<parameter name="num_comps" type="int">
</parameter>
<parameter name="demult" type="boolean">
</parameter>
<parameter name="device_mtx" type="long">
</parameter>
<parameter name="clip" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RasterizeToIntBuffer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<parameter name="out_buf" type="int[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="demult" type="boolean">
</parameter>
<parameter name="device_mtx" type="long">
</parameter>
<parameter name="clip" type="long">
</parameter>
<parameter name="scrl_clip" type="long">
</parameter>
<parameter name="impl_cancel" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RasterizeWithCancel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<parameter name="out_buf" type="byte[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="stride" type="int">
</parameter>
<parameter name="num_comps" type="int">
</parameter>
<parameter name="demult" type="boolean">
</parameter>
<parameter name="device_mtx" type="long">
</parameter>
<parameter name="clip" type="long">
</parameter>
<parameter name="cancel" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAntiAliasing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable_aa" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCancel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_cancel" type="long">
</parameter>
<parameter name="cancel" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDefaultPageColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="r" type="byte">
</parameter>
<parameter name="g" type="byte">
</parameter>
<parameter name="b" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDrawAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="render_annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="exp" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHighlightFields"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="highlight_fields" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<parameter name="hq_image_resampling" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ctx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="overprint" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPathHinting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable_ph" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPrintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="is_printing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetThinLineAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pixel_grid_fit" type="boolean">
</parameter>
<parameter name="stroke_adjust" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.PDFViewCtrl"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="CancelAllThumbRequests"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CancelRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ClearSelection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ConvCanvasPtToPagePt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ConvCanvasPtToScreenPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ConvPagePtToCanvasPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ConvPagePtToScreenPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ConvScreenPtToCanvasPt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ConvScreenPtToPagePt"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DestroyFindTextData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="findtext_proc" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DestroyRenderData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="error_proc" type="long">
</parameter>
<parameter name="curr_page_proc" type="long">
</parameter>
<parameter name="findtext_proc" type="long">
</parameter>
<parameter name="thumb_async_proc" type="long">
</parameter>
<parameter name="request_render_worker_proc" type="long">
</parameter>
<parameter name="event_proc" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocLock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="cancel_threads" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocLockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocTryLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocTryLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocUnlock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="DocUnlockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FindTextAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="search_str" type="java.lang.String">
</parameter>
<parameter name="match_case" type="boolean">
</parameter>
<parameter name="match_whole_word" type="boolean">
</parameter>
<parameter name="search_up" type="boolean">
</parameter>
<parameter name="reg_exp" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAnnotationAt"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="distanceThreshold" type="double">
</parameter>
<parameter name="minimumLineWeight" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAnnotationListAt"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x1" type="int">
</parameter>
<parameter name="y1" type="int">
</parameter>
<parameter name="x2" type="int">
</parameter>
<parameter name="y2" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBuffer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data" type="int[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBufferHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBufferStride"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBufferWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCanvasHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCanvasWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColorPostProcessMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCurrentPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDeviceTransform"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHScrollPos"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLinkAt"
 return="com.pdftron.pdf.PDFViewCtrl.LinkInfo"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOCGContext"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPageNumberFromScreenPt"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPagePresentationMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPageViewMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPagesCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetScreenRectForAnnot"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="annot" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSelection"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pagenum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSelectionBeginPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSelectionEndPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetThumbAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_num" type="long">
</parameter>
<parameter name="proc" type="com.pdftron.pdf.ThumbAsyncHandler">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetToolMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVScrollPos"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetZoom"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GotoFirstPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GotoLastPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GotoNextPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GotoPreviousPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasSelection"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasSelectionOnPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InvalidateRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rect" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsFinishedRendering"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="visible_region_only" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="OnScroll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pix_dx" type="int">
</parameter>
<parameter name="pix_dy" type="int">
</parameter>
<parameter name="start_render" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="OnSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="stride" type="int">
</parameter>
<parameter name="start_render" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFViewCtrlCreate2"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctrl" type="java.lang.Object">
</parameter>
<parameter name="call" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RotateClockwise"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RotateCounterClockwise"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SelectAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SelectByHighlights"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="hlts" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SelectByRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SelectBySelection"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="sel" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SelectByStruct"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SelectionGetAsHtml"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SelectionGetAsUnicode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SelectionGetPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SelectionGetQuads"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAntiAliasing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable_aa" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="r" type="byte">
</parameter>
<parameter name="g" type="byte">
</parameter>
<parameter name="b" type="byte">
</parameter>
<parameter name="a" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCurrentPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCurrentPageProc"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="curr_pagenum_proc" type="com.pdftron.pdf.CurrentPageProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDefaultPageColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="r" type="byte">
</parameter>
<parameter name="g" type="byte">
</parameter>
<parameter name="b" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDevicePixelDensity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dpi" type="double">
</parameter>
<parameter name="scale_factor" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDoc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="doc" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDrawAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="render_annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetErrorReportProc"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="error_proc" type="com.pdftron.pdf.ErrorReportProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFindTextHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="findtext_proc" type="java.lang.Object">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="exp" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHScrollPos"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHighlightFields"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="highlight_fields" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHorizontalAlign"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="align" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ctx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="op" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPageBorderVisibility"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="border_visible" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPagePresentationMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPageSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="horiz_col_space" type="int">
</parameter>
<parameter name="vert_col_space" type="int">
</parameter>
<parameter name="horiz_pad" type="int">
</parameter>
<parameter name="vert_pad" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPageTransparencyGrid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="trans_grid_visible" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPageViewMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPathHinting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enable_ph" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetProgressiveRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="is_progressive" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRasterizerType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRequestRenderInWorkerThreadProc"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="proc" type="java.lang.Object">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetThinLineAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pixel_grid_fit" type="boolean">
</parameter>
<parameter name="stroke_adjust" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUrlExtraction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetVScrollPos"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetVerticalAlign"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="align" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetViewerCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc_impl" type="long">
</parameter>
<parameter name="max_cache_size" type="int">
</parameter>
<parameter name="on_disk" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="zoom" type="double">
</parameter>
<parameter name="start_render" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="zoom" type="double">
</parameter>
<parameter name="start_render" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetupThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="use_embedded" type="boolean">
</parameter>
<parameter name="generate_at_runtime" type="boolean">
</parameter>
<parameter name="use_disk_cache" type="boolean">
</parameter>
<parameter name="thumb_max_side_length" type="int">
</parameter>
<parameter name="max_abs_cache_size" type="long">
</parameter>
<parameter name="max_perc_cache_size" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ShowRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<parameter name="rect" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SmartZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="all" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rect" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="annot" type="long">
</parameter>
<parameter name="num_page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="UpdateData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data" type="int[]">
</parameter>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="UpdateField"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="UpdatePageLayout"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Page"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AnnotInsert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="annot" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AnnotPushBack"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="annot" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AnnotPushFront"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="annot" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AnnotRemove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="annot" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AnnotRemove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FindInheritedAttribute"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="attrib" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FlattenField"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="field" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAnnot"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAnnots"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetContents"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCropBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDefaultMatrix"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flip_y" type="boolean">
</parameter>
<parameter name="box_type" type="int">
</parameter>
<parameter name="angle" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIndex"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMediaBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNumAnnots"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPageHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="box_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPageWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="box_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetResourceDict"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetThumb"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetThumbInfo"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUserUnitSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVisibleContentBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasTransition"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Scale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="scale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="box" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCropBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="box" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMediaBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="box" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="angle" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUserUnitSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="unit_size" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.PageLabel"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="style" type="int">
</parameter>
<parameter name="prefix" type="java.lang.String">
</parameter>
<parameter name="start_at" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Equals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFirstPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLabelTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLastPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPrefix"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSDFObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStart"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HashCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageLabelCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="long">
</parameter>
<parameter name="first_page" type="int">
</parameter>
<parameter name="last_page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPrefix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="prefix" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStart"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="start_at" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.PageSet"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AddPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="one_page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="AddRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
<parameter name="filter" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageSetCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageSetCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="one_page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageSetCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PageSetCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
<parameter name="filter" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.PatternColor"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetBBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMatrix"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetShading"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTilingType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTypeObj"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetXStep"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetYStep"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PatternColorCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Print"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="StartPrintJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_pdfdoc" type="long">
</parameter>
<parameter name="in_printerName" type="java.lang.String">
</parameter>
<parameter name="in_jobName" type="java.lang.String">
</parameter>
<parameter name="in_outputFileName" type="java.lang.String">
</parameter>
<parameter name="in_pagesToPrint" type="long">
</parameter>
<parameter name="in_printerMode" type="long">
</parameter>
<parameter name="in_ctx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Rect"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Attach"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rect_obj" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Contains"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Equals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r1" type="long">
</parameter>
<parameter name="r2" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Get"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetX1"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetX2"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetY1"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetY2"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HashCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Height"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Inflate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="amount" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Inflate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IntersectRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rect1" type="long">
</parameter>
<parameter name="rect2" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Normalize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RectCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect_obj" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RectCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetX1"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x1" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetX2"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetY1"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="y1" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetY2"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rect_obj" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Width"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Redactor"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Redact"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="temp" type="long[]">
</parameter>
<parameter name="redaction_overlay" type="boolean">
</parameter>
<parameter name="positive_overlay_color" type="long">
</parameter>
<parameter name="negative_overlay_color" type="long">
</parameter>
<parameter name="border" type="boolean">
</parameter>
<parameter name="use_overlay_text" type="boolean">
</parameter>
<parameter name="font" type="long">
</parameter>
<parameter name="min_font_size" type="double">
</parameter>
<parameter name="max_font_size" type="double">
</parameter>
<parameter name="text_color" type="long">
</parameter>
<parameter name="horiz_text_alignment" type="int">
</parameter>
<parameter name="vert_text_alignment" type="int">
</parameter>
<parameter name="show_redacted_content_regions" type="boolean">
</parameter>
<parameter name="redacted_content_color" type="long">
</parameter>
<parameter name="ext_neg_mode" type="boolean">
</parameter>
<parameter name="page_coord_sys" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RedactionCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="bbox" type="long">
</parameter>
<parameter name="negative" type="boolean">
</parameter>
<parameter name="text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RedactionDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Shading"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetAntialias"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBackground"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBaseColorSpace"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="t" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="t1" type="double">
</parameter>
<parameter name="t2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCoords"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCoordsRadial"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDomain"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMatrix"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetParamEnd"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetParamStart"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTypeStatic"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="shading_dict" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasBBox"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasBackground"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsExtendEnd"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsExtendStart"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.Stamper"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="DeleteStamps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="page_set" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasStamps"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="page_set" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAlignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="horizontal_alignment" type="int">
</parameter>
<parameter name="vertical_alignment" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAsAnnotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="annotation" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAsBackground"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="background" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFont"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="font" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFontColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="color" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="opacity" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="horizontal_distance" type="double">
</parameter>
<parameter name="vertical_distance" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="horizontal_distance" type="double">
</parameter>
<parameter name="vertical_distance" type="double">
</parameter>
<parameter name="percentage" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rotation" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="size_type" type="int">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextAlignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="text_alignment" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ShowsOnPrint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="on_print" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ShowsOnScreen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="on_screen" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StampImage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dest_doc" type="long">
</parameter>
<parameter name="src_img" type="long">
</parameter>
<parameter name="dest_pages" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StampPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dest_doc" type="long">
</parameter>
<parameter name="src_page" type="long">
</parameter>
<parameter name="dest_pages" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StampText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dest_doc" type="long">
</parameter>
<parameter name="src_txt" type="java.lang.String">
</parameter>
<parameter name="dest_pages" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StamperCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size_type" type="int">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.TextExtractor"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="page" type="long">
</parameter>
<parameter name="clip_ptr" type="long">
</parameter>
<parameter name="flags" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAsText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="dehyphen" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAsXML"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="xml_output_flags" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFirstLine"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNumLines"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextUnderAnnot"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="annot_impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetWordCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineEndsWithHyphen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineEquals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="line" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetBBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetCurrentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetFirstWord"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetFlowID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetNextLine"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetNumWords"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetParagraphID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetQuad"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetStyle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineGetWord"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="word_idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineIsSimpleLine"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LineIsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StyleDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StyleEquals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="other" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StyleGetColor"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StyleGetFont"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StyleGetFontName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StyleGetFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StyleGetWeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StyleIsItalic"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="StyleIsSerif"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="TextExtractorCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordDestroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordEquals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="word" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetBBox"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetCharStyle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="char_idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetCurrentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetGlyphQuad"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="glyph_idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetNextWord"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetNumGlyphs"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetQuad"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetStringLen"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordGetStyle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="WordIsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.TextRange"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="AcquireTextRangeImpl"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="com.pdftron.pdf.TextRange">
</parameter>
</method>
<method name="Delete"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPageNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuads"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextAfter"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="count" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextBefore"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="count" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="TextRangeCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFCompat.TextSearch"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Begin"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="doc" type="long">
</parameter>
<parameter name="pattern" type="java.lang.String">
</parameter>
<parameter name="mode" type="int">
</parameter>
<parameter name="start_page" type="int">
</parameter>
<parameter name="end_page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Delete"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCurrentPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Run"
 return="com.pdftron.pdf.TextSearchResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPattern"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pattern" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRightToLeftLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flag" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="TextSearchCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFDoc"
 extends="com.pdftron.sdf.Doc"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sdfdoc" type="com.pdftron.sdf.SDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDoc"
 type="com.pdftron.pdf.PDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="addFileAttachment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file_key" type="java.lang.String">
</parameter>
<parameter name="embedded_file" type="com.pdftron.pdf.FileSpec">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addHighlights"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hilite" type="java.lang.String">
</parameter>
</method>
<method name="addRootBookmark"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="root_bookmark" type="com.pdftron.pdf.Bookmark">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addSignatureHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="signature_handler" type="com.pdftron.sdf.SignatureHandler">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addStdSignatureHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pkcs12_keyfile" type="java.lang.String">
</parameter>
<parameter name="pkcs12_keypass" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addStdSignatureHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pkcs12_keybuffer" type="byte[]">
</parameter>
<parameter name="pkcs12_keypass" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="appendTextDiff"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page1" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="page2" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="appendTextDiff"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc1" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="doc2" type="com.pdftron.pdf.PDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="appendTextDiff"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc1" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="doc2" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="options" type="com.pdftron.pdf.TextDiffOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="appendVisualDiff"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="p1" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="p2" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="opts" type="com.pdftron.pdf.DiffOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDigitalSignatureField"
 return="com.pdftron.pdf.DigitalSignatureField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_sig_field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDigitalSignatureField"
 return="com.pdftron.pdf.DigitalSignatureField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.filters.FilterReader">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="extractFlag" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_list" type="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotations" type="com.pdftron.pdf.Annot[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfExtract"
 return="com.pdftron.fdf.FDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot_added" type="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;">
</parameter>
<parameter name="annot_modified" type="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;">
</parameter>
<parameter name="annot_deleted" type="java.util.ArrayList&lt;com.pdftron.pdf.Annot&gt;">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfMerge"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fdf_doc" type="com.pdftron.fdf.FDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fdfUpdate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fdf_doc" type="com.pdftron.fdf.FDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="def_field_value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="java.lang.String">
</parameter>
<parameter name="def_field_value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="fieldCreate"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<parameter name="type" type="int">
</parameter>
<parameter name="field_value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="forms_only" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenAnnotationsAdvanced"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="flags" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenAnnotationsAdvanced"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flattenModes" type="com.pdftron.pdf.PDFDoc.FlattenMode[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAcroForm"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDigitalSignatureFieldIterator"
 return="com.pdftron.pdf.DigitalSignatureFieldIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDigitalSignaturePermissions"
 return="com.pdftron.pdf.DigitalSignatureField.DocumentPermissions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDocInfo"
 return="com.pdftron.pdf.PDFDocInfo"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDownloadedByteCount"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getField"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFieldIterator"
 return="com.pdftron.pdf.FieldIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFieldIterator"
 return="com.pdftron.pdf.FieldIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFirstBookmark"
 return="com.pdftron.pdf.Bookmark"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCGConfig"
 return="com.pdftron.pdf.ocg.Config"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCGs"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpenAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPage"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageIterator"
 return="com.pdftron.pdf.PageIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageIterator"
 return="com.pdftron.pdf.PageIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageLabel"
 return="com.pdftron.pdf.PageLabel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPages"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRoot"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFDoc"
 return="com.pdftron.sdf.SDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSecurityHandler"
 return="com.pdftron.sdf.SecurityHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSignatureHandler"
 return="com.pdftron.sdf.SignatureHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="signature_handler_id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStructTree"
 return="com.pdftron.pdf.struct.STree"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTotalRemoteByteCount"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTrailer"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="trigger" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="triggerMode" type="com.pdftron.pdf.PDFDoc.ActionTriggerMode">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUndoManager"
 return="com.pdftron.sdf.UndoManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getViewPrefs"
 return="com.pdftron.pdf.PDFDocViewPrefs"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasChangesSinceSnapshot"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasDownloader"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasOC"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasRepairedXRef"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasSignatures"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="highlightTextDiff"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc1" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="doc2" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="options" type="com.pdftron.pdf.TextDiffOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="importPages"
 return="com.pdftron.pdf.Page[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pages" type="com.pdftron.pdf.Page[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="importPages"
 return="com.pdftron.pdf.Page[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pages" type="com.pdftron.pdf.Page[]">
</parameter>
<parameter name="import_bookmarks" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordBuffer" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initializeJSContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="startPage" type="int">
</parameter>
<parameter name="endPage" type="int">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="startPage" type="int">
</parameter>
<parameter name="endPage" type="int">
</parameter>
<parameter name="insertBookmarkMode" type="com.pdftron.pdf.PDFDoc.InsertBookmarkMode">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="sourcePageSet" type="com.pdftron.pdf.PageSet">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertPages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="insertBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="sourcePageSet" type="com.pdftron.pdf.PageSet">
</parameter>
<parameter name="insertBookmarkMode" type="com.pdftron.pdf.PDFDoc.InsertBookmarkMode">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isEncrypted"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLinearized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isTagged"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="lock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="lockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeXFDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf_contents" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="user_id" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeXFDF"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf_contents" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="opts" type="com.pdftron.pdf.MergeXFDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeXFDFString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf_contents" type="java.lang.String">
</parameter>
<parameter name="user_id" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="mergeXFDFString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xfdf_contents" type="java.lang.String">
</parameter>
<parameter name="opts" type="com.pdftron.pdf.MergeXFDFOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="movePages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="moveBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="startPage" type="int">
</parameter>
<parameter name="endPage" type="int">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="movePages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="moveBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="startPage" type="int">
</parameter>
<parameter name="endPage" type="int">
</parameter>
<parameter name="insertBookmarkMode" type="com.pdftron.pdf.PDFDoc.InsertBookmarkMode">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="movePages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="moveBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="sourcePageSet" type="com.pdftron.pdf.PageSet">
</parameter>
<parameter name="insertFlag" type="int">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="movePages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="moveBeforeThisPage" type="int">
</parameter>
<parameter name="sourceDoc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="sourcePageSet" type="com.pdftron.pdf.PageSet">
</parameter>
<parameter name="insertBookmarkMode" type="com.pdftron.pdf.PDFDoc.InsertBookmarkMode">
</parameter>
<parameter name="monitor" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pageCreate"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pageCreate"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="media_box" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pageInsert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="where" type="com.pdftron.pdf.PageIterator">
</parameter>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pagePushBack"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pagePushFront"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pageRemove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_itr" type="com.pdftron.pdf.PageIterator">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshAnnotAppearances"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshAnnotAppearances"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opts" type="com.pdftron.pdf.RefreshOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshFieldAppearances"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removePageLabel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeSecurity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeSignatureHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="signature_handler_id" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<parameter name="progress" type="com.pdftron.pdf.ProgressMonitor">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="output_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="flags" type="long">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="output_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="output_filter" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="saveModes" type="com.pdftron.sdf.SDFDoc.SaveMode[]">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="flags" type="long">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveCustomSignature"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_signature" type="byte[]">
</parameter>
<parameter name="in_field" type="com.pdftron.pdf.DigitalSignatureField">
</parameter>
<parameter name="in_path" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveCustomSignature"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_signature" type="byte[]">
</parameter>
<parameter name="in_field" type="com.pdftron.pdf.DigitalSignatureField">
</parameter>
<parameter name="output_filter" type="com.pdftron.filters.Filter">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveIncrementalData"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveViewerOptimized"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="opts" type="com.pdftron.pdf.ViewerOptimizedOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveViewerOptimized"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opts" type="com.pdftron.pdf.ViewerOptimizedOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpenAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageLabel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="label" type="com.pdftron.pdf.PageLabel">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSecurityHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="handler" type="com.pdftron.sdf.SecurityHandler">
</parameter>
</method>
<method name="timedLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="timedLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tryLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tryLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="verifySignedDigitalSignatures"
 return="com.pdftron.pdf.PDFDoc.SignaturesVerificationStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_opts" type="com.pdftron.pdf.VerificationOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_action_trigger_doc_did_print"
 type="int"
 transient="false"
 volatile="false"
 value="21"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_doc_did_save"
 type="int"
 transient="false"
 volatile="false"
 value="19"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_doc_will_close"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_doc_will_print"
 type="int"
 transient="false"
 volatile="false"
 value="20"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_doc_will_save"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_annots_only"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_both"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_flatten_all"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_flatten_annots_only"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_flatten_forms_only"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_flatten_link_only"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_forms_only"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_insert_bookmark"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="mCustomFilter"
 type="com.pdftron.filters.Filter"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFDoc.ActionTriggerMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFDoc.ActionTriggerMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFDoc.ActionTriggerMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFDoc.FlattenMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFDoc.FlattenMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFDoc.FlattenMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFDoc.InsertBookmarkMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFDoc.InsertBookmarkMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFDoc.InsertBookmarkMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFDoc.SignaturesVerificationStatus"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.PDFDoc.SignaturesVerificationStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFDoc.SignaturesVerificationStatus[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFDocGenerator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="generateBlankPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateDottedPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="dot_spacing" type="double">
</parameter>
<parameter name="dot_size" type="double">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
</method>
<method name="generateGraphPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="grid_spacing" type="double">
</parameter>
<parameter name="line_thickness" type="double">
</parameter>
<parameter name="weighted_line_thickness" type="double">
</parameter>
<parameter name="weighted_line_freq" type="int">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateGridPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="grid_spacing" type="double">
</parameter>
<parameter name="line_thickness" type="double">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateIsometricDottedPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="dot_spacing" type="double">
</parameter>
<parameter name="dot_size" type="double">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
</method>
<method name="generateLinedPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="line_spacing" type="double">
</parameter>
<parameter name="line_thickness" type="double">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="left_margin_distance" type="double">
</parameter>
<parameter name="left_margin_red" type="double">
</parameter>
<parameter name="left_margin_green" type="double">
</parameter>
<parameter name="left_margin_blue" type="double">
</parameter>
<parameter name="right_margin_red" type="double">
</parameter>
<parameter name="right_margin_green" type="double">
</parameter>
<parameter name="right_margin_blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<parameter name="top_margin_distance" type="double">
</parameter>
<parameter name="bottom_margin_distance" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="generateMusicPaperDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="double">
</parameter>
<parameter name="height" type="double">
</parameter>
<parameter name="margin" type="double">
</parameter>
<parameter name="staves" type="int">
</parameter>
<parameter name="linespace_size_pts" type="double">
</parameter>
<parameter name="line_thickness" type="double">
</parameter>
<parameter name="red" type="double">
</parameter>
<parameter name="green" type="double">
</parameter>
<parameter name="blue" type="double">
</parameter>
<parameter name="background_red" type="double">
</parameter>
<parameter name="background_green" type="double">
</parameter>
<parameter name="background_blue" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFDocInfo"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFDocInfo"
 type="com.pdftron.pdf.PDFDocInfo"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tr" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getAuthor"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAuthorObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreationDate"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreator"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreatorObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getKeywords"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getKeywordsObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getModDate"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getProducer"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getProducerObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSubject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSubjectObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitleObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAuthor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="author" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreationDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="creation_date" type="com.pdftron.pdf.Date">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreator"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="creator" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setKeywords"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keywords" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setModDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mod_date" type="com.pdftron.pdf.Date">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setProducer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="producer" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSubject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="subject" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFDocViewPrefs"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFDocViewPrefs"
 type="com.pdftron.pdf.PDFDocViewPrefs"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tr" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getDirection"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLayoutMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNonFullScreenPageMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPref"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pref" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPrintArea"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPrintClip"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getViewArea"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getViewClip"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDirection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="left_to_right" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitialPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest" type="com.pdftron.pdf.Destination">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLayoutMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="layout" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNonFullScreenPageMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPref"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pref" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintArea"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintClip"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setViewArea"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setViewClip"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_CenterWindow"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Default"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_DisplayDocTitle"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FitWindow"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FullScreen"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_HideMenubar"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_HideToolbar"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_HideWindowUI"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OneColumn"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_SinglePage"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TwoColumnLeft"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TwoColumnRight"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TwoPageLeft"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TwoPageRight"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseAttachments"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseBookmarks"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseNone"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseOC"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_UseThumbs"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFDraw"
 extends="com.pdftron.pdf.__DelayDelete"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFDraw"
 type="com.pdftron.pdf.PDFDraw"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFDraw"
 type="com.pdftron.pdf.PDFDraw"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="drawInRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="g" type="java.awt.Graphics">
</parameter>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="format" type="java.lang.String">
</parameter>
<parameter name="encoder_params" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBitmap"
 return="java.awt.image.BufferedImage"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
</method>
<method name="getBitmap"
 return="java.awt.image.BufferedImage"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="image" type="java.awt.image.BufferedImage">
</parameter>
</method>
<method name="getByteBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
</method>
<method name="getIntBuffer"
 return="com.pdftron.pdf.PDFDraw.IntBufferData"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
</method>
<method name="getSeparationBitmaps"
 return="com.pdftron.pdf.Separation[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAntiAliasing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_aa" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setClipRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultPageColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="byte">
</parameter>
<parameter name="g" type="byte">
</parameter>
<parameter name="b" type="byte">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDrawAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="render_annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setErrorReportProc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="error_proc" type="com.pdftron.pdf.ErrorReportProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFlipYAxis"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flip_y" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exp" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHighlightFields"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="highlight_fields" type="boolean">
</parameter>
</method>
<method name="setImageSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="preserve_aspect_ratio" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<parameter name="hq_image_resampling" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="op" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="region" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageTransparent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_transparent" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathHinting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_ph" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_printing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRasterizerType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThinLineAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pixel_grid_fit" type="boolean">
</parameter>
<parameter name="stroke_adjust" type="boolean">
</parameter>
</method>
<field name="e_bgr"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bgra"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_gray"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_gray_alpha"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_invert"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rgb"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rgba"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFDraw.IntBufferData"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="IntBufferData"
 type="com.pdftron.pdf.PDFDraw.IntBufferData"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="data"
 type="int[]"
 transient="false"
 volatile="false"
 value="null"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="height"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="stride"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="width"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFNet"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFNet"
 type="com.pdftron.pdf.PDFNet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addFontSubst"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fontname" type="java.lang.String">
</parameter>
<parameter name="fontpath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addFontSubst"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ordering" type="int">
</parameter>
<parameter name="fontpath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addPDFTronCustomHandler"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="custom_id" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addResourceSearchPath"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="enableJavaScript"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable" type="boolean">
</parameter>
</method>
<method name="getResourcesPath"
 return="java.lang.String"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSystemFontList"
 return="java.lang.String"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVersion"
 return="double"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVersionString"
 return="java.lang.String"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="license_key" type="java.lang.String">
</parameter>
</method>
<method name="isJavaScriptEnabled"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setColorManagement"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="t" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setConnectionErrorHandlingMode"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setConnectionErrorProc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="error_proc" type="com.pdftron.pdf.ConnectionErrorProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultDeviceCMYKProfile"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icc_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultDeviceRGBProfile"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icc_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultDiskCachingEnabled"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="use_disk" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultFlateCompressionLevel"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="level" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLogLevel"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="level" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPersistentCachePath"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="persistent_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setResourcesPath"
 return="boolean"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
</method>
<method name="setTempPath"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="temp_path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setViewerCache"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="max_cache_size" type="int">
</parameter>
<parameter name="on_disk" type="boolean">
</parameter>
</method>
<method name="setWriteAPIUsageLocally"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="write_usage" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="terminate"
 return="void"
 abstract="false"
 native="true"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="e_CNS1"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ConnectionErrorHandlingMode_continue"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ConnectionErrorHandlingMode_continue_unless_switching_to_demo"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ConnectionErrorHandlingMode_stop"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_GB1"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Identity"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japan1"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japan2"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Korea1"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LogLevel_Debug"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LogLevel_Error"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LogLevel_Fatal"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LogLevel_Info"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LogLevel_Off"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LogLevel_Trace"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LogLevel_Warning"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_icm"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_lcms"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_cms"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_status_bad_Credentials"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_status_err"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_status_invalid_operation"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_status_network_err"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_status_ok"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_status_service_down"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_z_best_compression"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_z_best_speed"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_z_default_compression"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_z_no_compression"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFNetInternalTools"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="checkDocIntegrity"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="configureLogFromJsonString"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="disableLogBackend"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="backend" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableLogBackend"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="backend" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultConfigFile"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPDFViewTileSummary"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLogSystemAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="logMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="line_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="logStreamMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<parameter name="stream" type="java.lang.String">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="filename" type="java.lang.String">
</parameter>
<parameter name="line_number" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="runUniversalConversionTests"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path_with_docs" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAnalyticsHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="handler" type="com.pdftron.pdf.AnalyticsHandlerCallback">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAssertHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="handler" type="com.pdftron.pdf.AssertHandlerCallback">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCutoffLogThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultLogThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLogFileName"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="log_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLogLocation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="log_directory" type="java.lang.String">
</parameter>
<parameter name="log_filename" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThresholdForLogStream"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream_name" type="java.lang.String">
</parameter>
<parameter name="stream_threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_callback"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_console"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_debug"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_debugger"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_disabled"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_disk"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_error"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fatal"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_info"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_trace"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_warning"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFRasterizer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFRasterizer"
 type="com.pdftron.pdf.PDFRasterizer"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorPostProcessMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="rasterize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="buffer" type="int[]">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="demult" type="boolean">
</parameter>
<parameter name="device_mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<parameter name="clip" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rasterize"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="stride" type="int">
</parameter>
<parameter name="num_comps" type="int">
</parameter>
<parameter name="demult" type="boolean">
</parameter>
<parameter name="device_mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<parameter name="clip" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rasterizeSeparations"
 return="com.pdftron.pdf.Separation[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
<parameter name="device_mtx" type="com.pdftron.common.Matrix2D">
</parameter>
<parameter name="clip" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="cancel" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAntiAliasing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_aa" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCancel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cancel" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessColors"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="white_color" type="int">
</parameter>
<parameter name="black_color" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessMapFile"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="image_file_contents" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setDrawAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="render_annots" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exp" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHighlightFields"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="highlight_fields" type="boolean">
</parameter>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
<parameter name="hq_image_resampling" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="op" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPathHinting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_ph" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrintMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_printing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThinLineAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pixel_grid_fit" type="boolean">
</parameter>
<parameter name="stroke_adjust" type="boolean">
</parameter>
</method>
<field name="e_postprocess_gradient_map"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_invert"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_night_mode"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFViewCtrl"
 extends="javax.swing.JComponent"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.pdftron.pdf.__Delete">
</implements>
<constructor name="PDFViewCtrl"
 type="com.pdftron.pdf.PDFViewCtrl"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PDFViewCtrl"
 type="com.pdftron.pdf.PDFViewCtrl"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="preferred_width" type="int">
</parameter>
</constructor>
<method name="GetSelectionBeginPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="GetSelectionEndPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="HasSelectionOnPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="int">
</parameter>
</method>
<method name="canRedo"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="canUndo"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="cancelAllThumbRequests"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="cancelRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="cancelRenderingAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="clearSelection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="convCanvasPtToPagePt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convCanvasPtToPagePt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="convCanvasPtToScreenPt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convPagePtToCanvasPt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convPagePtToCanvasPt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="convPagePtToScreenPt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convPagePtToScreenPt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="convScreenPtToCanvasPt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convScreenPtToPagePt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="convScreenPtToPagePt"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="docLock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cancel_thread" type="boolean">
</parameter>
</method>
<method name="docLockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="docTryLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
</method>
<method name="docTryLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
</method>
<method name="docUnlock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="docUnlockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="enableUndoRedo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findTextAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="search_str" type="java.lang.String">
</parameter>
<parameter name="match_case" type="boolean">
</parameter>
<parameter name="match_whole_word" type="boolean">
</parameter>
<parameter name="search_up" type="boolean">
</parameter>
<parameter name="reg_exp" type="boolean">
</parameter>
</method>
<method name="getAnnotationAt"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
</method>
<method name="getAnnotationAt"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="distanceThreshold" type="double">
</parameter>
<parameter name="minimumLineWeight" type="double">
</parameter>
</method>
<method name="getAnnotationListAt"
 return="com.pdftron.pdf.Annot[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="int">
</parameter>
<parameter name="y1" type="int">
</parameter>
<parameter name="x2" type="int">
</parameter>
<parameter name="y2" type="int">
</parameter>
</method>
<method name="getAnnotationsOnPage"
 return="com.pdftron.pdf.Annot[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="getBufferHeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBufferStride"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBufferWidth"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCanvasHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCanvasWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getColorPostProcessMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDeviceTransform"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDeviceTransform"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="getDoc"
 return="com.pdftron.pdf.PDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExternalAnnotManager"
 return="com.pdftron.pdf.ExternalAnnotManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="author_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getExternalAnnotManager"
 return="com.pdftron.pdf.ExternalAnnotManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="author_name" type="java.lang.String">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getH"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHScrollPos"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLinkAt"
 return="com.pdftron.pdf.PDFViewCtrl.LinkInfo"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
</method>
<method name="getNextRedoInfo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNextUndoInfo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCGContext"
 return="com.pdftron.pdf.ocg.Context"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageNumberFromScreenPt"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="getPagePresentationMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageViewMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPreferredScrollableViewportSize"
 return="java.awt.Dimension"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScreenRectForAnnot"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="getScrollableBlockIncrement"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visibleRect" type="java.awt.Rectangle">
</parameter>
<parameter name="orientation" type="int">
</parameter>
<parameter name="direction" type="int">
</parameter>
</method>
<method name="getScrollableTracksViewportHeight"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getScrollableTracksViewportWidth"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getScrollableUnitIncrement"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visibleRect" type="java.awt.Rectangle">
</parameter>
<parameter name="orientation" type="int">
</parameter>
<parameter name="direction" type="int">
</parameter>
</method>
<method name="getSelection"
 return="com.pdftron.pdf.PDFViewCtrl.Selection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="int">
</parameter>
</method>
<method name="getThumbAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="proc" type="com.pdftron.pdf.ThumbAsyncHandler">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
</method>
<method name="getToolMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getV"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getVScrollPos"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getViewPane"
 return="com.pdftron.pdf.PDFViewScrollPane"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getZoom"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="gotoFirstPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="gotoLastPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="gotoNextPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="gotoPreviousPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasSelection"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hideAnnotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
</method>
<method name="invalidateRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="invalidateRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.pdf.Rect">
</parameter>
</method>
<method name="isFinishedRendering"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="onScroll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pix_dx" type="int">
</parameter>
<parameter name="pix_dy" type="int">
</parameter>
</method>
<method name="redo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="refreshAndUpdate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="view_change" type="com.pdftron.pdf.ViewChangeCollection">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="revertAllChanges"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rotateClockwise"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="rotateCounterClockwise"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="selectAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="selectByHighlights"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hlts" type="com.pdftron.pdf.Highlights">
</parameter>
</method>
<method name="selectByRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
</method>
<method name="selectBySelection"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sel" type="com.pdftron.pdf.PDFViewCtrl.Selection">
</parameter>
</method>
<method name="selectByStruct"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
</method>
<method name="setAntiAliasing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_aa" type="boolean">
</parameter>
</method>
<method name="setBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="byte">
</parameter>
<parameter name="g" type="byte">
</parameter>
<parameter name="b" type="byte">
</parameter>
</method>
<method name="setCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
</method>
<method name="setColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setColorPostProcessMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.ColorPostprocessMode">
</parameter>
</method>
<method name="setCurrentPage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
</method>
<method name="setCurrentPageProc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="curr_pagenum_proc" type="com.pdftron.pdf.CurrentPageProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
</method>
<method name="setDefaultPageColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="byte">
</parameter>
<parameter name="g" type="byte">
</parameter>
<parameter name="b" type="byte">
</parameter>
</method>
<method name="setDefaultPageColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="java.awt.Color">
</parameter>
</method>
<method name="setDevicePixelDensity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="double">
</parameter>
<parameter name="scale_factor" type="double">
</parameter>
</method>
<method name="setDoc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
</method>
<method name="setDrawAnnotations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="render_annots" type="boolean">
</parameter>
</method>
<method name="setErrorReportProc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="error_proc" type="com.pdftron.pdf.ErrorReportProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
</method>
<method name="setFieldHighlightColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cp" type="com.pdftron.pdf.ColorPt">
</parameter>
</method>
<method name="setFindTextHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="proc" type="com.pdftron.pdf.FindTextProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
</method>
<method name="setGamma"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exp" type="double">
</parameter>
</method>
<method name="setH"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="h" type="int">
</parameter>
</method>
<method name="setHScrollPos"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="double">
</parameter>
</method>
<method name="setHighlightFields"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="highlight_fields" type="boolean">
</parameter>
</method>
<method name="setHorizontalAlign"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="align" type="int">
</parameter>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setImageSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing_enabled" type="boolean">
</parameter>
</method>
<method name="setOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="op" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageBorderVisibility"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="border_visible" type="boolean">
</parameter>
</method>
<method name="setPagePresentationMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setPagePresentationMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode">
</parameter>
</method>
<method name="setPageSpacing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="horiz_col_space" type="int">
</parameter>
<parameter name="vert_col_space" type="int">
</parameter>
<parameter name="horiz_pad" type="int">
</parameter>
<parameter name="vert_pad" type="int">
</parameter>
</method>
<method name="setPageTransparencyGrid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="trans_grid_visible" type="boolean">
</parameter>
</method>
<method name="setPageViewMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setPageViewMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="com.pdftron.pdf.PDFViewCtrl.PageViewMode">
</parameter>
</method>
<method name="setPathHinting"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enable_ph" type="boolean">
</parameter>
</method>
<method name="setPreferredSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="width" type="int">
</parameter>
<parameter name="height" type="int">
</parameter>
</method>
<method name="setProgressiveRendering"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_progressive" type="boolean">
</parameter>
</method>
<method name="setRasterizer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="builtin_rasterizer" type="boolean">
</parameter>
</method>
<method name="setRequestRenderInWorkerThreadProc"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="render_worker_proc" type="com.pdftron.pdf.RequestRenderInWorkerThreadProc">
</parameter>
<parameter name="data" type="java.lang.Object">
</parameter>
</method>
<method name="setRequiredFieldBorderColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cp" type="com.pdftron.pdf.ColorPt">
</parameter>
</method>
<method name="setSignatureHighlightColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cp" type="com.pdftron.pdf.ColorPt">
</parameter>
</method>
<method name="setSnappingMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode_flags" type="int">
</parameter>
</method>
<method name="setThinLineAdjustment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pixel_grid_fit" type="boolean">
</parameter>
<parameter name="stroke_adjust" type="boolean">
</parameter>
</method>
<method name="setToolMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setUrlExtraction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
</method>
<method name="setV"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="v" type="int">
</parameter>
</method>
<method name="setVScrollPos"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="double">
</parameter>
</method>
<method name="setVerticalAlign"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="align" type="int">
</parameter>
</method>
<method name="setViewerCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="document" type="com.pdftron.sdf.SDFDoc">
</parameter>
<parameter name="max_cache_size" type="int">
</parameter>
<parameter name="on_disk" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="zoom" type="double">
</parameter>
</method>
<method name="setZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="zoom" type="double">
</parameter>
</method>
<method name="setupThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="use_embedded" type="boolean">
</parameter>
<parameter name="generate_at_runtime" type="boolean">
</parameter>
<parameter name="use_disk_cache" type="boolean">
</parameter>
<parameter name="thumb_max_side_length" type="int">
</parameter>
<parameter name="max_abs_cache_size" type="long">
</parameter>
<parameter name="max_perc_cache_size" type="double">
</parameter>
</method>
<method name="showAnnotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
</method>
<method name="showRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="rect" type="com.pdftron.pdf.Rect">
</parameter>
</method>
<method name="smartZoom"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
</method>
<method name="snapToNearestInDoc"
 return="java.awt.geom.Point2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="takeSnapshot"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="meta_info" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="undo"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rec" type="com.pdftron.pdf.Rect">
</parameter>
</method>
<method name="update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="a" type="com.pdftron.pdf.Annot">
</parameter>
<parameter name="num_page" type="int">
</parameter>
</method>
<method name="update"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
</method>
<method name="updatePageLayout"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="e_AnnotMgr_Admin_undoOthers"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AnnotMgr_Admin_undoOwn"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AnnotMgr_UserOnly"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_custom"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_facing"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_facing_continuous"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_facing_continuous_cover"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_facing_cover"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_fit_height"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_fit_page"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_fit_width"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_pan"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_invert"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_postprocess_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_single_continuous"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_single_page"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_text_rect_select"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_text_struct_select"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_zoom"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
</class>
<class name="PDFViewCtrl.ColorPostprocessMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.ColorPostprocessMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.ColorPostprocessMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFViewCtrl.LinkInfo"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getURL"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getX1"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getX2"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getY1"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getY2"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFViewCtrl.PagePresentationMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.PagePresentationMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFViewCtrl.PageViewMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.PDFViewCtrl.PageViewMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.PDFViewCtrl.PageViewMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFViewCtrl.Selection"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getAsHtml"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAsUnicode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getQuads"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFViewScrollPane"
 extends="javax.swing.JPanel"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFViewScrollPane"
 type="com.pdftron.pdf.PDFViewScrollPane"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="view" type="com.pdftron.pdf.PDFViewCtrl">
</parameter>
</constructor>
<method name="getHScrollbar"
 return="javax.swing.JScrollBar"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getVScrollbar"
 return="javax.swing.JScrollBar"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="refresh"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="updateHScrollbarValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="updateScrollbarValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="updateVScrollbarValue"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Page"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Page"
 type="com.pdftron.pdf.Page"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Page"
 type="com.pdftron.pdf.Page"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="addRotations"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r0" type="int">
</parameter>
<parameter name="r1" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotInsert"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotPushBack"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotPushFront"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotRemove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="annotRemove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="degreeToRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findInheritedAttribute"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attrib" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="flattenField"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAnnot"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAnnots"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContents"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCropBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flip_y" type="boolean">
</parameter>
<parameter name="box_type" type="int">
</parameter>
<parameter name="rot_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIndex"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMediaBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumAnnots"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getResourceDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getThumb"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getThumbInfo"
 return="int[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTriggerAction"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="trigger" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUserUnitSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVisibleContentBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasTransition"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rotationToDegree"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="scale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<parameter name="box" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCropBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMediaBox"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="box" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rot_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUserUnitSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="unit_size" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="subtractRotations"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r0" type="int">
</parameter>
<parameter name="r1" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_0"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_180"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_270"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_90"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_page_close"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_action_trigger_page_open"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_art"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bleed"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_crop"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_media"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_trim"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_user_crop"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PageIterator"
 extends="com.pdftron.common.PDFNetIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="next"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PageLabel"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PageLabel"
 type="com.pdftron.pdf.PageLabel"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PageLabel"
 type="com.pdftron.pdf.PageLabel"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PageLabel"
 type="com.pdftron.pdf.PageLabel"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="first_page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PageLabel"
 type="com.pdftron.pdf.PageLabel"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="l" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="first_page" type="int">
</parameter>
<parameter name="last_page" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.PageLabel"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.PageLabel"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="style" type="int">
</parameter>
<parameter name="prefix" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.PageLabel"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="style" type="int">
</parameter>
<parameter name="prefix" type="java.lang.String">
</parameter>
<parameter name="start_at" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFirstPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLabelTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLastPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPrefix"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStart"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPrefix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="prefix" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStart"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="start_at" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_alphabetic_lowercase"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_alphabetic_uppercase"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_decimal"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_roman_lowercase"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_roman_uppercase"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PageSet"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PageSet"
 type="com.pdftron.pdf.PageSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PageSet"
 type="com.pdftron.pdf.PageSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="one_page" type="int">
</parameter>
</constructor>
<constructor name="PageSet"
 type="com.pdftron.pdf.PageSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
</constructor>
<constructor name="PageSet"
 type="com.pdftron.pdf.PageSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
<parameter name="filter" type="int">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="addPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="one_page" type="int">
</parameter>
</method>
<method name="addRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
</method>
<method name="addRange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="range_start" type="int">
</parameter>
<parameter name="range_end" type="int">
</parameter>
<parameter name="filter" type="int">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_all"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_even"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_odd"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PathData"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PathData"
 type="com.pdftron.pdf.PathData"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="defined" type="boolean">
</parameter>
<parameter name="operators" type="byte[]">
</parameter>
<parameter name="data_points" type="double[]">
</parameter>
</constructor>
<method name="getOperators"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPoints"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isDefined"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setOperators"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operators" type="byte[]">
</parameter>
</method>
<method name="setPoints"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="points" type="double[]">
</parameter>
</method>
<field name="e_closepath"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_conicto"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_cubicto"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_lineto"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_moveto"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_rect"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="PatternColor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PatternColor"
 type="com.pdftron.pdf.PatternColor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getShading"
 return="com.pdftron.pdf.Shading"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTilingType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getXStep"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getYStep"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_colored_tiling_pattern"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_constant_spacing"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_constant_spacing_fast_fill"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_distortion"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_shading"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_uncolored_tiling_pattern"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Point"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Point"
 type="com.pdftron.pdf.Point"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Point"
 type="com.pdftron.pdf.Point"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</constructor>
<constructor name="Point"
 type="com.pdftron.pdf.Point"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="points" type="double[]">
</parameter>
</constructor>
<field name="x"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="y"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Print"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Print"
 type="com.pdftron.pdf.Print"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="startPrintJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="in_printerName" type="java.lang.String">
</parameter>
<parameter name="in_jobName" type="java.lang.String">
</parameter>
<parameter name="in_outputFileName" type="java.lang.String">
</parameter>
<parameter name="in_pagesToPrint" type="com.pdftron.pdf.PageSet">
</parameter>
<parameter name="in_printerMode" type="com.pdftron.pdf.PrinterMode">
</parameter>
<parameter name="in_ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
</method>
</class>
<class name="PrinterMode"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PrinterMode"
 type="com.pdftron.pdf.PrinterMode"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAutoCenter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="autoCenter" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAutoRotate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="autoRotate" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCollation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="collation" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCopyCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="copyCount" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDPI"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dpi" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDuplexing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNUp"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nup" type="int">
</parameter>
<parameter name="pageOrder" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNUp"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="int">
</parameter>
<parameter name="y" type="int">
</parameter>
<parameter name="pageOrder" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOrientation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orientation" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOutputAnnot"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="printContent" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOutputColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOutputPageBorder"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="printBorder" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOutputQuality"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="quality" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPaperSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPaperSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="paperSize" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScale"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scale" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScaleType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scaleType" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUseRleImageCompression"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="useRleImageCompression" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_10x11"
 type="int"
 transient="false"
 volatile="false"
 value="45"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_10x14"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_11x17"
 type="int"
 transient="false"
 volatile="false"
 value="17"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_12x11"
 type="int"
 transient="false"
 volatile="false"
 value="89"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_15x11"
 type="int"
 transient="false"
 volatile="false"
 value="46"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_6_3_Quarters_Envelope"
 type="int"
 transient="false"
 volatile="false"
 value="38"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_9x11"
 type="int"
 transient="false"
 volatile="false"
 value="44"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A2"
 type="int"
 transient="false"
 volatile="false"
 value="66"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A3"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A3_Extra"
 type="int"
 transient="false"
 volatile="false"
 value="63"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A3_Extra_Transverse"
 type="int"
 transient="false"
 volatile="false"
 value="67"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A3_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="75"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A3_Transverse"
 type="int"
 transient="false"
 volatile="false"
 value="66"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A4"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A4_Extra"
 type="int"
 transient="false"
 volatile="false"
 value="53"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A4_Plus"
 type="int"
 transient="false"
 volatile="false"
 value="60"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A4_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="76"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A4_Small"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A4_Transverse"
 type="int"
 transient="false"
 volatile="false"
 value="55"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A5"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A5_Extra"
 type="int"
 transient="false"
 volatile="false"
 value="64"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A5_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="77"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A5_Transverse"
 type="int"
 transient="false"
 volatile="false"
 value="61"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A6"
 type="int"
 transient="false"
 volatile="false"
 value="69"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_A6_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="82"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_B4_ISO"
 type="int"
 transient="false"
 volatile="false"
 value="42"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_B4_JIS"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_B4_JIS_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="78"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_B5_ISO_Extra"
 type="int"
 transient="false"
 volatile="false"
 value="65"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_B5_JIS"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_B5_JIS_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="79"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_B5_JIS_Transverse"
 type="int"
 transient="false"
 volatile="false"
 value="62"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_B6_JIS"
 type="int"
 transient="false"
 volatile="false"
 value="87"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_B6_JIS_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="88"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_C_Size_Sheet"
 type="int"
 transient="false"
 volatile="false"
 value="24"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Custom"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_D_Size_Sheet"
 type="int"
 transient="false"
 volatile="false"
 value="25"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Double_Japanese_Postcard_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="81"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Duplex_Auto"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Duplex_LongSide"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Duplex_None"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Duplex_ShortSide"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_E_Size_Sheet"
 type="int"
 transient="false"
 volatile="false"
 value="26"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_10"
 type="int"
 transient="false"
 volatile="false"
 value="20"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_11"
 type="int"
 transient="false"
 volatile="false"
 value="21"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_12"
 type="int"
 transient="false"
 volatile="false"
 value="22"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_14"
 type="int"
 transient="false"
 volatile="false"
 value="23"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_9"
 type="int"
 transient="false"
 volatile="false"
 value="19"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_B4"
 type="int"
 transient="false"
 volatile="false"
 value="33"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_B5"
 type="int"
 transient="false"
 volatile="false"
 value="34"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_B6"
 type="int"
 transient="false"
 volatile="false"
 value="35"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_C3"
 type="int"
 transient="false"
 volatile="false"
 value="29"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_C4"
 type="int"
 transient="false"
 volatile="false"
 value="30"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_C5"
 type="int"
 transient="false"
 volatile="false"
 value="28"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_C6"
 type="int"
 transient="false"
 volatile="false"
 value="31"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_C65"
 type="int"
 transient="false"
 volatile="false"
 value="32"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_DL"
 type="int"
 transient="false"
 volatile="false"
 value="27"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_Invite"
 type="int"
 transient="false"
 volatile="false"
 value="47"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_Italy"
 type="int"
 transient="false"
 volatile="false"
 value="36"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Envelope_Monarch"
 type="int"
 transient="false"
 volatile="false"
 value="37"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Executive"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Folio"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_German_Legal_Fanfold"
 type="int"
 transient="false"
 volatile="false"
 value="41"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_German_Std_Fanfold"
 type="int"
 transient="false"
 volatile="false"
 value="40"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Double_Postcard"
 type="int"
 transient="false"
 volatile="false"
 value="68"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_Kaku_2"
 type="int"
 transient="false"
 volatile="false"
 value="70"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_Kaku_2_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="83"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_Kaku_3"
 type="int"
 transient="false"
 volatile="false"
 value="71"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_Kaku_3_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="84"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_You_4"
 type="int"
 transient="false"
 volatile="false"
 value="90"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_You_4_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="91"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_chou_3"
 type="int"
 transient="false"
 volatile="false"
 value="72"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_chou_3_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="85"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_chou_4"
 type="int"
 transient="false"
 volatile="false"
 value="73"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Envelope_chou_4_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="86"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Postcard"
 type="int"
 transient="false"
 volatile="false"
 value="43"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Japanese_Postcard_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="80"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Ledger"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Legal"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Legal_Extra"
 type="int"
 transient="false"
 volatile="false"
 value="51"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Letter"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Letter_Extra"
 type="int"
 transient="false"
 volatile="false"
 value="50"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Letter_Extra_Transverse"
 type="int"
 transient="false"
 volatile="false"
 value="56"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Letter_Plus"
 type="int"
 transient="false"
 volatile="false"
 value="59"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Letter_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="74"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Letter_Small"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Letter_Transverse"
 type="int"
 transient="false"
 volatile="false"
 value="54"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NUp_1_1"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NUp_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NUp_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NUp_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NUp_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NUp_4_4"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Note"
 type="int"
 transient="false"
 volatile="false"
 value="18"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Orientation_Landscape"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Orientation_Portrait"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OutputColor_Color"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OutputColor_Grayscale"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OutputColor_Monochrome"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OutputQuality_Draft"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OutputQuality_High"
 type="int"
 transient="false"
 volatile="false"
 value="-4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OutputQuality_Low"
 type="int"
 transient="false"
 volatile="false"
 value="-2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OutputQuality_Medium"
 type="int"
 transient="false"
 volatile="false"
 value="-3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_16k"
 type="int"
 transient="false"
 volatile="false"
 value="92"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_16k_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="105"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_32k"
 type="int"
 transient="false"
 volatile="false"
 value="93"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_32k_Big"
 type="int"
 transient="false"
 volatile="false"
 value="94"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_32k_Big__Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="107"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_32k_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="106"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_1"
 type="int"
 transient="false"
 volatile="false"
 value="95"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_10"
 type="int"
 transient="false"
 volatile="false"
 value="104"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_10_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="117"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_1_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="108"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_2"
 type="int"
 transient="false"
 volatile="false"
 value="96"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_2_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="109"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_3"
 type="int"
 transient="false"
 volatile="false"
 value="97"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_3_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="110"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_4"
 type="int"
 transient="false"
 volatile="false"
 value="98"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_4_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="111"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_5"
 type="int"
 transient="false"
 volatile="false"
 value="99"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_5_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="112"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_6"
 type="int"
 transient="false"
 volatile="false"
 value="100"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_6_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="113"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_7"
 type="int"
 transient="false"
 volatile="false"
 value="101"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_7_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="114"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_8"
 type="int"
 transient="false"
 volatile="false"
 value="102"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_8_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="115"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_9"
 type="int"
 transient="false"
 volatile="false"
 value="103"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PRC_Envelop_9_Rotated"
 type="int"
 transient="false"
 volatile="false"
 value="116"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PageOrder_BottomToTopThenLeftToRight"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PageOrder_LeftToRightThenTopToBottom"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PageOrder_RightToLeftThenTopToBottom"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PageOrder_TopToBottomThenLeftToRight"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PrintContent_DocumentAndAnnotations"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PrintContent_DocumentAnnotationsAndComments"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PrintContent_DocumentOnly"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Quarto"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Reserved_48"
 type="int"
 transient="false"
 volatile="false"
 value="48"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Reserved_49"
 type="int"
 transient="false"
 volatile="false"
 value="49"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ScaleType_FitToOutputPage"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ScaleType_None"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ScaleType_ReduceToOutputPage"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Statement"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Supera_Supera_A4"
 type="int"
 transient="false"
 volatile="false"
 value="57"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Superb_Superb_A3"
 type="int"
 transient="false"
 volatile="false"
 value="58"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Tabloid"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Tabloid_Extra"
 type="int"
 transient="false"
 volatile="false"
 value="52"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_US_Std_Fanfold"
 type="int"
 transient="false"
 volatile="false"
 value="39"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<interface name="ProgressMonitor"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getPos"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRangeFinish"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRangeStart"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="offsetPos"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="int">
</parameter>
</method>
<method name="setPos"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
</method>
<method name="setRange"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="start" type="int">
</parameter>
<parameter name="finish" type="int">
</parameter>
</method>
<method name="setStep"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="nstep" type="int">
</parameter>
</method>
<method name="stepIt"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="QuadPoint"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="QuadPoint"
 type="com.pdftron.pdf.QuadPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="QuadPoint"
 type="com.pdftron.pdf.QuadPoint"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="p1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p2" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p3" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p4" type="com.pdftron.pdf.Point">
</parameter>
</constructor>
<field name="p1"
 type="com.pdftron.pdf.Point"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="p2"
 type="com.pdftron.pdf.Point"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="p3"
 type="com.pdftron.pdf.Point"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="p4"
 type="com.pdftron.pdf.Point"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Rect"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Rect"
 type="com.pdftron.pdf.Rect"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Rect"
 type="com.pdftron.pdf.Rect"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Rect"
 type="com.pdftron.pdf.Rect"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Rect"
 type="com.pdftron.pdf.Rect"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="java.awt.geom.Rectangle2D.Double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="attach"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="contains"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="get"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRectangle"
 return="java.awt.geom.Rectangle2D.Double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getX1"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getX2"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getY1"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getY2"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="inflate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="amount" type="double">
</parameter>
</method>
<method name="inflate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
</method>
<method name="intersectRect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect1" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="rect2" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="normalize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r" type="java.awt.geom.Rectangle2D.Double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setX1"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setX2"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setY1"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="y1" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setY2"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="update"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="RectCollection"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RectCollection"
 type="com.pdftron.pdf.RectCollection"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rectToAdd" type="com.pdftron.pdf.Rect">
</parameter>
</method>
<method name="addRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="clear"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNumRects"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRectAt"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
</method>
</class>
<class name="Redactor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Redactor"
 type="com.pdftron.pdf.Redactor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="redact"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="red_arr" type="com.pdftron.pdf.Redactor.Redaction[]">
</parameter>
<parameter name="app" type="com.pdftron.pdf.Redactor.Appearance">
</parameter>
<parameter name="ext_neg_mode" type="boolean">
</parameter>
<parameter name="page_coord_sys" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Redactor.Appearance"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Appearance"
 type="com.pdftron.pdf.Redactor.Appearance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<field name="border"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="font"
 type="com.pdftron.pdf.Font"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="horizTextAlignment"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="maxFontSize"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="minFontSize"
 type="double"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="negativeOverlayColor"
 type="com.pdftron.pdf.ColorPt"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="positiveOverlayColor"
 type="com.pdftron.pdf.ColorPt"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="redactedContentColor"
 type="com.pdftron.pdf.ColorPt"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="redactionOverlay"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="showRedactedContentRegions"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="textColor"
 type="com.pdftron.pdf.ColorPt"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="useOverlayText"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="vertTextAlignment"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Redactor.Redaction"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Redaction"
 type="com.pdftron.pdf.Redactor.Redaction"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="bbox" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="negative" type="boolean">
</parameter>
<parameter name="text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Reflow"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Reflow"
 type="com.pdftron.pdf.Reflow"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAnnot"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_id" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHtml"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAnnot"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_json" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCustomStyles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="styles" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDoNotReflowTextOverImages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="do_not_reflow_text_over_images" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFontOverrideName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font_family" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHTMLOutputTextMarkup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="include" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHideBackgroundImages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hide_background_images" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHideImagesUnderInvisibleText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hide_images_under_invisible_text" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHideImagesUnderText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hide_images_under_text" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIncludeBBoxForRecognizedZones"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="include" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIncludeImages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="include" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMessageWhenNoReflowContent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="content" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMessageWhenReflowFailed"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="content" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="RefreshOptions"
 extends="com.pdftron.pdf.OptionsBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RefreshOptions"
 type="com.pdftron.pdf.RefreshOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="RefreshOptions"
 type="com.pdftron.pdf.RefreshOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getDrawBackgroundOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRefreshExisting"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUseNonStandardRotation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUseRoundedCorners"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDrawBackgroundOnly"
 return="com.pdftron.pdf.RefreshOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRefreshExisting"
 return="com.pdftron.pdf.RefreshOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUseNonStandardRotation"
 return="com.pdftron.pdf.RefreshOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUseRoundedCorners"
 return="com.pdftron.pdf.RefreshOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<interface name="RequestRenderInWorkerThreadProc"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="onRequestRenderInWorkerThreadProc"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="Separation"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Separation"
 type="com.pdftron.pdf.Separation"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="m_separation_name" type="java.lang.String">
</parameter>
<parameter name="m_data" type="byte[]">
</parameter>
<parameter name="c" type="byte">
</parameter>
<parameter name="m" type="byte">
</parameter>
<parameter name="y" type="byte">
</parameter>
<parameter name="k" type="byte">
</parameter>
</constructor>
<method name="C"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="K"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="M"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Y"
 return="byte"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getData"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDataSize"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSeparationName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Shading"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Shading"
 type="com.pdftron.pdf.Shading"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="shading_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getAntialias"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackground"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBaseColorSpace"
 return="com.pdftron.pdf.ColorSpace"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="t" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="t1" type="double">
</parameter>
<parameter name="t2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCoords"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCoordsRadial"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDomain"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMatrix"
 return="com.pdftron.common.Matrix2D"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParamEnd"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParamStart"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="shading_dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasBBox"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasBackground"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isExtendEnd"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isExtendStart"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_axial_shading"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_coons_shading"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_free_gouraud_shading"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_function_shading"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_lattice_gouraud_shading"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_radial_shading"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_tensor_shading"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ShapedText"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ShapedText"
 type="com.pdftron.pdf.ShapedText"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFailureReason"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGlyph"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGlyphXPos"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGlyphYPos"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumGlyphs"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScale"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getShapingStatus"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ShapedText.FailureReason"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FailureReason"
 type="com.pdftron.pdf.ShapedText.FailureReason"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="e_font_data_not_found"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_failure"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_not_index_encoded"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_unsupported_font_type"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ShapedText.ShapingStatus"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ShapingStatus"
 type="com.pdftron.pdf.ShapedText.ShapingStatus"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="e_full_shaping"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_shaping"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_partial_shaping"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Stamper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Stamper"
 type="com.pdftron.pdf.Stamper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size_type" type="int">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
</constructor>
<method name="deleteStamps"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="page_set" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasStamps"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="page_set" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<method name="setAlignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="horizontal_alignment" type="int">
</parameter>
<parameter name="vertical_alignment" type="int">
</parameter>
</method>
<method name="setAsAnnotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotation" type="boolean">
</parameter>
</method>
<method name="setAsBackground"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="background" type="boolean">
</parameter>
</method>
<method name="setFont"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font" type="com.pdftron.pdf.Font">
</parameter>
</method>
<method name="setFontColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="com.pdftron.pdf.ColorPt">
</parameter>
</method>
<method name="setOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opacity" type="double">
</parameter>
</method>
<method name="setPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="horizontal_distance" type="double">
</parameter>
<parameter name="vertical_distance" type="double">
</parameter>
</method>
<method name="setPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="horizontal_distance" type="double">
</parameter>
<parameter name="vertical_distance" type="double">
</parameter>
<parameter name="percentage" type="boolean">
</parameter>
</method>
<method name="setRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rotation" type="double">
</parameter>
</method>
<method name="setSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size_type" type="int">
</parameter>
<parameter name="a" type="double">
</parameter>
<parameter name="b" type="double">
</parameter>
</method>
<method name="setTextAlignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text_alignment" type="int">
</parameter>
</method>
<method name="showsOnPrint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="on_print" type="boolean">
</parameter>
</method>
<method name="showsOnScreen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="on_screen" type="boolean">
</parameter>
</method>
<method name="stampImage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="src_img" type="com.pdftron.pdf.Image">
</parameter>
<parameter name="dest_pages" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<method name="stampPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="src_page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="dest_pages" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<method name="stampText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dest_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="src_txt" type="java.lang.String">
</parameter>
<parameter name="dest_pages" type="com.pdftron.pdf.PageSet">
</parameter>
</method>
<field name="e_absolute_size"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_align_center"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_align_left"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_align_right"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_font_size"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_horizontal_center"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_horizontal_left"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_horizontal_right"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_relative_scale"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_vertical_bottom"
 type="int"
 transient="false"
 volatile="false"
 value="-1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_vertical_center"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_vertical_top"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="StrokeOutlineBuilder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="StrokeOutlineBuilder"
 type="com.pdftron.pdf.StrokeOutlineBuilder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="strokeWidth" type="double">
</parameter>
</constructor>
<method name="addPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="pressure" type="double">
</parameter>
</method>
<method name="getLastSegmentOutline"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="numPoints" type="int">
</parameter>
<parameter name="options" type="com.pdftron.pdf.StrokeOutlineBuilder.TipOptions">
</parameter>
</method>
<method name="getOutline"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="StrokeOutlineBuilder.TipOptions"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.StrokeOutlineBuilder.TipOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.StrokeOutlineBuilder.TipOptions[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="StructuredOutputModule"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="isModuleAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Text2PDFOptions"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Text2PDFOptions"
 type="com.pdftron.pdf.Text2PDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getBytesPerBite"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFontFace"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineHeightMultiplier"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMarginBottom"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMarginLeft"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMarginRight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMarginTop"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageHeight"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPageWidth"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUseSourceCodeFormatting"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBytesPerBite"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFontFace"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFontSize"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineHeightMultiplier"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMarginBottom"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMarginLeft"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMarginRight"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMarginTop"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageHeight"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPageWidth"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUseSourceCodeFormatting"
 return="com.pdftron.pdf.Text2PDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="TextDiffOptions"
 extends="com.pdftron.pdf.OptionsBase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextDiffOptions"
 type="com.pdftron.pdf.TextDiffOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="TextDiffOptions"
 type="com.pdftron.pdf.TextDiffOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="addIgnoreZonesForPage"
 return="com.pdftron.pdf.TextDiffOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="regions" type="com.pdftron.pdf.RectCollection">
</parameter>
<parameter name="page_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorA"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getColorB"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpacityA"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpacityB"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorA"
 return="com.pdftron.pdf.TextDiffOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setColorB"
 return="com.pdftron.pdf.TextDiffOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="com.pdftron.pdf.ColorPt">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpacityA"
 return="com.pdftron.pdf.TextDiffOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opacity" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpacityB"
 return="com.pdftron.pdf.TextDiffOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opacity" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="TextExtractor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextExtractor"
 type="com.pdftron.pdf.TextExtractor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="clip_ptr" type="com.pdftron.pdf.Rect">
</parameter>
</method>
<method name="begin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<parameter name="clip_ptr" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="flags" type="int">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAsText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAsText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dehyphen" type="boolean">
</parameter>
</method>
<method name="getAsXML"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAsXML"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="xml_output_flags" type="int">
</parameter>
</method>
<method name="getFirstLine"
 return="com.pdftron.pdf.TextExtractor.Line"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHighlights"
 return="com.pdftron.pdf.Highlights"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_ranges" type="com.pdftron.pdf.TextExtractor.CharRange[]">
</parameter>
</method>
<method name="getNumLines"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRightToLeftLanguage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextUnderAnnot"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
</method>
<method name="getWordCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
</method>
<method name="setRightToLeftLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="right_2_left" type="boolean">
</parameter>
</method>
<field name="e_extract_using_zorder"
 type="int"
 transient="false"
 volatile="false"
 value="256"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_dup_remove"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_invisible_text"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_ligature_exp"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_no_watermarks"
 type="int"
 transient="false"
 volatile="false"
 value="128"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_output_bbox"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_output_style_info"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_punct_break"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_remove_hidden_text"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_words_as_elements"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="TextExtractor.CharRange"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CharRange"
 type="com.pdftron.pdf.TextExtractor.CharRange"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<parameter name="length" type="int">
</parameter>
</constructor>
<field name="index"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="length"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="TextExtractor.Compat"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Compat"
 type="com.pdftron.pdf.TextExtractor.Compat"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="GetRightToLeftLanguage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="SetRightToLeftLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="r2l" type="boolean">
</parameter>
</method>
</class>
<class name="TextExtractor.Line"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="endsWithHyphen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFirstWord"
 return="com.pdftron.pdf.TextExtractor.Word"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFlowID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNextLine"
 return="com.pdftron.pdf.TextExtractor.Line"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNumWords"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParagraphID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getQuad"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStyle"
 return="com.pdftron.pdf.TextExtractor.Style"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getWord"
 return="com.pdftron.pdf.TextExtractor.Word"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="word_idx" type="int">
</parameter>
</method>
<method name="isSimpleLine"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TextExtractor.Style"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getColor"
 return="java.awt.Color"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFont"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFontName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getWeight"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isItalic"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isSerif"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TextExtractor.Word"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBBox"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCharStyle"
 return="com.pdftron.pdf.TextExtractor.Style"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="char_idx" type="int">
</parameter>
</method>
<method name="getCurrentNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGlyphQuad"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="glyph_idx" type="int">
</parameter>
</method>
<method name="getNextWord"
 return="com.pdftron.pdf.TextExtractor.Word"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNumGlyphs"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getQuad"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStringLen"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStyle"
 return="com.pdftron.pdf.TextExtractor.Style"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TextRange"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextRange"
 type="com.pdftron.pdf.TextRange"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getQuads"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTextAfter"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="count" type="int">
</parameter>
</method>
<method name="getTextBefore"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="count" type="int">
</parameter>
</method>
</class>
<class name="TextSearch"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextSearch"
 type="com.pdftron.pdf.TextSearch"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="begin"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="pattern" type="java.lang.String">
</parameter>
<parameter name="mode" type="int">
</parameter>
<parameter name="start_page" type="int">
</parameter>
<parameter name="end_page" type="int">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCurrentPage"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="run"
 return="com.pdftron.pdf.TextSearchResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
</method>
<method name="setOCGContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="com.pdftron.pdf.ocg.Context">
</parameter>
</method>
<method name="setPattern"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="java.lang.String">
</parameter>
</method>
<method name="setRightToLeftLanguage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="flag" type="boolean">
</parameter>
</method>
<field name="e_ambient_string"
 type="int"
 transient="false"
 volatile="false"
 value="64"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_case_sensitive"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_highlight"
 type="int"
 transient="false"
 volatile="false"
 value="32"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_page_stop"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_raw_text_search"
 type="int"
 transient="false"
 volatile="false"
 value="128"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_reg_expression"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_search_up"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_search_using_zorder"
 type="int"
 transient="false"
 volatile="false"
 value="256"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_whole_word"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="TextSearchResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextSearchResult"
 type="com.pdftron.pdf.TextSearchResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cd" type="int">
</parameter>
<parameter name="pn" type="int">
</parameter>
<parameter name="rs" type="java.lang.String">
</parameter>
<parameter name="as" type="java.lang.String">
</parameter>
<parameter name="hlts_impl" type="long">
</parameter>
</constructor>
<method name="getAmbientStr"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHighlights"
 return="com.pdftron.pdf.Highlights"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPageNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResultStr"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="e_done"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_found"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_page"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<interface name="ThumbAsyncHandler"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="thumbAsyncHandlerProc"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page_num" type="int">
</parameter>
<parameter name="was_thumb_found" type="boolean">
</parameter>
<parameter name="thumb_buf" type="java.lang.Object">
</parameter>
<parameter name="thumb_width" type="int">
</parameter>
<parameter name="thumb_height" type="int">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="TimestampingConfiguration"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TimestampingConfiguration"
 type="com.pdftron.pdf.TimestampingConfiguration"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<constructor name="TimestampingConfiguration"
 type="com.pdftron.pdf.TimestampingConfiguration"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimestampAuthorityServerPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimestampAuthorityServerURL"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTimestampAuthorityServerUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_username" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUseNonce"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_use_nonce" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="testConfiguration"
 return="com.pdftron.pdf.TimestampingResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_opts" type="com.pdftron.pdf.VerificationOptions">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="TimestampingResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TimestampingResult"
 type="com.pdftron.pdf.TimestampingResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getData"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getResponseVerificationResult"
 return="com.pdftron.pdf.EmbeddedTimestampVerificationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStatus"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasResponseVerificationResult"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="TrustVerificationResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TrustVerificationResult"
 type="com.pdftron.pdf.TrustVerificationResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCertPath"
 return="com.pdftron.crypto.X509Certificate[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEmbeddedTimestampVerificationResult"
 return="com.pdftron.pdf.EmbeddedTimestampVerificationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getResultString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTimeOfTrustVerification"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTimeOfTrustVerificationEnum"
 return="com.pdftron.pdf.VerificationOptions.TimeMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasEmbeddedTimestampVerificationResult"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="wasSuccessful"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="VerificationOptions"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="VerificationOptions"
 type="com.pdftron.pdf.VerificationOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<constructor name="VerificationOptions"
 type="com.pdftron.pdf.VerificationOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_level" type="com.pdftron.pdf.VerificationOptions.SecurityLevel">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="addTrustedCertificate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_certificate_data" type="byte[]">
</parameter>
<parameter name="in_trust_flags" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addTrustedCertificate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_certificate_data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addTrustedCertificate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filepath" type="java.lang.String">
</parameter>
<parameter name="in_trust_flags" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addTrustedCertificate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addTrustedCertificates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_P7C_binary_DER_certificates_file_data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableDigestVerification"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_on_or_off" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableModificationVerification"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_on_or_off" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableOnlineCRLRevocationChecking"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_on_or_off" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableOnlineOCSPRevocationChecking"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_on_or_off" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableOnlineRevocationChecking"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_on_or_off" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableTrustVerification"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_on_or_off" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="loadTrustList"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_fdf_cert_exchange_data" type="com.pdftron.fdf.FDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="VerificationOptions.CertificateTrustFlag"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.VerificationOptions.CertificateTrustFlag"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.VerificationOptions.CertificateTrustFlag[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="value"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="VerificationOptions.SecurityLevel"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.VerificationOptions.SecurityLevel"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.VerificationOptions.SecurityLevel[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="VerificationOptions.TimeMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.VerificationOptions.TimeMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.VerificationOptions.TimeMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="VerificationResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="VerificationResult"
 type="com.pdftron.pdf.VerificationResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDigestAlgorithm"
 return="com.pdftron.crypto.DigestAlgorithm"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDigestStatus"
 return="com.pdftron.pdf.VerificationResult.DigestStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDigestStatusAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDigitalSignatureField"
 return="com.pdftron.pdf.DigitalSignatureField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDisallowedChanges"
 return="com.pdftron.pdf.DisallowedChange[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDocumentStatus"
 return="com.pdftron.pdf.VerificationResult.DocumentStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDocumentStatusAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPermissionsStatus"
 return="com.pdftron.pdf.VerificationResult.ModificationPermissionsStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPermissionsStatusAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTrustStatus"
 return="com.pdftron.pdf.VerificationResult.TrustStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTrustStatusAsString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTrustVerificationResult"
 return="com.pdftron.pdf.TrustVerificationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUnsupportedFeatures"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVerificationStatus"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasTrustVerificationResult"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="VerificationResult.DigestStatus"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.VerificationResult.DigestStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.VerificationResult.DigestStatus[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="VerificationResult.DocumentStatus"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.VerificationResult.DocumentStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.VerificationResult.DocumentStatus[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="VerificationResult.ModificationPermissionsStatus"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.VerificationResult.ModificationPermissionsStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.VerificationResult.ModificationPermissionsStatus[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="VerificationResult.TrustStatus"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.pdftron.pdf.VerificationResult.TrustStatus"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.VerificationResult.TrustStatus[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ViewChangeCollection"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ViewChangeCollection"
 type="com.pdftron.pdf.ViewChangeCollection"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ViewChangeCollection"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ViewerOptimizedOptions"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ViewerOptimizedOptions"
 type="com.pdftron.pdf.ViewerOptimizedOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="setMinimumInitialThumbnails"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="initial_thumbs" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverprint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThumbnailRenderingThreshold"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threshold" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setThumbnailSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_op_off"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_on"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_op_pdfx_on"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="WebFontDownloader"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="clearCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="disableDownloads"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableDownloads"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isAvailable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="preCacheAsync"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCustomWebFontURL"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="url" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="WordToPDFOptions"
 extends="com.pdftron.pdf.ConversionOptions"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="WordToPDFOptions"
 type="com.pdftron.pdf.WordToPDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="WordToPDFOptions"
 type="com.pdftron.pdf.WordToPDFOptions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="json_string" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getLayoutResourcesPluginPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getResourceDocPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSmartSubstitutionPluginPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLayoutResourcesPluginPath"
 return="com.pdftron.pdf.WordToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setResourceDocPath"
 return="com.pdftron.pdf.WordToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmartSubstitutionPluginPath"
 return="com.pdftron.pdf.WordToPDFOptions"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<interface name="__Delete"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</interface>
</package>
<package name="com.pdftron.pdf.annots"
>
<class name="AnnotsCompat"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="AnnotsCompat.Caret"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSymbol"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSymbol"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="contt" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Circle"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.FileAttachment"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="icon_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="save_as" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFileSpec"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFileSpec"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="file" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIconName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="icon" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.FreeText"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCalloutLinePoint1x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCalloutLinePoint1y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCalloutLinePoint2x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCalloutLinePoint2y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCalloutLinePoint3x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCalloutLinePoint3y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDefaultAppearance"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetEndingStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIntentName"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLineColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLineColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuaddingFormat"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCalloutLinePoints"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="p1x" type="double">
</parameter>
<parameter name="p1y" type="double">
</parameter>
<parameter name="p2x" type="double">
</parameter>
<parameter name="p2y" type="double">
</parameter>
<parameter name="p3x" type="double">
</parameter>
<parameter name="p3y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCalloutLinePoints"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="p1x" type="double">
</parameter>
<parameter name="p1y" type="double">
</parameter>
<parameter name="p2x" type="double">
</parameter>
<parameter name="p2y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetDefaultAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="app_str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetEndingStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="est" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetEndingStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="est" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFontSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="font_size" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIntentName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="color_impl" type="long">
</parameter>
<parameter name="col_comp" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetQuaddingFormat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="app_qform" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="color_impl" type="long">
</parameter>
<parameter name="col_comp" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Highlight"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Ink"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Erase"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pt1x" type="double">
</parameter>
<parameter name="pt1y" type="double">
</parameter>
<parameter name="pt2x" type="double">
</parameter>
<parameter name="pt2y" type="double">
</parameter>
<parameter name="eraserHalfWidth" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPathCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pathindex" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPointx"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pathindex" type="int">
</parameter>
<parameter name="pointindex" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPointy"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pathindex" type="int">
</parameter>
<parameter name="pointindex" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSmoothing"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pathindex" type="int">
</parameter>
<parameter name="pointindex" type="int">
</parameter>
<parameter name="ptx" type="double">
</parameter>
<parameter name="pty" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="useSmoothing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Line"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCaptionPosition"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetEndPointx"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetEndPointy"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetEndStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIntentType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLeaderLineExtensionLength"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLeaderLineLength"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLeaderLineOffset"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetShowCaption"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStartPointx"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStartPointy"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStartStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextHOffset"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTextVOffset"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCapPos"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetEndPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="epx" type="double">
</parameter>
<parameter name="epy" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetEndStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="est" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIntentType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLeaderLineExtensionLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ll" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLeaderLineLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ll" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLeaderLineOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ll" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetShowCaption"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="showCaption" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStartPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="spx" type="double">
</parameter>
<parameter name="spy" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStartStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="sst" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextHOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="offset" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTextVOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="offset" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Link"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<parameter name="action" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAction"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHighlightingMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp1x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp1y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp2x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp2y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp3x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp3y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp4x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp4y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RemoveAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="action" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHighlightingMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetQuadPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<parameter name="p1x" type="double">
</parameter>
<parameter name="p1y" type="double">
</parameter>
<parameter name="p2x" type="double">
</parameter>
<parameter name="p2y" type="double">
</parameter>
<parameter name="p3x" type="double">
</parameter>
<parameter name="p3y" type="double">
</parameter>
<parameter name="p4x" type="double">
</parameter>
<parameter name="p4y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Markup"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetBorderEffect"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBorderEffectIntensity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetContentRect"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCreationDates"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetInteriorColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetInteriorColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOpacity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPadding"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPopup"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSubject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBorderEffect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="effect" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBorderEffectIntensity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="intensity" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetContentRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="cr" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCreationDates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="date" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetInteriorColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="cpt" type="long">
</parameter>
<parameter name="comp_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="opacity" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rd" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPopup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="popup" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSubject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Movie"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsToBePlayed"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetToBePlayed"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="isplay" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.PolyLine"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIntentName"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVertexCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVertexx"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVertexy"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIntentName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetVertex"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Polygon"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="AnnotsCompat.Popup"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetParent"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsOpen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOpen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="is_open" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetParent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="parent" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Redaction"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAppFormXO"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOverlayText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOverlayTextAppearance"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadForm"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp1x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp1y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp2x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp2y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp3x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp3y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp4x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp4y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUseRepeat"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAppFormXO"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="formxo" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOverlayText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOverlayTextAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="app" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetQuadForm"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="form" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetQuadPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<parameter name="p1x" type="double">
</parameter>
<parameter name="p1y" type="double">
</parameter>
<parameter name="p2x" type="double">
</parameter>
<parameter name="p2y" type="double">
</parameter>
<parameter name="p3x" type="double">
</parameter>
<parameter name="p3y" type="double">
</parameter>
<parameter name="p4x" type="double">
</parameter>
<parameter name="p4y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetUseRepeat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="repeat" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.RubberStamp"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="icon" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Screen"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAction"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBackgroundColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBackgroundColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBorderColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBorderColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFitFull"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIconCaptionRelation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMouseDownCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMouseDownIcon"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRolloverCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRolloverIcon"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetScaleCondition"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetScaleType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStaticCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStaticIcon"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="action" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="c" type="long">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBorderColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="c" type="long">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFitFull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ff" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="hl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIconCaptionRelation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="icr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMouseDownCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMouseDownIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ic" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRolloverCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRolloverIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ic" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rot" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetScaleCondition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="sd" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetScaleType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="st" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStaticCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStaticIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ic" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetVIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="vl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Sound"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSoundStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSoundStream"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Square"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Squiggly"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.StrikeOut"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Text"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="x" type="double">
</parameter>
<parameter name="y" type="double">
</parameter>
<parameter name="content" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetState"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStateModel"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsOpen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="icon" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="icon" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOpen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="isopen" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStateModel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="statemodule" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.TextMarkup"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetQuadPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp1x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp1y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp2x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp2y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp3x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp3y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp4x"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetQuadPointp4y"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetQuadPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<parameter name="p1x" type="double">
</parameter>
<parameter name="p1y" type="double">
</parameter>
<parameter name="p2x" type="double">
</parameter>
<parameter name="p2y" type="double">
</parameter>
<parameter name="p3x" type="double">
</parameter>
<parameter name="p3y" type="double">
</parameter>
<parameter name="p4x" type="double">
</parameter>
<parameter name="p4y" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Underline"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Watermark"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="AnnotsCompat.Widget"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<parameter name="field" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAction"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBackgroundColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBackgroundColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBorderColor"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBorderColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetField"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFitFull"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHighlightingMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIconCaptionRelation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMouseDownCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMouseDownIcon"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRolloverCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRolloverIcon"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRotation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetScaleCondition"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetScaleType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStaticCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStaticIcon"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="action" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="c" type="long">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBorderColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="c" type="long">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetFitFull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ff" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="hl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetHighlightingMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIconCaptionRelation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="icr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMouseDownCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMouseDownIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ic" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRolloverCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRolloverIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ic" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetRotation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rot" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetScaleCondition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="sd" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetScaleType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="st" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStaticCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStaticIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ic" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetVIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="vl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Caret"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Caret"
 type="com.pdftron.pdf.annots.Caret"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Caret"
 type="com.pdftron.pdf.annots.Caret"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Caret"
 type="com.pdftron.pdf.annots.Caret"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Caret"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSymbol"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSymbol"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="contt" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="CheckBoxWidget"
 extends="com.pdftron.pdf.annots.Widget"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CheckBoxWidget"
 type="com.pdftron.pdf.annots.CheckBoxWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="CheckBoxWidget"
 type="com.pdftron.pdf.annots.CheckBoxWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="CheckBoxWidget"
 type="com.pdftron.pdf.annots.CheckBoxWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.CheckBoxWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.CheckBoxWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.CheckBoxWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isChecked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setChecked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Circle"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Circle"
 type="com.pdftron.pdf.annots.Circle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Circle"
 type="com.pdftron.pdf.annots.Circle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Circle"
 type="com.pdftron.pdf.annots.Circle"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Circle"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ComboBoxWidget"
 extends="com.pdftron.pdf.annots.Widget"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ComboBoxWidget"
 type="com.pdftron.pdf.annots.ComboBoxWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="ComboBoxWidget"
 type="com.pdftron.pdf.annots.ComboBoxWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ComboBoxWidget"
 type="com.pdftron.pdf.annots.ComboBoxWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="addOption"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addOptions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opts" type="java.lang.String[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.ComboBoxWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.ComboBoxWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.ComboBoxWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOptions"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSelectedOption"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeOption"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="replaceOptions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="new_opts" type="java.lang.String[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSelectedOption"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="FileAttachment"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FileAttachment"
 type="com.pdftron.pdf.annots.FileAttachment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="FileAttachment"
 type="com.pdftron.pdf.annots.FileAttachment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="FileAttachment"
 type="com.pdftron.pdf.annots.FileAttachment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="SetFileSpec"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file" type="com.pdftron.pdf.FileSpec">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIconName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.FileAttachment"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="icon_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.FileAttachment"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="save_as" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="export"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFileSpec"
 return="com.pdftron.pdf.FileSpec"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Graph"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Paperclip"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PushPin"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Tag"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="FreeText"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="FreeText"
 type="com.pdftron.pdf.annots.FreeText"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="FreeText"
 type="com.pdftron.pdf.annots.FreeText"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="FreeText"
 type="com.pdftron.pdf.annots.FreeText"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.FreeText"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCalloutLinePoint1"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCalloutLinePoint2"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCalloutLinePoint3"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDefaultAppearance"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEndingStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntentName"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLineColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuaddingFormat"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCalloutLinePoints"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="p1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p2" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p3" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCalloutLinePoints"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="p1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="p2" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setDefaultAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEndingStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="est" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEndingStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="est" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFontSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font_size" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntentName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLineColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="col_comp" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuaddingFormat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app_qform" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="col_comp" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_FreeText"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FreeTextCallout"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_FreeTextTypeWriter"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Highlight"
 extends="com.pdftron.pdf.annots.TextMarkup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Highlight"
 type="com.pdftron.pdf.annots.Highlight"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Highlight"
 type="com.pdftron.pdf.annots.Highlight"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Highlight"
 type="com.pdftron.pdf.annots.Highlight"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Highlight"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Ink"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Ink"
 type="com.pdftron.pdf.annots.Ink"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Ink"
 type="com.pdftron.pdf.annots.Ink"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Ink"
 type="com.pdftron.pdf.annots.Ink"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="GetPoint"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pathindex" type="int">
</parameter>
<parameter name="pointindex" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Ink"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pt1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="pt2" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="eraserHalfWidth" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erasePaths"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pt1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="pt2" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="eraserHalfWidth" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erasePoints"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sdfObj" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="rect" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="pt1" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="pt2" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="eraserHalfWidth" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBezierControlPoints"
 return="double[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="polyline" type="double[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBlendMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHighlightIntent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPathCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pathindex" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSmoothing"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBlendMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="blendMode" type="com.pdftron.pdf.annots.Ink.BlendMode">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHighlightIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="highlight" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pathindex" type="int">
</parameter>
<parameter name="pointindex" type="int">
</parameter>
<parameter name="pt" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSmoothing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="smoothing" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Ink.BlendMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.pdf.annots.Ink.BlendMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.pdf.annots.Ink.BlendMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Line"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Line"
 type="com.pdftron.pdf.annots.Line"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Line"
 type="com.pdftron.pdf.annots.Line"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Line"
 type="com.pdftron.pdf.annots.Line"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Line"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCaptionPosition"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEndPoint"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getEndStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntentType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLeaderLineExtensionLength"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLeaderLineLength"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLeaderLineOffset"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getShowCaption"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStartPoint"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStartStyle"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextHOffset"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextVOffset"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCaptionPosition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEndPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ep" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setEndStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="est" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntentType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="style" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLeaderLineExtensionLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ll" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLeaderLineLength"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ll" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLeaderLineOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ll" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setShowCaption"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="showCaption" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStartPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sp" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStartStyle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sst" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextHOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextVOffset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="offset" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Butt"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Circle"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ClosedArrow"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Diamond"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Inline"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LineArrow"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LineDimension"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_None"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OpenArrow"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RClosedArrow"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ROpenArrow"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Slash"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Square"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Top"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Link"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Link"
 type="com.pdftron.pdf.annots.Link"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Link"
 type="com.pdftron.pdf.annots.Link"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Link"
 type="com.pdftron.pdf.annots.Link"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</constructor>
<constructor name="Link"
 type="com.pdftron.pdf.annots.Link"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Link"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Link"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHighlightingMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPoint"
 return="com.pdftron.pdf.QuadPoint"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHighlightingMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuadPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<parameter name="qp" type="com.pdftron.pdf.QuadPoint">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_invert"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_outline"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_push"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ListBoxWidget"
 extends="com.pdftron.pdf.annots.Widget"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ListBoxWidget"
 type="com.pdftron.pdf.annots.ListBoxWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="ListBoxWidget"
 type="com.pdftron.pdf.annots.ListBoxWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ListBoxWidget"
 type="com.pdftron.pdf.annots.ListBoxWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="addOption"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addOptions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opts" type="java.lang.String[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.ListBoxWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.ListBoxWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.ListBoxWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOptions"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSelectedOptions"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeOption"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="replaceOptions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="new_opts" type="java.lang.String[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSelectedOptions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="selected_opts" type="java.lang.String[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Markup"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Markup"
 type="com.pdftron.pdf.annots.Markup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Markup"
 type="com.pdftron.pdf.annots.Markup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Markup"
 type="com.pdftron.pdf.annots.Markup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getBorderEffect"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderEffectIntensity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContentRect"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreationDates"
 return="com.pdftron.pdf.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInteriorColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInteriorColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOpacity"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPadding"
 return="com.pdftron.pdf.Rect"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPopup"
 return="com.pdftron.pdf.annots.Popup"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSubject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rotateAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="angle" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderEffect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="effect" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderEffectIntensity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="intensity" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setContentRect"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cr" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreationDates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="com.pdftron.pdf.Date">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInteriorColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cpt" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="comp_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpacity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="opacity" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rd" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPadding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="padding" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setPopup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="popup" type="com.pdftron.pdf.annots.Popup">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSubject"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Cloudy"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_None"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Movie"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Movie"
 type="com.pdftron.pdf.annots.Movie"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Movie"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isToBePlayed"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setToBePlayed"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="isplay" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PolyLine"
 extends="com.pdftron.pdf.annots.Line"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PolyLine"
 type="com.pdftron.pdf.annots.PolyLine"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="PolyLine"
 type="com.pdftron.pdf.annots.PolyLine"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PolyLine"
 type="com.pdftron.pdf.annots.PolyLine"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.PolyLine"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntentName"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVertex"
 return="com.pdftron.pdf.Point"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVertexCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntentName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVertex"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<parameter name="pt" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_PolyLineDimension"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PolygonCloud"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PolygonDimension"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Polygon"
 extends="com.pdftron.pdf.annots.PolyLine"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Polygon"
 type="com.pdftron.pdf.annots.Polygon"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Polygon"
 type="com.pdftron.pdf.annots.Polygon"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Polygon"
 type="com.pdftron.pdf.annots.Polygon"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Polygon"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Popup"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Popup"
 type="com.pdftron.pdf.annots.Popup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Popup"
 type="com.pdftron.pdf.annots.Popup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Popup"
 type="com.pdftron.pdf.annots.Popup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Popup"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParent"
 return="com.pdftron.pdf.Annot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isOpen"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOpen"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_open" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setParent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="parent" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PushButtonWidget"
 extends="com.pdftron.pdf.annots.Widget"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PushButtonWidget"
 type="com.pdftron.pdf.annots.PushButtonWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="PushButtonWidget"
 type="com.pdftron.pdf.annots.PushButtonWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PushButtonWidget"
 type="com.pdftron.pdf.annots.PushButtonWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.PushButtonWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.PushButtonWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.PushButtonWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="RadioButtonGroup"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RadioButtonGroup"
 type="com.pdftron.pdf.annots.RadioButtonGroup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
</constructor>
<constructor name="RadioButtonGroup"
 type="com.pdftron.pdf.annots.RadioButtonGroup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="add"
 return="com.pdftron.pdf.annots.RadioButtonWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="onstate" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="add"
 return="com.pdftron.pdf.annots.RadioButtonWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="addGroupButtonsToPage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="page" type="com.pdftron.pdf.Page">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.RadioButtonGroup"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.RadioButtonGroup"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getButton"
 return="com.pdftron.pdf.annots.RadioButtonWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getField"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumButtons"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="RadioButtonWidget"
 extends="com.pdftron.pdf.annots.Widget"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RadioButtonWidget"
 type="com.pdftron.pdf.annots.RadioButtonWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="RadioButtonWidget"
 type="com.pdftron.pdf.annots.RadioButtonWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RadioButtonWidget"
 type="com.pdftron.pdf.annots.RadioButtonWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="enableButton"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGroup"
 return="com.pdftron.pdf.annots.RadioButtonGroup"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Redaction"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Redaction"
 type="com.pdftron.pdf.annots.Redaction"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Redaction"
 type="com.pdftron.pdf.annots.Redaction"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Redaction"
 type="com.pdftron.pdf.annots.Redaction"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Redaction"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAppFormXO"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOverlayText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOverlayTextAppearance"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadForm"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPoint"
 return="com.pdftron.pdf.QuadPoint"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getUseRepeat"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAppFormXO"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="formxo" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverlayText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOverlayTextAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuadForm"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="form" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuadPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<parameter name="qp" type="com.pdftron.pdf.QuadPoint">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setUseRepeat"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="repeat" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Centered"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_LeftJustified"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_None"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RightJustified"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="RubberStamp"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RubberStamp"
 type="com.pdftron.pdf.annots.RubberStamp"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="RubberStamp"
 type="com.pdftron.pdf.annots.RubberStamp"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RubberStamp"
 type="com.pdftron.pdf.annots.RubberStamp"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="SetIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.RubberStamp"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createCustom"
 return="com.pdftron.pdf.annots.RubberStamp"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="in_options" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Approved"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AsIs"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Confidential"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Departmental"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Draft"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Experimental"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Expired"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Final"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ForComment"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_ForPublicRelease"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NotApproved"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NotForPublicRelease"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Sold"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_TopSecret"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Screen"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Screen"
 type="com.pdftron.pdf.annots.Screen"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Screen"
 type="com.pdftron.pdf.annots.Screen"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Screen"
 type="com.pdftron.pdf.annots.Screen"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="SetScaleCondition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sd" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Screen"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackgroundColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackgroundColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFitFull"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconCaptionRelation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMouseDownCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMouseDownIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRolloverCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRolloverIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScaleCondition"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScaleType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStaticCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStaticIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFitFull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ff" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIconCaptionRelation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMouseDownCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMouseDownIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRolloverCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRolloverIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScaleType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="st" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStaticCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStaticIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTitle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="title" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Always"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Anamorphic"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CAboveI"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CBelowI"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CLeftIRight"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_COverlayI"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CRightILeft"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Never"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoCaption"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoIcon"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Proportional"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_WhenBigger"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_WhenSmaller"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="SignatureWidget"
 extends="com.pdftron.pdf.annots.Widget"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SignatureWidget"
 type="com.pdftron.pdf.annots.SignatureWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="SignatureWidget"
 type="com.pdftron.pdf.annots.SignatureWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="SignatureWidget"
 type="com.pdftron.pdf.annots.SignatureWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.SignatureWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.SignatureWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.SignatureWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.SignatureWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field" type="com.pdftron.pdf.DigitalSignatureField">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSignatureAppearance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="img" type="com.pdftron.pdf.Image">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDigitalSignatureField"
 return="com.pdftron.pdf.DigitalSignatureField"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Sound"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Sound"
 type="com.pdftron.pdf.annots.Sound"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Sound"
 type="com.pdftron.pdf.annots.Sound"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Sound"
 type="com.pdftron.pdf.annots.Sound"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Sound"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createWithData"
 return="com.pdftron.pdf.annots.Sound"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="source_data" type="com.pdftron.filters.Filter">
</parameter>
<parameter name="bits_per_sample" type="int">
</parameter>
<parameter name="sample_freq" type="int">
</parameter>
<parameter name="num_channels" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSoundStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSoundStream"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sound_stream" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Mic"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Speaker"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Square"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Square"
 type="com.pdftron.pdf.annots.Square"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Square"
 type="com.pdftron.pdf.annots.Square"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Square"
 type="com.pdftron.pdf.annots.Square"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Square"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Squiggly"
 extends="com.pdftron.pdf.annots.TextMarkup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Squiggly"
 type="com.pdftron.pdf.annots.Squiggly"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Squiggly"
 type="com.pdftron.pdf.annots.Squiggly"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Squiggly"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="StrikeOut"
 extends="com.pdftron.pdf.annots.TextMarkup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="StrikeOut"
 type="com.pdftron.pdf.annots.StrikeOut"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="StrikeOut"
 type="com.pdftron.pdf.annots.StrikeOut"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.StrikeOut"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Text"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Text"
 type="com.pdftron.pdf.annots.Text"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Text"
 type="com.pdftron.pdf.annots.Text"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Text"
 type="com.pdftron.pdf.annots.Text"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Text"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Point">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Text"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Point">
</parameter>
<parameter name="contents" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIcon"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getState"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStateModel"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icon" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStateModel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="statemodule" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Comment"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Help"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Insert"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Key"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NewParagraph"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Note"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Paragraph"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="TextMarkup"
 extends="com.pdftron.pdf.annots.Markup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextMarkup"
 type="com.pdftron.pdf.annots.TextMarkup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="TextMarkup"
 type="com.pdftron.pdf.annots.TextMarkup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="TextMarkup"
 type="com.pdftron.pdf.annots.TextMarkup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="getQuadPoint"
 return="com.pdftron.pdf.QuadPoint"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getQuadPointCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setQuadPoint"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<parameter name="qp" type="com.pdftron.pdf.QuadPoint">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="TextWidget"
 extends="com.pdftron.pdf.annots.Widget"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TextWidget"
 type="com.pdftron.pdf.annots.TextWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="TextWidget"
 type="com.pdftron.pdf.annots.TextWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="TextWidget"
 type="com.pdftron.pdf.annots.TextWidget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.TextWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field_name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.TextWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.TextWidget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="text" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Underline"
 extends="com.pdftron.pdf.annots.TextMarkup"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Underline"
 type="com.pdftron.pdf.annots.Underline"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Underline"
 type="com.pdftron.pdf.annots.Underline"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Underline"
 type="com.pdftron.pdf.annots.Underline"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Underline"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Watermark"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Watermark"
 type="com.pdftron.pdf.annots.Watermark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Watermark"
 type="com.pdftron.pdf.annots.Watermark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Watermark"
 type="com.pdftron.pdf.annots.Watermark"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="create"
 return="com.pdftron.pdf.annots.Watermark"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Widget"
 extends="com.pdftron.pdf.Annot"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Widget"
 type="com.pdftron.pdf.annots.Widget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="d" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<constructor name="Widget"
 type="com.pdftron.pdf.annots.Widget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Widget"
 type="com.pdftron.pdf.annots.Widget"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annot" type="com.pdftron.pdf.Annot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="SetScaleCondition"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sd" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="create"
 return="com.pdftron.pdf.annots.Widget"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="pos" type="com.pdftron.pdf.Rect">
</parameter>
<parameter name="field" type="com.pdftron.pdf.Field">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAction"
 return="com.pdftron.pdf.Action"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackgroundColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBackgroundColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBorderColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getField"
 return="com.pdftron.pdf.Field"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFitFull"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFont"
 return="com.pdftron.pdf.Font"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getFontSize"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHighlightingMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIconCaptionRelation"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMouseDownCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMouseDownIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRolloverCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRolloverIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScaleCondition"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getScaleType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStaticCaptionText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStaticIcon"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextColor"
 return="com.pdftron.pdf.ColorPt"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTextColorCompNum"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVIconLeftOver"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setAction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="action" type="com.pdftron.pdf.Action">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBackgroundColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBorderColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="c" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="CompNum" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFitFull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ff" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFont"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font" type="com.pdftron.pdf.Font">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setFontSize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="font_size" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setHighlightingMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIconCaptionRelation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="icr" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMouseDownCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMouseDownIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRolloverCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setRolloverIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setScaleType"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="st" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStaticCaptionText"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ct" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStaticIcon"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ic" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setTextColor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="color" type="com.pdftron.pdf.ColorPt">
</parameter>
<parameter name="col_comp" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVIconLeftOver"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vl" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Always"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Anamorphic"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CAboveI"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CBelowI"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CLeftIRight"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_COverlayI"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_CRightILeft"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Never"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoCaption"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoIcon"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Proportional"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_WhenBigger"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_WhenSmaller"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_invert"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_none"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_outline"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_push"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_toggle"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="com.pdftron.pdf.ocg"
>
<class name="Config"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Config"
 type="com.pdftron.pdf.ocg.Config"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ocg_config" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__Create"
 return="com.pdftron.pdf.ocg.Config"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="create"
 return="com.pdftron.pdf.ocg.Config"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="default_config" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCreator"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInitBaseState"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInitOffStates"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInitOnStates"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntent"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLockedOCGs"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOrder"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCreator"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitBaseState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="state" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitOffStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="off_array" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitOnStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="on_array" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="intent" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLockedOCGs"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locked_ocg_array" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOrder"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ocgs_array" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Context"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Context"
 type="com.pdftron.pdf.ocg.Context"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="Context"
 type="com.pdftron.pdf.ocg.Context"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ocg.Context"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOCMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getState"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="com.pdftron.pdf.ocg.Group">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="resetStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="all_on" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNonOCDrawing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="draw_non_OC" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setOCDrawMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="oc_draw_mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="com.pdftron.pdf.ocg.Group">
</parameter>
<parameter name="state" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_AllOC"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_NoOC"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_VisibleOC"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Group"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Group"
 type="com.pdftron.pdf.ocg.Group"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ocg" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ocg.Group"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="create"
 return="com.pdftron.pdf.ocg.Group"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getCurrentState"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="com.pdftron.pdf.ocg.Context">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getInitialState"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIntent"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasUsage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLocked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setCurrentState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="com.pdftron.pdf.ocg.Context">
</parameter>
<parameter name="state" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setInitialState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<parameter name="state" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="intent" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setLocked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="com.pdftron.pdf.ocg.Config">
</parameter>
<parameter name="locked" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OCGCompat"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="OCGCompat.Config"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="long">
</parameter>
<parameter name="default_config" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCreator"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetInitBaseState"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetInitOffStates"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetInitOnStates"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIntent"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLockedOCGs"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOrder"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCreator"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetInitBaseState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="st" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetInitOffStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="off_array" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetInitOnStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="on_array" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="intent" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLockedOCGs"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="locked_ocg_array" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOrder"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ocgs_array" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OCGCompat.Context"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="ContextCreateCfg"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cfg" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ContextCreateCtx"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNonOCDrawing"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOCMode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetState"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="group" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ResetStates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="all_on" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetNonOCDrawing"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="draw_non_OC" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetOCDrawMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="oc_draw_mode" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="group" type="long">
</parameter>
<parameter name="state" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OCGCompat.Group"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetCurrentState"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="context" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetInitialState"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="config" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIntent"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUsage"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasUsage"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsLocked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="config" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetCurrentState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="context" type="long">
</parameter>
<parameter name="state" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetInitialState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="config" type="long">
</parameter>
<parameter name="state" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetIntent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="intent" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetLocked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="config" type="long">
</parameter>
<parameter name="locked" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OCGCompat.OCMD"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="ocgs" type="long">
</parameter>
<parameter name="vis_policy" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOCGs"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVisibilityExpression"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetVisibilityPolicy"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsCurrentlyVisible"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="context" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetVisibilityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="vis_policy" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="OCMD"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OCMD"
 type="com.pdftron.pdf.ocg.OCMD"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ocmd" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.ocg.OCMD"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="create"
 return="com.pdftron.pdf.ocg.OCMD"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<parameter name="ocgs" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="vis_policy" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOCGs"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVisibilityExpression"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getVisibilityPolicy"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setVisibilityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="vis_policy" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_AllOff"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AllOn"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AnyOff"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AnyOn"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="com.pdftron.pdf.pdfa"
>
<class name="PDFACompat"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="PDFACompat.PDFACompliance"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetError"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetErrorCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPDFAErrorMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRefObj"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="id" type="int">
</parameter>
<parameter name="obj_idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRefObjCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="id" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFAComplianceCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="numexceptions" type="int">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<parameter name="first_stop" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFAComplianceCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="numexceptions" type="int">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFAComplianceCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="numexceptions" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFAComplianceCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="numbyte" type="int">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="numexceptions" type="int">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<parameter name="first_stop" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFAComplianceCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="numbyte" type="int">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="numexceptions" type="int">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PDFAComplianceCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="numbyte" type="int">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="numexceptions" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="linearized" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="linearized" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="PDFACompliance"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<parameter name="first_stop" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<parameter name="first_stop" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="conf" type="int">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<parameter name="max_ref_objs" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="PDFACompliance"
 type="com.pdftron.pdf.pdfa.PDFACompliance"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convert" type="boolean">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="exceptions" type="int[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDeclaredConformance"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="in_doc" type="com.pdftron.pdf.PDFDoc">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getError"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getErrorCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPDFAErrorMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRefObj"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="int">
</parameter>
<parameter name="obj_idx" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRefObjCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAs"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="file_path" type="java.lang.String">
</parameter>
<parameter name="linearized" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="saveAs"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="linearized" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_Level1A"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level1B"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level2A"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level2B"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level2U"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level3A"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level3B"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Level3U"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_0"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_1"
 type="int"
 transient="false"
 volatile="false"
 value="11"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_2"
 type="int"
 transient="false"
 volatile="false"
 value="12"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_3"
 type="int"
 transient="false"
 volatile="false"
 value="13"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_4"
 type="int"
 transient="false"
 volatile="false"
 value="14"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA0_1_5"
 type="int"
 transient="false"
 volatile="false"
 value="15"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA11_0_0"
 type="int"
 transient="false"
 volatile="false"
 value="11000"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_10_1"
 type="int"
 transient="false"
 volatile="false"
 value="1101"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_10_2"
 type="int"
 transient="false"
 volatile="false"
 value="1102"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_10_3"
 type="int"
 transient="false"
 volatile="false"
 value="1103"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_11_1"
 type="int"
 transient="false"
 volatile="false"
 value="1111"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_11_2"
 type="int"
 transient="false"
 volatile="false"
 value="1112"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_1"
 type="int"
 transient="false"
 volatile="false"
 value="1121"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_10"
 type="int"
 transient="false"
 volatile="false"
 value="11210"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_2"
 type="int"
 transient="false"
 volatile="false"
 value="1122"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_3"
 type="int"
 transient="false"
 volatile="false"
 value="1123"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_4"
 type="int"
 transient="false"
 volatile="false"
 value="1124"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_5"
 type="int"
 transient="false"
 volatile="false"
 value="1125"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_12_6"
 type="int"
 transient="false"
 volatile="false"
 value="1126"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_13_1"
 type="int"
 transient="false"
 volatile="false"
 value="1131"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_13_5"
 type="int"
 transient="false"
 volatile="false"
 value="1135"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="121"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="122"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="123"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="131"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="132"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="133"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_3_4"
 type="int"
 transient="false"
 volatile="false"
 value="134"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="141"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_4_2"
 type="int"
 transient="false"
 volatile="false"
 value="142"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_6_1"
 type="int"
 transient="false"
 volatile="false"
 value="161"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_7_1"
 type="int"
 transient="false"
 volatile="false"
 value="171"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_7_2"
 type="int"
 transient="false"
 volatile="false"
 value="172"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_7_3"
 type="int"
 transient="false"
 volatile="false"
 value="173"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_7_4"
 type="int"
 transient="false"
 volatile="false"
 value="174"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_1"
 type="int"
 transient="false"
 volatile="false"
 value="181"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_2"
 type="int"
 transient="false"
 volatile="false"
 value="182"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_3"
 type="int"
 transient="false"
 volatile="false"
 value="183"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_4"
 type="int"
 transient="false"
 volatile="false"
 value="184"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_5"
 type="int"
 transient="false"
 volatile="false"
 value="185"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_6"
 type="int"
 transient="false"
 volatile="false"
 value="186"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA1_8_7"
 type="int"
 transient="false"
 volatile="false"
 value="187"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_10_1"
 type="int"
 transient="false"
 volatile="false"
 value="2101"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_10_20"
 type="int"
 transient="false"
 volatile="false"
 value="21020"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_10_21"
 type="int"
 transient="false"
 volatile="false"
 value="21021"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="221"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_10"
 type="int"
 transient="false"
 volatile="false"
 value="2310"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="232"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="233"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="2331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="2332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_3_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="2341"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="241"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2"
 type="int"
 transient="false"
 volatile="false"
 value="242"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2_10"
 type="int"
 transient="false"
 volatile="false"
 value="24220"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2_11"
 type="int"
 transient="false"
 volatile="false"
 value="24221"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2_12"
 type="int"
 transient="false"
 volatile="false"
 value="24222"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_2_13"
 type="int"
 transient="false"
 volatile="false"
 value="24223"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_3"
 type="int"
 transient="false"
 volatile="false"
 value="243"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_4_4"
 type="int"
 transient="false"
 volatile="false"
 value="244"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_1"
 type="int"
 transient="false"
 volatile="false"
 value="251"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_10"
 type="int"
 transient="false"
 volatile="false"
 value="2510"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_11"
 type="int"
 transient="false"
 volatile="false"
 value="2511"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_12"
 type="int"
 transient="false"
 volatile="false"
 value="2512"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_5_2"
 type="int"
 transient="false"
 volatile="false"
 value="252"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_6_1"
 type="int"
 transient="false"
 volatile="false"
 value="261"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_7_1"
 type="int"
 transient="false"
 volatile="false"
 value="271"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_1"
 type="int"
 transient="false"
 volatile="false"
 value="281"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="2831"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="2832"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="2833"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_4"
 type="int"
 transient="false"
 volatile="false"
 value="2834"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_8_3_5"
 type="int"
 transient="false"
 volatile="false"
 value="2835"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA2_9_1"
 type="int"
 transient="false"
 volatile="false"
 value="291"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="321"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="3331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="3332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="341"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_1"
 type="int"
 transient="false"
 volatile="false"
 value="351"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_2"
 type="int"
 transient="false"
 volatile="false"
 value="352"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_3"
 type="int"
 transient="false"
 volatile="false"
 value="353"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_4"
 type="int"
 transient="false"
 volatile="false"
 value="354"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_5"
 type="int"
 transient="false"
 volatile="false"
 value="355"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_5_6"
 type="int"
 transient="false"
 volatile="false"
 value="356"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_6_1"
 type="int"
 transient="false"
 volatile="false"
 value="361"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_7_1"
 type="int"
 transient="false"
 volatile="false"
 value="371"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_7_2"
 type="int"
 transient="false"
 volatile="false"
 value="372"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_7_3"
 type="int"
 transient="false"
 volatile="false"
 value="373"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA3_8_1"
 type="int"
 transient="false"
 volatile="false"
 value="381"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_1"
 type="int"
 transient="false"
 volatile="false"
 value="41"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_2"
 type="int"
 transient="false"
 volatile="false"
 value="42"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_3"
 type="int"
 transient="false"
 volatile="false"
 value="43"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_4"
 type="int"
 transient="false"
 volatile="false"
 value="44"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_5"
 type="int"
 transient="false"
 volatile="false"
 value="45"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA4_6"
 type="int"
 transient="false"
 volatile="false"
 value="46"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="521"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_10"
 type="int"
 transient="false"
 volatile="false"
 value="5210"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_11"
 type="int"
 transient="false"
 volatile="false"
 value="5211"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="522"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="523"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_4"
 type="int"
 transient="false"
 volatile="false"
 value="524"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_5"
 type="int"
 transient="false"
 volatile="false"
 value="525"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_6"
 type="int"
 transient="false"
 volatile="false"
 value="526"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_7"
 type="int"
 transient="false"
 volatile="false"
 value="527"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_8"
 type="int"
 transient="false"
 volatile="false"
 value="528"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_2_9"
 type="int"
 transient="false"
 volatile="false"
 value="529"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="531"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="5321"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="5322"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="5323"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_4"
 type="int"
 transient="false"
 volatile="false"
 value="5324"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_2_5"
 type="int"
 transient="false"
 volatile="false"
 value="5325"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="5331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="5332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="5333"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_3_4"
 type="int"
 transient="false"
 volatile="false"
 value="5334"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="5341"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_4_2"
 type="int"
 transient="false"
 volatile="false"
 value="5342"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA5_3_4_3"
 type="int"
 transient="false"
 volatile="false"
 value="5343"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_10_0"
 type="int"
 transient="false"
 volatile="false"
 value="6100"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_10_1"
 type="int"
 transient="false"
 volatile="false"
 value="6101"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_1_1"
 type="int"
 transient="false"
 volatile="false"
 value="611"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_1_2"
 type="int"
 transient="false"
 volatile="false"
 value="612"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="621"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_11_5"
 type="int"
 transient="false"
 volatile="false"
 value="62115"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_11_6"
 type="int"
 transient="false"
 volatile="false"
 value="62116"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_11_7"
 type="int"
 transient="false"
 volatile="false"
 value="62117"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_11_8"
 type="int"
 transient="false"
 volatile="false"
 value="62118"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="622"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="623"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_9_1"
 type="int"
 transient="false"
 volatile="false"
 value="69001"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA6_9_3"
 type="int"
 transient="false"
 volatile="false"
 value="69003"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_1"
 type="int"
 transient="false"
 volatile="false"
 value="7111"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_2"
 type="int"
 transient="false"
 volatile="false"
 value="7112"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_3"
 type="int"
 transient="false"
 volatile="false"
 value="7113"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_4"
 type="int"
 transient="false"
 volatile="false"
 value="7114"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_11_5"
 type="int"
 transient="false"
 volatile="false"
 value="7115"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_1"
 type="int"
 transient="false"
 volatile="false"
 value="721"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="722"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_3"
 type="int"
 transient="false"
 volatile="false"
 value="723"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_4"
 type="int"
 transient="false"
 volatile="false"
 value="724"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_2_5"
 type="int"
 transient="false"
 volatile="false"
 value="725"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="731"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="732"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_3"
 type="int"
 transient="false"
 volatile="false"
 value="733"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_4"
 type="int"
 transient="false"
 volatile="false"
 value="734"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_5"
 type="int"
 transient="false"
 volatile="false"
 value="735"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_6"
 type="int"
 transient="false"
 volatile="false"
 value="736"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_7"
 type="int"
 transient="false"
 volatile="false"
 value="737"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_8"
 type="int"
 transient="false"
 volatile="false"
 value="738"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_3_9"
 type="int"
 transient="false"
 volatile="false"
 value="739"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_5_1"
 type="int"
 transient="false"
 volatile="false"
 value="751"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_1"
 type="int"
 transient="false"
 volatile="false"
 value="781"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_10"
 type="int"
 transient="false"
 volatile="false"
 value="7810"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_11"
 type="int"
 transient="false"
 volatile="false"
 value="7811"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_12"
 type="int"
 transient="false"
 volatile="false"
 value="7812"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_13"
 type="int"
 transient="false"
 volatile="false"
 value="7813"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_14"
 type="int"
 transient="false"
 volatile="false"
 value="7814"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_15"
 type="int"
 transient="false"
 volatile="false"
 value="7815"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_16"
 type="int"
 transient="false"
 volatile="false"
 value="7816"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_17"
 type="int"
 transient="false"
 volatile="false"
 value="7817"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_18"
 type="int"
 transient="false"
 volatile="false"
 value="7818"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_19"
 type="int"
 transient="false"
 volatile="false"
 value="7819"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_2"
 type="int"
 transient="false"
 volatile="false"
 value="782"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_20"
 type="int"
 transient="false"
 volatile="false"
 value="7820"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_21"
 type="int"
 transient="false"
 volatile="false"
 value="7821"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_22"
 type="int"
 transient="false"
 volatile="false"
 value="7822"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_23"
 type="int"
 transient="false"
 volatile="false"
 value="7823"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_24"
 type="int"
 transient="false"
 volatile="false"
 value="7824"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_25"
 type="int"
 transient="false"
 volatile="false"
 value="7825"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_26"
 type="int"
 transient="false"
 volatile="false"
 value="7826"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_27"
 type="int"
 transient="false"
 volatile="false"
 value="7827"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_28"
 type="int"
 transient="false"
 volatile="false"
 value="7828"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_29"
 type="int"
 transient="false"
 volatile="false"
 value="7829"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_3"
 type="int"
 transient="false"
 volatile="false"
 value="783"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_30"
 type="int"
 transient="false"
 volatile="false"
 value="7830"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_31"
 type="int"
 transient="false"
 volatile="false"
 value="7831"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_4"
 type="int"
 transient="false"
 volatile="false"
 value="784"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_5"
 type="int"
 transient="false"
 volatile="false"
 value="785"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_6"
 type="int"
 transient="false"
 volatile="false"
 value="786"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_7"
 type="int"
 transient="false"
 volatile="false"
 value="787"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_8"
 type="int"
 transient="false"
 volatile="false"
 value="788"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA7_8_9"
 type="int"
 transient="false"
 volatile="false"
 value="789"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_1"
 type="int"
 transient="false"
 volatile="false"
 value="81"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_2_2"
 type="int"
 transient="false"
 volatile="false"
 value="822"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_3_3_1"
 type="int"
 transient="false"
 volatile="false"
 value="8331"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_3_3_2"
 type="int"
 transient="false"
 volatile="false"
 value="8332"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA8_3_4_1"
 type="int"
 transient="false"
 volatile="false"
 value="8341"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA9_1"
 type="int"
 transient="false"
 volatile="false"
 value="91"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA9_2"
 type="int"
 transient="false"
 volatile="false"
 value="92"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA9_3"
 type="int"
 transient="false"
 volatile="false"
 value="93"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA9_4"
 type="int"
 transient="false"
 volatile="false"
 value="94"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA_3E1"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA_3E1_1"
 type="int"
 transient="false"
 volatile="false"
 value="101"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA_3E2"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_PDFA_3E3"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="com.pdftron.pdf.struct"
>
<class name="AttrObj"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AttrObj"
 type="com.pdftron.pdf.struct.AttrObj"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getOwner"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="ClassMap"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ClassMap"
 type="com.pdftron.pdf.struct.ClassMap"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="ContentItem"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getContainingStm"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getMCID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getPage"
 return="com.pdftron.pdf.Page"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParent"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRefObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStmOwner"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_MCID"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_MCR"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_OBJR"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_Unknown"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="RoleMap"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RoleMap"
 type="com.pdftron.pdf.struct.RoleMap"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="getDirectMap"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SElement"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SElement"
 type="com.pdftron.pdf.struct.SElement"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SElement"
 type="com.pdftron.pdf.struct.SElement"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dict" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getActualText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAlt"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAsContentItem"
 return="com.pdftron.pdf.struct.ContentItem"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAsStructElem"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getID"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumKids"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getParent"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getStructTreeRoot"
 return="com.pdftron.pdf.struct.STree"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasActualText"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasAlt"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasTitle"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isContentItem"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="STree"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="STree"
 type="com.pdftron.pdf.struct.STree"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="struct_dict" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="__Create"
 return="com.pdftron.pdf.struct.STree"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="getClassMap"
 return="com.pdftron.pdf.struct.ClassMap"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getElement"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getElement"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id_buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getKid"
 return="com.pdftron.pdf.struct.SElement"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumKids"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRoleMap"
 return="com.pdftron.pdf.struct.RoleMap"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="StructCompat"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="StructCompat.AttrObj"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetOwner"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="StructCompat.ClassMap"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="StructCompat.ContentItem"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetContainingStm"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMCID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPage"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetParent"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRefObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSDFObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStmOwner"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="StructCompat.RoleMap"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetDirectMap"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="StructCompat.SElement"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetActualText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAlt"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAsContentItem"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAsStructElem"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetID"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNumKids"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetParent"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSDFObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetStructTreeRoot"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTitle"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasActualText"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasAlt"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasTitle"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsContentItem"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SElementCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dict" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="StructCompat.STree"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="GetClassMap"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetElement"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="id" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetElement"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="id_buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetKid"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNumKids"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRoleMap"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
</package>
<package name="com.pdftron.sdf"
>
<class name="DictIterator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasNext"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="key"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="next"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="value"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="Doc"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Doc"
 type="com.pdftron.sdf.Doc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DocSnapshot"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DocSnapshot"
 type="com.pdftron.sdf.DocSnapshot"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="equals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="snapshot" type="com.pdftron.sdf.DocSnapshot">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHash"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="NameTree"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NameTree"
 type="com.pdftron.sdf.NameTree"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name_tree" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="create"
 return="com.pdftron.sdf.NameTree"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.sdf.DictIterator">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="find"
 return="com.pdftron.sdf.NameTree"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="com.pdftron.sdf.Doc">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIterator"
 return="com.pdftron.sdf.NameTreeIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIterator"
 return="com.pdftron.sdf.NameTreeIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="put"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="byte[]">
</parameter>
<parameter name="value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="NameTreeIterator"
 extends="com.pdftron.sdf.DictIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="NumberTree"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NumberTree"
 type="com.pdftron.sdf.NumberTree"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="number_tree" type="com.pdftron.sdf.Obj">
</parameter>
</constructor>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.sdf.DictIterator">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIterator"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getIterator"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSDFObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getValue"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="put"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="long">
</parameter>
<parameter name="value" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="NumberTreeIterator"
 extends="com.pdftron.sdf.DictIterator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="Obj"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="__Create"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="com.pdftron.sdf.DictIterator">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="eraseAt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="find"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="findObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="get"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAsPDFText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getAt"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBool"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDecodedStream"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDictIterator"
 return="com.pdftron.sdf.DictIterator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getDoc"
 return="com.pdftron.sdf.SDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getGenNum"
 return="short"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNumber"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getObjNum"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getOffset"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRawBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRawStream"
 return="com.pdftron.filters.Filter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="decrypt" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getRawStreamLength"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insert"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertMatrix"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="rect" type="java.awt.geom.Rectangle2D.Double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="insertText"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isArray"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isBool"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isContainer"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isDict"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isEqual"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="to" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isFree"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isIndirect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLoaded"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isMarked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isName"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isNull"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isNumber"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isStream"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isString"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBack"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackMatrix"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rect" type="java.awt.geom.Rectangle2D.Double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="pushBackText"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="put"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putMatrix"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="com.pdftron.common.Matrix2D">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putNull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putRect"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="rect" type="java.awt.geom.Rectangle2D.Double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="putText"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="rename"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="old_key" type="java.lang.String">
</parameter>
<parameter name="new_key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setBool"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="b" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setMark"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mark" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setNumber"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="n" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setStreamData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="size"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.FilterWriter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_array"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_bool"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_dict"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_name"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_null"
 type="int"
 transient="false"
 volatile="false"
 value="0"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_number"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_stream"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_string"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="ObjSet"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ObjSet"
 type="com.pdftron.sdf.ObjSet"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="createArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createFromJson"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PDFTronCustomSecurityHandler"
 extends="com.pdftron.sdf.SecurityHandler"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PDFTronCustomSecurityHandler"
 type="com.pdftron.sdf.PDFTronCustomSecurityHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="custom_id" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
</class>
<class name="ResultSnapshot"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ResultSnapshot"
 type="com.pdftron.sdf.ResultSnapshot"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="currentState"
 return="com.pdftron.sdf.DocSnapshot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isNullTransition"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isOk"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="previousState"
 return="com.pdftron.sdf.DocSnapshot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SDFCompat"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</class>
<class name="SDFCompat.DictIterator"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="HasNext"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Key"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Next"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Value"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SDFCompat.NameTree"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Find"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="doc" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetValue"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Put"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="byte[]">
</parameter>
<parameter name="value" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SDFCompat.NumberTree"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="EraseIt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetValue"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="NumberTreeCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="number_tree" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Put"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="long">
</parameter>
<parameter name="value" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SDFCompat.Obj"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Erase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="EraseAt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Find"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="FindObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Get"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAsPDFText"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetAt"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="index" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBool"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetBuffer"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDecodedStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDictIterator"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetDoc"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetGenNum"
 return="short"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetNumber"
 return="double"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetObjNum"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetOffset"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRawStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="decrypt" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRawStreamLength"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetType"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Insert"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="input_obj" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertArray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertBool"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertDict"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertMatrix"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertName"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertNull"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertNumber"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertRect"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InsertText"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="pos" type="int">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsArray"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsBool"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsContainer"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsDict"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsEqual"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="to" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsFree"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsIndirect"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsLoaded"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsMarked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsName"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsNull"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsNumber"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsStream"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsString"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBack"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="input_obj" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackArray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackBool"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackDict"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackMatrix"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackName"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackNull"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackNumber"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackRect"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PushBackText"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Put"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="input_obj" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutArray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutBool"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutDict"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutMatrix"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutName"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutNull"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutNumber"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutRect"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="x1" type="double">
</parameter>
<parameter name="y1" type="double">
</parameter>
<parameter name="x2" type="double">
</parameter>
<parameter name="y2" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="PutText"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Rename"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="old_key" type="java.lang.String">
</parameter>
<parameter name="new_key" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetBool"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="b" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetMark"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="mark" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetNumber"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="n" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetStreamData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="filter_chain" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetString"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Size"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SDFCompat.ObjSet"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="Create"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateArray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateBool"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateDict"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateName"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateNull"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateNumber"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SDFCompat.SDFDoc"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="ClearMarks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectArray"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectBool"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectDict"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectName"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectNull"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectNumber"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data" type="long">
</parameter>
<parameter name="filter_chain" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="filter_chain" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="CreateIndirectString"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="EnableDiskCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="use_cache" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHeader"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHintStream"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetLinearizationDict"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="obj_num" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetSecurityHandler"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetTrailer"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ImportObj"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="obj" type="long">
</parameter>
<parameter name="deep_copy" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ImportObjs"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="obj_list" type="long[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InitSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="InitStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsEncrypted"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsFullSaveRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsLinearized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Lock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="LockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemStreamCreateDoc"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mem_stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemStreamCreateMemFilt"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="size" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="MemStreamWriteData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="m" type="long">
</parameter>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ReadData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<parameter name="size" type="int">
</parameter>
<parameter name="buf_ptr" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="RemoveSecurity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SDFDocCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="java.lang.Object">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="java.lang.Object">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SaveStream"
 return="long[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="java.lang.Object">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetSecurityHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="handler" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Swap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="obj_num1" type="long">
</parameter>
<parameter name="obj_num2" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="TryLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="TryLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Unlock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="UnlockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="XRefSize"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SDFCompat.SecurityHandler"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="ChangeMasterPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ChangeRevisionNumber"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="rev_num" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="ChangeUserPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Clone"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="Destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetEncryptionAlgorithmID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetHandlerDocName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetKeyLength"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetMasterPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetPermission"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetRevisionNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="GetUserPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsAES"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsAES"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="stream" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsMasterPasswordRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsRC4"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="IsUserPasswordRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SecurityHandlerCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="crypt_type" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SecurityHandlerCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key_len" type="int">
</parameter>
<parameter name="enc_code" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SecurityHandlerCreate"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetEncryptMetadata"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="encrypt_metadata" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetModified"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="is_modified" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="SetPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="perm" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="SDFDoc"
 extends="com.pdftron.sdf.Doc"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filepath" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="buf" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<constructor name="SDFDoc"
 type="com.pdftron.sdf.SDFDoc"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</constructor>
<method name="__Create"
 return="com.pdftron.sdf.SDFDoc"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetRefHandle"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__SetRef"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="canSaveToPath"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="flags" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="canSaveToPath"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="clearMarks"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectArray"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectBool"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectName"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectNull"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectNumber"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.filters.FilterReader">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="com.pdftron.filters.FilterReader">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<parameter name="filter_chain" type="com.pdftron.filters.Filter">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createIndirectString"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="str" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="enableDiskCaching"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="use_cache" type="boolean">
</parameter>
</method>
<method name="getFileName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHeader"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getHintStream"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getLinearizationDict"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj_num" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getSecurityHandler"
 return="com.pdftron.sdf.SecurityHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTrailer"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="hasRepairedXRef"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="importObj"
 return="com.pdftron.sdf.Obj"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj" type="com.pdftron.sdf.Obj">
</parameter>
<parameter name="deep_copy" type="boolean">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="importObjs"
 return="com.pdftron.sdf.Obj[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj_list" type="com.pdftron.sdf.Obj[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="importObjs"
 return="com.pdftron.sdf.Obj[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj_list" type="com.pdftron.sdf.Obj[]">
</parameter>
<parameter name="exclusion_list" type="com.pdftron.sdf.Obj[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="custom_data" type="java.lang.Object">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="initStdSecurityHandler"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordBuffer" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isEncrypted"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isFullSaveRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isLinearized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="isModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="lock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="lockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="removeSecurity"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="path" type="java.lang.String">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="flags" type="long">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="save"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="saveMode" type="com.pdftron.sdf.SDFDoc.SaveMode">
</parameter>
<parameter name="progress" type="com.pdftron.sdf.ProgressMonitor">
</parameter>
<parameter name="header" type="java.lang.String">
</parameter>
<parameter name="size" type="int">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="setSecurityHandler"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="handler" type="com.pdftron.sdf.SecurityHandler">
</parameter>
</method>
<method name="swap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="obj_num1" type="long">
</parameter>
<parameter name="obj_num2" type="long">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="timedLock"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="timedLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="milliseconds" type="int">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="tryLockRead"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlock"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="unlockRead"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="xRefSize"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<field name="e_compatibility"
 type="int"
 transient="false"
 volatile="false"
 value="32"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_hex_strings"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_incremental"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_linearized"
 type="int"
 transient="false"
 volatile="false"
 value="16"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_omit_xref"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
<field name="e_remove_unused"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="deprecated"
 visibility="public"
>
</field>
</class>
<class name="SDFDoc.SaveMode"
 extends="java.lang.Enum"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValue"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="com.pdftron.sdf.SDFDoc.SaveMode"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.pdftron.sdf.SDFDoc.SaveMode[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="SecurityHandler"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SecurityHandler"
 type="com.pdftron.sdf.SecurityHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="crypt_type" type="int">
</parameter>
</constructor>
<constructor name="SecurityHandler"
 type="com.pdftron.sdf.SecurityHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key_len" type="int">
</parameter>
<parameter name="enc_code" type="int">
</parameter>
</constructor>
<constructor name="SecurityHandler"
 type="com.pdftron.sdf.SecurityHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="__Create"
 return="com.pdftron.sdf.SecurityHandler"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl" type="long">
</parameter>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="__SetRefHandle"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ref" type="java.lang.Object">
</parameter>
</method>
<method name="changeMasterPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="changeMasterPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordBuffer" type="byte[]">
</parameter>
</method>
<method name="changeRevisionNumber"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rev_num" type="int">
</parameter>
</method>
<method name="changeUserPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="changeUserPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordBuffer" type="byte[]">
</parameter>
</method>
<method name="clone"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEncryptionAlgorithmID"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHandlerDocName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKeyLength"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMasterPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermission"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="int">
</parameter>
</method>
<method name="getRevisionNumber"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAES"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAES"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="com.pdftron.sdf.Obj">
</parameter>
</method>
<method name="isMasterPasswordRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isModified"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isRC4"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isUserPasswordRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setEncryptMetadata"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encrypt_metadata" type="boolean">
</parameter>
</method>
<method name="setModified"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setModified"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="is_modified" type="boolean">
</parameter>
</method>
<method name="setPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="perm" type="int">
</parameter>
<parameter name="value" type="boolean">
</parameter>
</method>
<field name="e_AES"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_AES_256"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RC4_128"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_RC4_40"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_access_support"
 type="int"
 transient="false"
 volatile="false"
 value="9"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_assemble_doc"
 type="int"
 transient="false"
 volatile="false"
 value="10"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_doc_modify"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_doc_open"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_extract_content"
 type="int"
 transient="false"
 volatile="false"
 value="6"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_fill_forms"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_mod_annot"
 type="int"
 transient="false"
 volatile="false"
 value="7"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_owner"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_print"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="e_print_high"
 type="int"
 transient="false"
 volatile="false"
 value="5"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="SignatureHandler"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SignatureHandler"
 type="com.pdftron.sdf.SignatureHandler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="appendData"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="createSignature"
 return="byte[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="reset"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
<class name="UndoManager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UndoManager"
 type="com.pdftron.sdf.UndoManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="impl_ptr" type="long">
</parameter>
</constructor>
<method name="__GetHandle"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="canRedo"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="canUndo"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="discardAllSnapshots"
 return="com.pdftron.sdf.DocSnapshot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNextRedoSnapshot"
 return="com.pdftron.sdf.DocSnapshot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="getNextUndoSnapshot"
 return="com.pdftron.sdf.DocSnapshot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="redo"
 return="com.pdftron.sdf.ResultSnapshot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="takeSnapshot"
 return="com.pdftron.sdf.ResultSnapshot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
<method name="undo"
 return="com.pdftron.sdf.ResultSnapshot"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="PDFNetException" type="com.pdftron.common.PDFNetException">
</exception>
</method>
</class>
</package>
</api>
